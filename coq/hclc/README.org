* Calculus of Linear Constructions

** Sort relations

*** Order
#+BEGIN_SRC
≤  U  L
U  T  T
L  F  T
#+END_SRC

*** Addition
#+BEGIN_SRC
⋅  U  L
U  U  L
L  L  L
#+END_SRC

** Core typing rules

#+BEGIN_SRC
Γ ▹ U
————————————————
Γ ⊢ s@i :U U@i+1


Γ ▹ U    Γ ⊢ A :U s@i    [Γ, x :s A] ⊢ B :U r@i
———————————————————————————————————————————————
Γ ⊢ Πt (x :s A :r B) :U t@i


Γ ▹ U
———————————————————
Γ, x :s A ⊢ x :s A


Γ ▹ t     [Γ] ⊢ Πt (x :s A :r B) :U t@i     Γ, x :s A ⊢ n :r B
———————————————————————————————————————————————————————————————
Γ ⊢ λt (x :s A).n :t Πt (x :s A :r B)


Γ2 ▹ s    Γ1 ⊢ m :t Πt (x :s A :r B)     Γ2 ⊢ n :s A
—————————————————————————————————————————————————————
Γ1 ∘ Γ2 ⊢ m n :r B[n/x]


Γ ⊢ m :s A     [Γ] ⊢ B :U s@i     A ⪯ B
————————————————————————————————————————
Γ ⊢ m :s B
#+END_SRC

** Data typing rules

#+BEGIN_SRC
Γ ▹ U
————————————————
Γ ⊢ unit :U U@0


Γ ▹ U
———————————————
Γ ⊢ () :U unit


Γ1 ⊢ m :U unit     Γ2 ⊢ n :s A
———————————————————————————————
Γ1 ∘ Γ2 ⊢ let () = m in n :s A


Γ ▹ U     Γ ⊢ A :U s@i     [Γ, x :s A] ⊢ B :U r@i     s ⋅ r ≤ t
———————————————————————————————————————————————————————————————
Γ ⊢ Σt (x :s A :r B) :U t@i


Γ1 ▹ s     Γ2 ▹ r
[Γ1 ∘ Γ2] ⊢ Σt (x :s A :r B) :U t@i      Γ1 ⊢ m :s A      Γ2 ⊢ n :r B[m/x]
——————————————————————————————————————————————————————————————————————————
Γ1 ∘ Γ2 ⊢ ⟨m, n⟩t :t Σt (x :s A :r B)


Γ1 ⊢ m :t Σt (x :s A :r B)     Γ1 ▹ k     t ≤ k
[Γ2, z :k Σt (x :s A :r B)] ⊢ C :U q@i
Γ2, x :s A, y :r B ⊢ n :q C[⟨x, y⟩/z]
————————————————————————————————————————————————
Γ1 ∘ Γ2 ⊢ let ⟨x, y⟩ = m in n :q C[m/z]
#+END_SRC
