[(DData ("ref_msg", (PTl ([], (Tl ([], (Type U))))),
    [(DCons ("GET", (PTl ([], (Tl ([], (Id "ref_msg")))))));
      (DCons ("SET", (PTl ([], (Tl ([], (Id "ref_msg")))))));
      (DCons ("FREE", (PTl ([], (Tl ([], (Id "ref_msg")))))))]
    ));
  (DFun ("ref_t", (Pi (U, [(None, (Type U))], Proto)),
     [(Cl
         ([(PVar (Some "A"))],
          (Some (Act (true, [((Some "msg"), (Id "ref_msg"))],
                   (Match ([(Id "msg")],
                      [(Cl
                          ([(PCons ("GET", []))],
                           (Some (Act (false, [(None, (Id "A"))],
                                    (App [(Id "ref_t"); (Id "A")]))))));
                        (Cl
                           ([(PCons ("SET", []))],
                            (Some (Act (true, [(None, (Id "A"))],
                                     (App [(Id "ref_t"); (Id "A")]))))));
                        (Cl ([(PCons ("FREE", []))], (Some End)))]
                      ))
                   )))))
       ]
     ));
  (DFun ("ref_handler",
     (Pi (U, [((Some "A"), (Type U))],
        (Pi (U, [(None, (Id "A"))],
           (Pi (L, [(None, (Ch (true, (App [(Id "ref_t"); (Id "A")]))))],
              (Id "unit")))
           ))
        )),
     [(Cl
         ([(PVar (Some "A")); (PVar (Some "m")); (PVar (Some "ch"))],
          (Some (Match ([(Recv (Id "ch"))],
                   [(Cl
                       ([(PCons ("sig_intro",
                            [(PCons ("GET", [])); (PVar (Some "ch"))]))
                          ],
                        (Some (App
                                 [(Id "ref_handler"); (Id "_"); (Id "m");
                                   (App [(Send (Id "ch")); (Id "m")])]))));
                     (Cl
                        ([(PCons ("sig_intro",
                             [(PCons ("SET", [])); (PVar (Some "ch"))]))
                           ],
                         (Some (Let (
                                  (PCons ("sig_intro",
                                     [(PVar (Some "m")); (PVar (Some "ch"))]
                                     )),
                                  (Recv (Id "ch")),
                                  (App
                                     [(Id "ref_handler"); (Id "A"); (
                                       Id "m"); (Id "ch")])
                                  )))));
                     (Cl
                        ([(PCons ("sig_intro",
                             [(PCons ("FREE", [])); (PVar (Some "ch"))]))
                           ],
                         (Some (Close (Id "ch")))))
                     ]
                   )))))
       ]
     ));
  (DFun ("mk_ref",
     (Pi (U, [((Some "A"), (Type U))],
        (Pi (U, [(None, (Id "A"))],
           (Pi (U, [(None, Main)],
              (App
                 [(Id "tnsr"); (Ch (false, (App [(Id "ref_t"); (Id "A")])));
                   Main])
              ))
           ))
        )),
     [(Cl
         ([(PVar (Some "A")); (PVar (Some "m")); (PVar (Some "x"))],
          (Some (Fork ("ref", (Ch (true, (App [(Id "ref_t"); (Id "A")]))),
                   (Id "x"),
                   (App [(Id "ref_handler"); (Id "A"); (Id "m"); (Id "ref")])
                   )))))
       ]
     ));
  (DFun ("set_ref",
     (Pi (U, [((Some "A"), (Type U))],
        (Pi (U, [(None, (Id "A"))],
           (Pi (L, [(None, (Ch (false, (App [(Id "ref_t"); (Id "A")]))))],
              (Ch (false, (App [(Id "ref_t"); (Id "A")])))))
           ))
        )),
     [(Cl
         ([(PVar (Some "A")); (PVar (Some "m")); (PVar (Some "ref"))],
          (Some (App [(Send (App [(Send (Id "ref")); (Id "SET")])); (Id "m")]))))
       ]
     ));
  (DFun ("get_ref",
     (Pi (U, [((Some "A"), (Type U))],
        (Pi (L, [(None, (Ch (false, (App [(Id "ref_t"); (Id "A")]))))],
           (App
              [(Id "sig"); (Id "A");
                (Fun (None, None,
                   [(Cl
                       ([(PVar None)],
                        (Some (Ch (false, (App [(Id "ref_t"); (Id "A")]))))))
                     ]
                   ))
                ])
           ))
        )),
     [(Cl
         ([(PVar (Some "A")); (PVar (Some "ref"))],
          (Some (Recv (App [(Send (Id "ref")); (Id "GET")])))))
       ]
     ));
  (DFun ("free_ref",
     (Pi (U, [((Some "A"), (Type U))],
        (Pi (L, [(None, (Ch (false, (App [(Id "ref_t"); (Id "A")]))))],
           (Id "unit")))
        )),
     [(Cl
         ([(PVar (Some "A")); (PVar (Some "ref"))],
          (Some (Close (App [(Send (Id "ref")); (Id "FREE")])))))
       ]
     ));
  (DTm ((Some "main"), None,
     (Let (
        (PCons ("tnsr_intro", [(PVar (Some "ref")); (PVar (Some "main"))])),
        (App [(Id "mk_ref"); (Id "_"); (Id "zero"); (Id "main")]),
        (Let (
           (PCons ("sig_intro", [(PVar (Some "msg1")); (PVar (Some "ref"))])),
           (App [(Id "get_ref"); (Id "_"); (Id "ref")]),
           (Let ((PCons ("tt", [])),
              (App [(Id "free_ref"); (Id "_"); (Id "ref")]), (Id "main")))
           ))
        ))
     ))
  ]
parse success---------------------------------

data unit_d1 : U
  | tt_c1 : unit_d1

data bool_d2 : U
  | true_c2 : bool_d2
  | false_c3 : bool_d2

data nat_d3 : U
  | zero_c4 : nat_d3
  | succ_c5 : nat_d3 -> nat_d3

def (addn_3 := addn_150) : nat_d3 -> nat_d3 -> nat_d3
  | zero_c4 x_154 => x_154
  | (succ_c5 x_155) y_156 => (succ_c5 ((addn_150) x_155 y_156))

data option_d4 (A_157 : U) : U
  | none_c6 (A_158 : U) : (option_d4 A_158)
  | some_c7 (A_159 : U) : A_159 -> (option_d4 A_159)

data list_d5 (A_161 : U) : U
  | nil_c8 (A_162 : U) : (list_d5 A_162)
  | cons_c9 (A_163 : U) : A_163 -> (list_d5 A_163) -> (list_d5 A_163)

data vec_d6 (A_167 : U) : nat_d3 -> U
  | vnil_c10 (A_169 : U) : (vec_d6 A_169 zero_c4)
  | vcons_c11 (A_170 : U) :
    ∀ (n_171 : nat_d3) ->
      A_170 -> (vec_d6 A_170 n_171) -> (vec_d6 A_170 (succ_c5 n_171))

data ex_d7 (A_176 : U) (P_177 : A_176 -> U) : U
  | ex_intro_c12 (A_179 : U) (P_180 : A_179 -> U) :
    ∀ (x_182 : A_179) -> ((P_180) x_182) -> (ex_d7 A_179 P_180)

data sig_d8 (A_184 : U) (P_185 : A_184 -> L) : L
  | sig_intro_c13 (A_187 : U) (P_188 : A_187 -> L) :
    ∀ (x_190 : A_187) -> ((P_188) x_190) -> (sig_d8 A_187 P_188)

data tnsr_d9 (A_192 : L) (B_193 : L) : L
  | tnsr_intro_c14 (A_194 : L) (B_195 : L) :
    A_194 -> B_195 -> (tnsr_d9 A_194 B_195)

data box_d10 (A_199 : U) : L
  | box_intro_c15 (A_200 : U) : A_200 -> (box_d10 A_200)

data ascii_d11 : U
  | Ascii_c16 :
    bool_d2 ->
      bool_d2 ->
        bool_d2 ->
          bool_d2 -> bool_d2 -> bool_d2 -> bool_d2 -> bool_d2 -> ascii_d11

data string_d12 : U
  | EmptyString_c17 : string_d12
  | String_c18 : ascii_d11 -> string_d12 -> string_d12

def (stdin_rec_60 := stdin_rec_241) : unit_d1 -> proto
  | tt_c1 =>
    !(b_243 : bool_d2) ⋅
      (match b_243 return ??1{main_1; addn_3; stdin_rec_241; b_243} with
        | true_c2 => ?string_d12 ⋅ ((stdin_rec_241) tt_c1)
        | false_c3 => end)

def (stdout_rec_64 := stdout_rec_245) : unit_d1 -> proto
  | tt_c1 =>
    !(b_247 : bool_d2) ⋅
      (match b_247 return
         ??2{main_1; addn_3; stdin_rec_60; stdout_rec_245; b_247}
       with
        | true_c2 => !string_d12 ⋅ ((stdout_rec_245) tt_c1)
        | false_c3 => end)

def (stderr_rec_68 := stderr_rec_249) : unit_d1 -> proto
  | tt_c1 =>
    !(b_251 : bool_d2) ⋅
      (match b_251 return
         ??3{main_1; addn_3; stdin_rec_60; stdout_rec_64; stderr_rec_249;
             b_251}
       with
        | true_c2 => !string_d12 ⋅ ((stderr_rec_249) tt_c1)
        | false_c3 => end)

def stdin_t_72 := ((stdin_rec_60) tt_c1)

def stdout_t_73 := ((stdout_rec_64) tt_c1)

def stderr_t_74 := ((stderr_rec_68) tt_c1)

def (readline_75 := readline_253) :
  ch<stdin_t_72> -> (sig_d8 string_d12 (fun
                                         | _259 => ch<stdin_t_72>))
  | ch_260 => recv ((send ch_260) true_c2)

def (close_in_80 := close_in_261) : ch<stdin_t_72> -> unit_d1
  | ch_263 => close ((send ch_263) false_c3)

def (printline_83 := printline_264) :
  ch<stdout_t_73> -> string_d12 -o ch<stdout_t_73>
  | ch_268 s_269 => ((send ((send ch_268) true_c2)) s_269)

def (close_out_88 := close_out_270) : ch<stdout_t_73> -> unit_d1
  | ch_272 => close ((send ch_272) false_c3)

def (printerr_91 := printerr_273) :
  ch<stderr_t_74> -> string_d12 -o ch<stderr_t_74>
  | ch_277 s_278 => ((send ((send ch_277) true_c2)) s_278)

def (close_err_96 := close_err_279) : ch<stderr_t_74> -> unit_d1
  | ch_281 => close ((send ch_281) false_c3)

data ref_msg_d13 : U
  | GET_c19 : ref_msg_d13
  | SET_c20 : ref_msg_d13
  | FREE_c21 : ref_msg_d13

def (ref_t_99 := ref_t_282) : U -> proto
  | A_284 =>
    ?(msg_285 : ref_msg_d13) ⋅
      (match msg_285 return
         ??4{main_1; addn_3; stdin_rec_60; stdout_rec_64; stderr_rec_68;
             stdin_t_72; stdout_t_73; stderr_t_74; readline_75; close_in_80;
             printline_83; close_out_88; printerr_91; close_err_96;
             ref_t_282; A_284; msg_285}
       with
        | GET_c19 => !A_284 ⋅ ((ref_t_282) A_284)
        | SET_c20 => ?A_284 ⋅ ((ref_t_282) A_284)
        | FREE_c21 => end)

def (ref_handler_105 := ref_handler_288) :
  ∀ (A_289 : U) -> A_289 -> ch<((ref_t_99) A_289)> -o unit_d1
  | A_294 m_295 ch_296 =>
    (match recv ch_296 return
       ??7{main_1; addn_3; stdin_rec_60; stdout_rec_64; stderr_rec_68;
           stdin_t_72; stdout_t_73; stderr_t_74; readline_75; close_in_80;
           printline_83; close_out_88; printerr_91; close_err_96; ref_t_99;
           ref_handler_288; A_294; m_295; ch_296}
     with
      | (sig_intro_c13 GET_c19 ch_297) =>
        ((ref_handler_288)
          ??5{main_1; addn_3; stdin_rec_60; stdout_rec_64; stderr_rec_68;
              stdin_t_72; stdout_t_73; stderr_t_74; readline_75; close_in_80;
              printline_83; close_out_88; printerr_91; close_err_96;
              ref_t_99; ref_handler_288; A_294; m_295; ch_296; ch_297}
          m_295 ((send ch_297) m_295))
      | (sig_intro_c13 SET_c20 ch_298) =>
        (match recv ch_298 return
           ??6{main_1; addn_3; stdin_rec_60; stdout_rec_64; stderr_rec_68;
               stdin_t_72; stdout_t_73; stderr_t_74; readline_75;
               close_in_80; printline_83; close_out_88; printerr_91;
               close_err_96; ref_t_99; ref_handler_288; A_294; m_295; ch_296;
               ch_298; m_114; ch_115}
         with
          | (sig_intro_c13 m_299 ch_300) =>
            ((ref_handler_288) A_294 m_299 ch_300))
      | (sig_intro_c13 FREE_c21 ch_301) => close ch_301)

def (mk_ref_117 := mk_ref_302) :
  ∀ (A_303 : U) -> A_303 -> @main -> (tnsr_d9 hc<((ref_t_99) A_303)> @main)
  | A_308 m_309 x_310 =>
    fork (ref_311 : ch<((ref_t_99) A_308)>) <- x_310 in
    ((ref_handler_105) A_308 m_309 ref_311)

def (set_ref_125 := set_ref_312) :
  ∀ (A_313 : U) ->
    A_313 -> hc<((ref_t_99) A_313)> -o hc<((ref_t_99) A_313)>
  | A_318 m_319 ref_320 => ((send ((send ref_320) SET_c20)) m_319)

def (get_ref_132 := get_ref_321) :
  ∀ (A_322 : U) ->
    hc<((ref_t_99) A_322)> -o
      (sig_d8 A_322 (fun
                      | _329 => hc<((ref_t_99) A_322)>))
  | A_330 ref_331 => recv ((send ref_331) GET_c19)

def (free_ref_139 := free_ref_332) :
  ∀ (A_333 : U) -> hc<((ref_t_99) A_333)> -o unit_d1
  | A_336 ref_337 => close ((send ref_337) FREE_c21)

def main_144 :=
  (match
     ((mk_ref_117)
       ??8{main_1; addn_3; stdin_rec_60; stdout_rec_64; stderr_rec_68;
           stdin_t_72; stdout_t_73; stderr_t_74; readline_75; close_in_80;
           printline_83; close_out_88; printerr_91; close_err_96; ref_t_99;
           ref_handler_105; mk_ref_117; set_ref_125; get_ref_132;
           free_ref_139}
       zero_c4 main_1)
   return
     ??13{main_1; addn_3; stdin_rec_60; stdout_rec_64; stderr_rec_68;
          stdin_t_72; stdout_t_73; stderr_t_74; readline_75; close_in_80;
          printline_83; close_out_88; printerr_91; close_err_96; ref_t_99;
          ref_handler_105; mk_ref_117; set_ref_125; get_ref_132;
          free_ref_139; ref_145; main_146}
   with
    | (tnsr_intro_c14 ref_338 main_339) =>
      (match
         ((get_ref_132)
           ??9{main_1; addn_3; stdin_rec_60; stdout_rec_64; stderr_rec_68;
               stdin_t_72; stdout_t_73; stderr_t_74; readline_75;
               close_in_80; printline_83; close_out_88; printerr_91;
               close_err_96; ref_t_99; ref_handler_105; mk_ref_117;
               set_ref_125; get_ref_132; free_ref_139; ref_338; main_339}
           ref_338)
       return
         ??12{main_1; addn_3; stdin_rec_60; stdout_rec_64; stderr_rec_68;
              stdin_t_72; stdout_t_73; stderr_t_74; readline_75; close_in_80;
              printline_83; close_out_88; printerr_91; close_err_96;
              ref_t_99; ref_handler_105; mk_ref_117; set_ref_125;
              get_ref_132; free_ref_139; ref_338; main_339; msg1_147; ref_148}
       with
        | (sig_intro_c13 msg1_340 ref_341) =>
          (match
             ((free_ref_139)
               ??10{main_1; addn_3; stdin_rec_60; stdout_rec_64;
                    stderr_rec_68; stdin_t_72; stdout_t_73; stderr_t_74;
                    readline_75; close_in_80; printline_83; close_out_88;
                    printerr_91; close_err_96; ref_t_99; ref_handler_105;
                    mk_ref_117; set_ref_125; get_ref_132; free_ref_139;
                    ref_338; main_339; msg1_340; ref_341}
               ref_341)
           return
             ??11{main_1; addn_3; stdin_rec_60; stdout_rec_64; stderr_rec_68;
                  stdin_t_72; stdout_t_73; stderr_t_74; readline_75;
                  close_in_80; printline_83; close_out_88; printerr_91;
                  close_err_96; ref_t_99; ref_handler_105; mk_ref_117;
                  set_ref_125; get_ref_132; free_ref_139; ref_338; main_339;
                  msg1_340; ref_341}
           with
            | tt_c1 => main_339)))


trans01 success-------------------------------

data unit_d1 : U
  | tt_c1 : unit_d1

data bool_d2 : U
  | true_c2 : bool_d2
  | false_c3 : bool_d2

data nat_d3 : U
  | zero_c4 : nat_d3
  | succ_c5 : nat_d3 -> nat_d3

def (addn_3 := addn_8402) : nat_d3 -> nat_d3 -> nat_d3
  | zero_c4 x_8406 => x_8406
  | (succ_c5 x_8407) y_8408 => (succ_c5 ((addn_8402) x_8407 y_8408))

data option_d4 (A_8409 : U) : U
  | none_c6 (A_8410 : U) : (option_d4 A_8410)
  | some_c7 (A_8411 : U) : A_8411 -> (option_d4 A_8411)

data list_d5 (A_8413 : U) : U
  | nil_c8 (A_8414 : U) : (list_d5 A_8414)
  | cons_c9 (A_8415 : U) : A_8415 -> (list_d5 A_8415) -> (list_d5 A_8415)

data vec_d6 (A_8419 : U) : nat_d3 -> U
  | vnil_c10 (A_8421 : U) : (vec_d6 A_8421 zero_c4)
  | vcons_c11 (A_8422 : U) :
    ∀ (n_8423 : nat_d3) ->
      A_8422 -> (vec_d6 A_8422 n_8423) -> (vec_d6 A_8422 (succ_c5 n_8423))

data ex_d7 (A_8428 : U) (P_8429 : A_8428 -> U) : U
  | ex_intro_c12 (A_8431 : U) (P_8432 : A_8431 -> U) :
    ∀ (x_8434 : A_8431) -> ((P_8432) x_8434) -> (ex_d7 A_8431 P_8432)

data sig_d8 (A_8436 : U) (P_8437 : A_8436 -> L) : L
  | sig_intro_c13 (A_8439 : U) (P_8440 : A_8439 -> L) :
    ∀ (x_8442 : A_8439) -> ((P_8440) x_8442) -> (sig_d8 A_8439 P_8440)

data tnsr_d9 (A_8444 : L) (B_8445 : L) : L
  | tnsr_intro_c14 (A_8446 : L) (B_8447 : L) :
    A_8446 -> B_8447 -> (tnsr_d9 A_8446 B_8447)

data box_d10 (A_8451 : U) : L
  | box_intro_c15 (A_8452 : U) : A_8452 -> (box_d10 A_8452)

data ascii_d11 : U
  | Ascii_c16 :
    bool_d2 ->
      bool_d2 ->
        bool_d2 ->
          bool_d2 -> bool_d2 -> bool_d2 -> bool_d2 -> bool_d2 -> ascii_d11

data string_d12 : U
  | EmptyString_c17 : string_d12
  | String_c18 : ascii_d11 -> string_d12 -> string_d12

def (stdin_rec_60 := stdin_rec_8493) : unit_d1 -> proto
  | tt_c1 =>
    !(b_8495 : bool_d2) ⋅
      (match b_8495 return proto with
        | true_c2 => ?string_d12 ⋅ ((stdin_rec_8493) tt_c1)
        | false_c3 => end)

def (stdout_rec_64 := stdout_rec_8497) : unit_d1 -> proto
  | tt_c1 =>
    !(b_8499 : bool_d2) ⋅
      (match b_8499 return proto with
        | true_c2 => !string_d12 ⋅ ((stdout_rec_8497) tt_c1)
        | false_c3 => end)

def (stderr_rec_68 := stderr_rec_8501) : unit_d1 -> proto
  | tt_c1 =>
    !(b_8503 : bool_d2) ⋅
      (match b_8503 return proto with
        | true_c2 => !string_d12 ⋅ ((stderr_rec_8501) tt_c1)
        | false_c3 => end)

def stdin_t_72 := ((stdin_rec_60) tt_c1)

def stdout_t_73 := ((stdout_rec_64) tt_c1)

def stderr_t_74 := ((stderr_rec_68) tt_c1)

def (readline_75 := readline_8505) :
  ch<stdin_t_72> -> (sig_d8 string_d12 (fun
                                         | _8511 => ch<stdin_t_72>))
  | ch_8512 => recv ((send ch_8512) true_c2)

def (close_in_80 := close_in_8513) : ch<stdin_t_72> -> unit_d1
  | ch_8515 => close ((send ch_8515) false_c3)

def (printline_83 := printline_8516) :
  ch<stdout_t_73> -> string_d12 -o ch<stdout_t_73>
  | ch_8520 s_8521 => ((send ((send ch_8520) true_c2)) s_8521)

def (close_out_88 := close_out_8522) : ch<stdout_t_73> -> unit_d1
  | ch_8524 => close ((send ch_8524) false_c3)

def (printerr_91 := printerr_8525) :
  ch<stderr_t_74> -> string_d12 -o ch<stderr_t_74>
  | ch_8529 s_8530 => ((send ((send ch_8529) true_c2)) s_8530)

def (close_err_96 := close_err_8531) : ch<stderr_t_74> -> unit_d1
  | ch_8533 => close ((send ch_8533) false_c3)

data ref_msg_d13 : U
  | GET_c19 : ref_msg_d13
  | SET_c20 : ref_msg_d13
  | FREE_c21 : ref_msg_d13

def (ref_t_99 := ref_t_8534) : U -> proto
  | A_8536 =>
    ?(msg_8537 : ref_msg_d13) ⋅
      (match msg_8537 return proto with
        | GET_c19 => !A_8536 ⋅ ((ref_t_8534) A_8536)
        | SET_c20 => ?A_8536 ⋅ ((ref_t_8534) A_8536)
        | FREE_c21 => end)

def (ref_handler_105 := ref_handler_8540) :
  ∀ (A_8541 : U) -> A_8541 -> ch<((ref_t_99) A_8541)> -o unit_d1
  | A_8546 m_8547 ch_8548 =>
    (match recv ch_8548 return unit_d1 with
      | (sig_intro_c13 GET_c19 ch_8549) =>
        ((ref_handler_8540) A_8546 m_8547 ((send ch_8549) m_8547))
      | (sig_intro_c13 SET_c20 ch_8550) =>
        (match recv ch_8550 return unit_d1 with
          | (sig_intro_c13 m_8551 ch_8552) =>
            ((ref_handler_8540) A_8546 m_8551 ch_8552))
      | (sig_intro_c13 FREE_c21 ch_8553) => close ch_8553)

def (mk_ref_117 := mk_ref_8554) :
  ∀ (A_8555 : U) ->
    A_8555 -> @main -> (tnsr_d9 hc<((ref_t_99) A_8555)> @main)
  | A_8560 m_8561 x_8562 =>
    fork (ref_8563 : ch<((ref_t_99) A_8560)>) <- x_8562 in
    ((ref_handler_105) A_8560 m_8561 ref_8563)

def (set_ref_125 := set_ref_8564) :
  ∀ (A_8565 : U) ->
    A_8565 -> hc<((ref_t_99) A_8565)> -o hc<((ref_t_99) A_8565)>
  | A_8570 m_8571 ref_8572 => ((send ((send ref_8572) SET_c20)) m_8571)

def (get_ref_132 := get_ref_8573) :
  ∀ (A_8574 : U) ->
    hc<((ref_t_99) A_8574)> -o
      (sig_d8 A_8574 (fun
                       | _8581 => hc<((ref_t_99) A_8574)>))
  | A_8582 ref_8583 => recv ((send ref_8583) GET_c19)

def (free_ref_139 := free_ref_8584) :
  ∀ (A_8585 : U) -> hc<((ref_t_99) A_8585)> -o unit_d1
  | A_8588 ref_8589 => close ((send ref_8589) FREE_c21)

def main_144 :=
  (match ((mk_ref_117) nat_d3 zero_c4 main_1) return @main with
    | (tnsr_intro_c14 ref_8590 main_8591) =>
      (match ((get_ref_132) nat_d3 ref_8590) return @main with
        | (sig_intro_c13 msg1_8592 ref_8593) =>
          (match ((free_ref_139) nat_d3 ref_8593) return @main with
            | tt_c1 => main_8591)))


trans1e success-------------------------------

def (addn_3 := addn_15079) : nat_d3 -> nat_d3 -> nat_d3
  | zero_c4 x_15083 => x_15083
  | (succ_c5 x_15084) y_15085 => (succ_c5 ((addn_15079) x_15084 y_15085))

def (stdin_rec_60 := stdin_rec_15086) : unit_d1 -> proto
  | tt_c1 =>
    !(b_15088 : bool_d2) ⋅
      (match b_15088 return proto with
        | true_c2 => ?string_d12 ⋅ ((stdin_rec_15086) tt_c1)
        | false_c3 => end)

def (stdout_rec_64 := stdout_rec_15090) : unit_d1 -> proto
  | tt_c1 =>
    !(b_15092 : bool_d2) ⋅
      (match b_15092 return proto with
        | true_c2 => !string_d12 ⋅ ((stdout_rec_15090) tt_c1)
        | false_c3 => end)

def (stderr_rec_68 := stderr_rec_15094) : unit_d1 -> proto
  | tt_c1 =>
    !(b_15096 : bool_d2) ⋅
      (match b_15096 return proto with
        | true_c2 => !string_d12 ⋅ ((stderr_rec_15094) tt_c1)
        | false_c3 => end)

def stdin_t_72 :=
  !(b_15098 : bool_d2) ⋅
    (match b_15098 return proto with
      | true_c2 =>
        ?string_d12 ⋅
          (((fun stdin_rec_15104 : unit_d1 -> proto
              | tt_c1 =>
                !(b_15108 : bool_d2) ⋅
                  (match b_15108 return proto with
                    | true_c2 => ?string_d12 ⋅ ((stdin_rec_15104) tt_c1)
                    | false_c3 => end)))
            tt_c1)
      | false_c3 => end)

def stdout_t_73 :=
  !(b_15110 : bool_d2) ⋅
    (match b_15110 return proto with
      | true_c2 =>
        !string_d12 ⋅
          (((fun stdout_rec_15116 : unit_d1 -> proto
              | tt_c1 =>
                !(b_15120 : bool_d2) ⋅
                  (match b_15120 return proto with
                    | true_c2 => !string_d12 ⋅ ((stdout_rec_15116) tt_c1)
                    | false_c3 => end)))
            tt_c1)
      | false_c3 => end)

def stderr_t_74 :=
  !(b_15122 : bool_d2) ⋅
    (match b_15122 return proto with
      | true_c2 =>
        !string_d12 ⋅
          (((fun stderr_rec_15128 : unit_d1 -> proto
              | tt_c1 =>
                !(b_15132 : bool_d2) ⋅
                  (match b_15132 return proto with
                    | true_c2 => !string_d12 ⋅ ((stderr_rec_15128) tt_c1)
                    | false_c3 => end)))
            tt_c1)
      | false_c3 => end)

def (readline_75 := readline_15134) :
  ch<stdin_t_72> -> (sig_d8 string_d12 (fun
                                         | _15140 => ch<stdin_t_72>))
  | ch_15141 => recv ((send ch_15141) true_c2)

def (close_in_80 := close_in_15142) : ch<stdin_t_72> -> unit_d1
  | ch_15144 => close ((send ch_15144) false_c3)

def (printline_83 := printline_15145) :
  ch<stdout_t_73> -> string_d12 -o ch<stdout_t_73>
  | ch_15149 s_15150 => ((send ((send ch_15149) true_c2)) s_15150)

def (close_out_88 := close_out_15151) : ch<stdout_t_73> -> unit_d1
  | ch_15153 => close ((send ch_15153) false_c3)

def (printerr_91 := printerr_15154) :
  ch<stderr_t_74> -> string_d12 -o ch<stderr_t_74>
  | ch_15158 s_15159 => ((send ((send ch_15158) true_c2)) s_15159)

def (close_err_96 := close_err_15160) : ch<stderr_t_74> -> unit_d1
  | ch_15162 => close ((send ch_15162) false_c3)

def (ref_t_99 := ref_t_15163) : U -> proto
  | A_15165 =>
    ?(msg_15166 : ref_msg_d13) ⋅
      (match msg_15166 return proto with
        | GET_c19 => !A_15165 ⋅ ((ref_t_15163) A_15165)
        | SET_c20 => ?A_15165 ⋅ ((ref_t_15163) A_15165)
        | FREE_c21 => end)

def (ref_handler_105 := ref_handler_15169) :
  ∀ (A_15170 : U) -> A_15170 -> ch<((ref_t_99) A_15170)> -o unit_d1
  | A_15175 m_15176 ch_15177 =>
    (match recv ch_15177 return unit_d1 with
      | (sig_intro_c13 GET_c19 ch_15178) =>
        ((ref_handler_15169) A_15175 m_15176 ((send ch_15178) m_15176))
      | (sig_intro_c13 SET_c20 ch_15179) =>
        (match recv ch_15179 return unit_d1 with
          | (sig_intro_c13 m_15180 ch_15181) =>
            ((ref_handler_15169) A_15175 m_15180 ch_15181))
      | (sig_intro_c13 FREE_c21 ch_15182) => close ch_15182)

def (mk_ref_117 := mk_ref_15183) :
  ∀ (A_15184 : U) ->
    A_15184 -> @main -> (tnsr_d9 hc<((ref_t_99) A_15184)> @main)
  | A_15189 m_15190 x_15191 =>
    fork (ref_15192 : ch<((ref_t_99) A_15189)>) <- x_15191 in
    ((ref_handler_105) A_15189 m_15190 ref_15192)

def (set_ref_125 := set_ref_15193) :
  ∀ (A_15194 : U) ->
    A_15194 -> hc<((ref_t_99) A_15194)> -o hc<((ref_t_99) A_15194)>
  | A_15199 m_15200 ref_15201 => ((send ((send ref_15201) SET_c20)) m_15200)

def (get_ref_132 := get_ref_15202) :
  ∀ (A_15203 : U) ->
    hc<((ref_t_99) A_15203)> -o
      (sig_d8 A_15203 (fun
                        | _15210 => hc<((ref_t_99) A_15203)>))
  | A_15211 ref_15212 => recv ((send ref_15212) GET_c19)

def (free_ref_139 := free_ref_15213) :
  ∀ (A_15214 : U) -> hc<((ref_t_99) A_15214)> -o unit_d1
  | A_15217 ref_15218 => close ((send ref_15218) FREE_c21)

def main_144 :=
  (match
     fork (ref_15219 : ch<((ref_t_99) nat_d3)>) <- main_1 in
     ((ref_handler_105) nat_d3 zero_c4 ref_15219)
   return @main with
    | (tnsr_intro_c14 ref_15220 main_15221) =>
      (match ((get_ref_132) nat_d3 ref_15220) return @main with
        | (sig_intro_c13 msg1_15222 ref_15223) =>
          (match ((free_ref_139) nat_d3 ref_15223) return @main with
            | tt_c1 => main_15221)))


trans12 success-------------------------------

