[(DTm ((Some "loc"), None, (Id "nat")));
  (DAxiom ("at",
     (Pi (U, [((Some "A"), (Type U))],
        (Pi (U, [(None, (Id "loc"))], (Type L)))))
     ));
  (DAxiom ("new",
     (Pi (U, [((Some "A"), (Type U))],
        (Pi (U, [(None, (Id "A"))],
           (App
              [(Id "sig"); (Id "loc");
                (Fun (None, None,
                   [(Cl
                       ([(PVar (Some "l"))],
                        (Some (App [(Id "at"); (Id "A"); (Id "l")]))))
                     ]
                   ))
                ])
           ))
        ))
     ));
  (DAxiom ("free",
     (Pi (U, [((Some "A"), (Type U)); ((Some "l"), (Id "loc"))],
        (Pi (U, [(None, (Id "A"))],
           (Pi (U, [(None, (App [(Id "at"); (Id "A"); (Id "l")]))],
              (Id "unit")))
           ))
        ))
     ));
  (DAxiom ("get",
     (Pi (U, [((Some "A"), (Type U)); ((Some "l"), (Id "loc"))],
        (Pi (U, [(None, (App [(Id "at"); (Id "A"); (Id "l")]))],
           (App
              [(Id "sig"); (Id "A");
                (Fun (None, None,
                   [(Cl
                       ([(PVar None)],
                        (Some (App [(Id "at"); (Id "A"); (Id "l")]))))
                     ]
                   ))
                ])
           ))
        ))
     ));
  (DAxiom ("set",
     (Pi (U,
        [((Some "A"), (Type U)); ((Some "B"), (Type U));
          ((Some "l"), (Id "loc"))],
        (Pi (U, [(None, (Id "A"))],
           (Pi (U, [(None, (App [(Id "at"); (Id "A"); (Id "l")]))],
              (Pi (L, [((Some "y"), (Id "B"))],
                 (App [(Id "at"); (Id "A"); (Id "l")])))
              ))
           ))
        ))
     ));
  (DData ("ArrVec",
     (PTl ([((Some "A"), (Type U)); ((Some "l"), (Id "loc"))],
        (Tl ([(None, (Id "loc"))], (Type L))))),
     [(DCons ("Nil",
         (PTl ([((Some "A"), (Type U)); ((Some "l"), (Id "loc"))],
            (Tl ([],
               (App [(Id "ArrVec"); (Id "A"); (Id "l"); (App [(Id "zero")])])
               ))
            ))
         ));
       (DCons ("Cons",
          (PTl ([((Some "A"), (Type U)); ((Some "l"), (Id "loc"))],
             (Tl (
                [((Some "n"), (Id "nat"));
                  (None,
                   (App
                      [(Id "at"); (Id "A");
                        (App [(Id "addn"); (Id "l"); (Id "n")])]));
                  (None, (App [(Id "ArrVec"); (Id "A"); (Id "l"); (Id "n")]))
                  ],
                (App
                   [(Id "ArrVec"); (Id "A"); (Id "l");
                     (App [(Id "succ"); (Id "n")])])
                ))
             ))
          ))
       ]
     ));
  (DFun ("Array",
     (Pi (U, [(None, (Type U))], (Pi (U, [(None, (Id "loc"))], (Type L))))),
     [(Cl
         ([(PVar (Some "A")); (PVar (Some "n"))],
          (Some (App
                   [(Id "sig"); (Id "loc");
                     (Fun (None, None,
                        [(Cl
                            ([(PVar (Some "l"))],
                             (Some (App
                                      [(Id "ArrVec"); (Id "A"); (Id "l");
                                        (Id "n")]))))
                          ]
                        ))
                     ]))))
       ]
     ));
  (DFun ("nth",
     (Pi (U,
        [((Some "A"), (Type U)); ((Some "l"), (Id "loc"));
          ((Some "m"), (Id "loc")); ((Some "n"), (Id "loc"))],
        (Pi (U, [(None, (App [(Id "lt"); (Id "m"); (Id "n")]))],
           (Pi (U,
              [(None, (App [(Id "ArrVec"); (Id "A"); (Id "l"); (Id "n")]))],
              (App
                 [(Id "tnsr");
                   (App
                      [(Id "at"); (Id "A");
                        (App [(Id "addn"); (Id "l"); (Id "m")])]);
                   (Pi (L,
                      [(None,
                        (App
                           [(Id "at"); (Id "A");
                             (App [(Id "addn"); (Id "l"); (Id "m")])]))
                        ],
                      (App [(Id "ArrVec"); (Id "A"); (Id "l"); (Id "n")])))
                   ])
              ))
           ))
        )),
     [(Cl
         ([(PVar None); (PVar None); (PVar None); (PVar None);
            (PCons ("le_n", []));
            (PCons ("Cons",
               [(PVar (Some "n")); (PVar (Some "c")); (PVar (Some "v"))]))
            ],
          (Some (App
                   [(Id "tnsr_intro"); (Id "c");
                     (Fun (None, None,
                        [(Cl
                            ([(PVar (Some "c"))],
                             (Some (App
                                      [(Id "Cons"); (Id "n"); (Id "c");
                                        (Id "v")]))))
                          ]
                        ))
                     ]))));
       (Cl
          ([(PVar None); (PVar None); (PVar (Some "m")); (PVar None);
             (PCons ("le_succ", [(PVar None); (PVar (Some "pf"))]));
             (PCons ("Cons",
                [(PVar (Some "n")); (PVar (Some "c0")); (PVar (Some "v0"))]))
             ],
           (Some (Let (
                    (PCons ("tnsr_intro",
                       [(PVar (Some "c")); (PVar (Some "f"))])),
                    (App
                       [(Id "nth"); (Id "_"); (Id "_"); (Id "m"); (Id "n");
                         (Id "pf"); (Id "v0")]),
                    (App
                       [(Id "tnsr_intro"); (Id "c");
                         (Fun (None, None,
                            [(Cl
                                ([(PVar (Some "c"))],
                                 (Some (App
                                          [(Id "Cons"); (Id "n"); (Id "c0");
                                            (App [(Id "f"); (Id "c")])]))))
                              ]
                            ))
                         ])
                    )))))
       ]
     ));
  (DFun ("index",
     (Pi (U,
        [((Some "A"), (Type U)); ((Some "m"), (Id "loc"));
          ((Some "n"), (Id "loc"))],
        (Pi (U, [(None, (App [(Id "lt"); (Id "m"); (Id "n")]))],
           (Pi (U, [(None, (App [(Id "Array"); (Id "A"); (Id "n")]))],
              (App
                 [(Id "sig"); (Id "A");
                   (Fun (None, None,
                      [(Cl
                          ([(PVar None)],
                           (Some (App [(Id "Array"); (Id "A"); (Id "n")]))))
                        ]
                      ))
                   ])
              ))
           ))
        )),
     [(Cl
         ([(PVar None); (PVar (Some "m")); (PVar None); (PVar (Some "pf"));
            (PVar (Some "a"))],
          (Some (Let (
                   (PCons ("sig_intro",
                      [(PVar (Some "l")); (PVar (Some "v"))])),
                   (Id "a"),
                   (Let (
                      (PCons ("tnsr_intro",
                         [(PVar (Some "c")); (PVar (Some "f"))])),
                      (App
                         [(Id "nth"); (Id "_"); (Id "l"); (Id "_"); (
                           Id "_"); (Id "pf"); (Id "v")]),
                      (Let (
                         (PCons ("sig_intro",
                            [(PVar (Some "x")); (PVar (Some "c"))])),
                         (App
                            [(Id "get"); (Id "_");
                              (App [(Id "addn"); (Id "l"); (Id "m")]);
                              (Id "c")]),
                         (App
                            [(Id "sig_intro"); (Id "x");
                              (App
                                 [(Id "sig_intro"); (Id "l");
                                   (App [(Id "f"); (Id "c")])])
                              ])
                         ))
                      ))
                   )))))
       ]
     ));
  (DTm (None, None, (Id "main")))]
parse success---------------------------------------

data unit_d1 : U
  | tt_c1 : unit_d1

data bool_d2 : U
  | true_c2 : bool_d2
  | false_c3 : bool_d2

data nat_d3 : U
  | zero_c4 : nat_d3
  | succ_c5 : nat_d3 -> nat_d3

def (addn_3 := addn_217) : nat_d3 -> nat_d3 -> nat_d3
  | zero_c4 x_221 => x_221
  | (succ_c5 x_222) y_223 => (succ_c5 ((addn_217) x_222 y_223))

data option_d4 (A_224 : U) : U
  | none_c6 (A_225 : U) : (option_d4 A_225)
  | some_c7 (A_226 : U) : A_226 -> (option_d4 A_226)

data list_d5 (A_228 : U) : U
  | nil_c8 (A_229 : U) : (list_d5 A_229)
  | cons_c9 (A_230 : U) : A_230 -> (list_d5 A_230) -> (list_d5 A_230)

data vec_d6 (A_234 : U) : nat_d3 -> U
  | vnil_c10 (A_236 : U) : (vec_d6 A_236 zero_c4)
  | vcons_c11 (A_237 : U) :
    ∀ (n_238 : nat_d3) ->
      A_237 -> (vec_d6 A_237 n_238) -> (vec_d6 A_237 (succ_c5 n_238))

data ex_d7 (A_243 : U) (P_244 : A_243 -> U) : U
  | ex_intro_c12 (A_246 : U) (P_247 : A_246 -> U) :
    ∀ (x_249 : A_246) -> ((P_247) x_249) -> (ex_d7 A_246 P_247)

data sig_d8 (A_251 : U) (P_252 : A_251 -> L) : L
  | sig_intro_c13 (A_254 : U) (P_255 : A_254 -> L) :
    ∀ (x_257 : A_254) -> ((P_255) x_257) -> (sig_d8 A_254 P_255)

data tnsr_d9 (A_259 : L) (B_260 : L) : L
  | tnsr_intro_c14 (A_261 : L) (B_262 : L) :
    A_261 -> B_262 -> (tnsr_d9 A_261 B_262)

data box_d10 (A_266 : U) : L
  | box_intro_c15 (A_267 : U) : A_267 -> (box_d10 A_267)

data ascii_d11 : U
  | Ascii_c16 :
    bool_d2 ->
      bool_d2 ->
        bool_d2 ->
          bool_d2 -> bool_d2 -> bool_d2 -> bool_d2 -> bool_d2 -> ascii_d11

data string_d12 : U
  | EmptyString_c17 : string_d12
  | String_c18 : ascii_d11 -> string_d12 -> string_d12

def (cat_60 := cat_308) : string_d12 -> string_d12 -> string_d12
  | EmptyString_c17 s_312 => s_312
  | (String_c18 c_313 s1_314) s2_315 =>
    (String_c18 c_313 ((cat_308) s1_314 s2_315))

data le_d13 (n_316 : nat_d3) : nat_d3 -> U
  | le_n_c19 (n_318 : nat_d3) : (le_d13 n_318 n_318)
  | le_succ_c20 (n_319 : nat_d3) :
    ∀ (m_320 : nat_d3) ->
      (le_d13 n_319 m_320) -> (le_d13 n_319 (succ_c5 m_320))

def (lt_73 := lt_322) : nat_d3 -> nat_d3 -> U
  | m_326 n_327 => (le_d13 (succ_c5 m_326) n_327)

data eq_d14 (A_328 : U) (x_329 : A_328) : A_328 -> U
  | refl_c21 (A_331 : U) (x_332 : A_331) : (eq_d14 A_331 x_332 x_332)

def (stdin_rec_83 := stdin_rec_333) : unit_d1 -> proto
  | tt_c1 =>
    !(b_335 : bool_d2) ⋅
      (match b_335 return ??1 with
        | true_c2 => ?string_d12 ⋅ ((stdin_rec_333) tt_c1)
        | false_c3 => end)

def (stdout_rec_87 := stdout_rec_337) : unit_d1 -> proto
  | tt_c1 =>
    !(b_339 : bool_d2) ⋅
      (match b_339 return ??2 with
        | true_c2 => !string_d12 ⋅ ((stdout_rec_337) tt_c1)
        | false_c3 => end)

def (stderr_rec_91 := stderr_rec_341) : unit_d1 -> proto
  | tt_c1 =>
    !(b_343 : bool_d2) ⋅
      (match b_343 return ??3 with
        | true_c2 => !string_d12 ⋅ ((stderr_rec_341) tt_c1)
        | false_c3 => end)

def stdin_t_95 := ((stdin_rec_83) tt_c1)

def stdout_t_96 := ((stdout_rec_87) tt_c1)

def stderr_t_97 := ((stderr_rec_91) tt_c1)

def (readline_98 := readline_345) :
  ch<stdin_t_95> -> (sig_d8 string_d12 (fun
                                         | _351 => ch<stdin_t_95>))
  | ch_352 => recv ((send ch_352) true_c2)

def (close_in_103 := close_in_353) : ch<stdin_t_95> -> unit_d1
  | ch_355 => close ((send ch_355) false_c3)

def (printline_106 := printline_356) :
  ch<stdout_t_96> -> string_d12 -o ch<stdout_t_96>
  | ch_360 s_361 => ((send ((send ch_360) true_c2)) s_361)

def (close_out_111 := close_out_362) : ch<stdout_t_96> -> unit_d1
  | ch_364 => close ((send ch_364) false_c3)

def (printerr_114 := printerr_365) :
  ch<stderr_t_97> -> string_d12 -o ch<stderr_t_97>
  | ch_369 s_370 => ((send ((send ch_369) true_c2)) s_370)

def (close_err_119 := close_err_371) : ch<stderr_t_97> -> unit_d1
  | ch_373 => close ((send ch_373) false_c3)

def loc_122 := nat_d3

axiom at_123 : U -> loc_122 -> L

axiom new_126 :
  ∀ (A_377 : U) ->
    A_377 -> (sig_d8 loc_122 (fun
                               | l_384 => ((at_123) A_377 l_384)))

axiom free_131 :
  ∀ (A_385 : U) ->
    ∀ (l_388 : loc_122) -> A_385 -> ((at_123) A_385 l_388) -> unit_d1

axiom get_136 :
  ∀ (A_394 : U) ->
    ∀ (l_397 : loc_122) ->
      ((at_123) A_394 l_397) ->
        (sig_d8 A_394 (fun
                        | _404 => ((at_123) A_394 l_397)))

axiom set_142 :
  ∀ (A_405 : U) ->
    ∀ (B_409 : U) ->
      ∀ (l_414 : loc_122) ->
        A_405 -> ((at_123) A_405 l_414) -> B_409 -o ((at_123) A_405 l_414)

data ArrVec_d15 (A_423 : U) (l_424 : loc_122) : loc_122 -> L
  | Nil_c22 (A_426 : U) (l_427 : loc_122) : (ArrVec_d15 A_426 l_427 zero_c4)
  | Cons_c23 (A_428 : U) (l_429 : loc_122) :
    ∀ (n_430 : nat_d3) ->
      ((at_123) A_428 ((addn_3) l_429 n_430)) ->
        (ArrVec_d15 A_428 l_429 n_430) ->
          (ArrVec_d15 A_428 l_429 (succ_c5 n_430))

def (Array_159 := Array_434) : U -> loc_122 -> L
  | A_438 n_439 =>
    (sig_d8 loc_122 (fun
                      | l_442 => (ArrVec_d15 A_438 l_442 n_439)))

def (nth_166 := nth_443) :
  ∀ (A_444 : U) ->
    ∀ (l_450 : loc_122) ->
      ∀ (m_455 : loc_122) ->
        ∀ (n_458 : loc_122) ->
          ((lt_73) m_455 n_458) ->
            (ArrVec_d15 A_444 l_450 n_458) ->
              (tnsr_d9 ((at_123) A_444 ((addn_3) l_450 m_455))
              ((at_123) A_444 ((addn_3) l_450 m_455)) -o
                (ArrVec_d15 A_444 l_450 n_458))
  | _466 _467 _468 _469 le_n_c19 (Cons_c23 n_470 c_471 v_472) =>
    (tnsr_intro_c14 c_471 (fun
                            | c_475 => (Cons_c23 n_470 c_475 v_472)))
  | _476 _477 m_478 _479 (le_succ_c20 _480 pf_481) (Cons_c23 n_482 c0_483 v0_484) =>
    (match ((nth_443) ??4 ??5 m_478 n_482 pf_481 v0_484) return ??6 with
      | (tnsr_intro_c14 c_485 f_486) =>
        (tnsr_intro_c14 c_485
        (fun
          | c_489 => (Cons_c23 n_482 c0_483 ((f_486) c_489)))))

def (index_196 := index_490) :
  ∀ (A_491 : U) ->
    ∀ (m_496 : loc_122) ->
      ∀ (n_499 : loc_122) ->
        ((lt_73) m_496 n_499) ->
          ((Array_159) A_491 n_499) ->
            (sig_d8 A_491 (fun
                            | _510 => ((Array_159) A_491 n_499)))
  | _511 m_512 _513 pf_514 a_515 =>
    (match a_515 return ??13 with
      | (sig_intro_c13 l_516 v_517) =>
        (match ((nth_166) ??7 l_516 ??8 ??9 pf_514 v_517) return ??12 with
          | (tnsr_intro_c14 c_518 f_519) =>
            (match ((get_136) ??10 ((addn_3) l_516 m_512) c_518) return ??11 with
              | (sig_intro_c13 x_520 c_521) =>
                (sig_intro_c13 x_520 (sig_intro_c13 l_516 ((f_519) c_521))))))

def _215 := main_1


trans01 success-------------------------------------

data unit_d1 : U
  | tt_c1 : unit_d1

data bool_d2 : U
  | true_c2 : bool_d2
  | false_c3 : bool_d2

data nat_d3 : U
  | zero_c4 : nat_d3
  | succ_c5 : nat_d3 -> nat_d3

def (addn_3 := addn_10880) : nat_d3 -> nat_d3 -> nat_d3
  | zero_c4 x_10884 => x_10884
  | (succ_c5 x_10885) y_10886 => (succ_c5 ((addn_10880) x_10885 y_10886))

data option_d4 (A_10887 : U) : U
  | none_c6 (A_10888 : U) : (option_d4 A_10888)
  | some_c7 (A_10889 : U) : A_10889 -> (option_d4 A_10889)

data list_d5 (A_10891 : U) : U
  | nil_c8 (A_10892 : U) : (list_d5 A_10892)
  | cons_c9 (A_10893 : U) : A_10893 -> (list_d5 A_10893) -> (list_d5 A_10893)

data vec_d6 (A_10897 : U) : nat_d3 -> U
  | vnil_c10 (A_10899 : U) : (vec_d6 A_10899 zero_c4)
  | vcons_c11 (A_10900 : U) :
    ∀ (n_10901 : nat_d3) ->
      A_10900 ->
        (vec_d6 A_10900 n_10901) -> (vec_d6 A_10900 (succ_c5 n_10901))

data ex_d7 (A_10906 : U) (P_10907 : A_10906 -> U) : U
  | ex_intro_c12 (A_10909 : U) (P_10910 : A_10909 -> U) :
    ∀ (x_10912 : A_10909) -> ((P_10910) x_10912) -> (ex_d7 A_10909 P_10910)

data sig_d8 (A_10914 : U) (P_10915 : A_10914 -> L) : L
  | sig_intro_c13 (A_10917 : U) (P_10918 : A_10917 -> L) :
    ∀ (x_10920 : A_10917) ->
      ((P_10918) x_10920) -> (sig_d8 A_10917 P_10918)

data tnsr_d9 (A_10922 : L) (B_10923 : L) : L
  | tnsr_intro_c14 (A_10924 : L) (B_10925 : L) :
    A_10924 -> B_10925 -> (tnsr_d9 A_10924 B_10925)

data box_d10 (A_10929 : U) : L
  | box_intro_c15 (A_10930 : U) : A_10930 -> (box_d10 A_10930)

data ascii_d11 : U
  | Ascii_c16 :
    bool_d2 ->
      bool_d2 ->
        bool_d2 ->
          bool_d2 -> bool_d2 -> bool_d2 -> bool_d2 -> bool_d2 -> ascii_d11

data string_d12 : U
  | EmptyString_c17 : string_d12
  | String_c18 : ascii_d11 -> string_d12 -> string_d12

def (cat_60 := cat_10971) : string_d12 -> string_d12 -> string_d12
  | EmptyString_c17 s_10975 => s_10975
  | (String_c18 c_10976 s1_10977) s2_10978 =>
    (String_c18 c_10976 ((cat_10971) s1_10977 s2_10978))

data le_d13 (n_10979 : nat_d3) : nat_d3 -> U
  | le_n_c19 (n_10981 : nat_d3) : (le_d13 n_10981 n_10981)
  | le_succ_c20 (n_10982 : nat_d3) :
    ∀ (m_10983 : nat_d3) ->
      (le_d13 n_10982 m_10983) -> (le_d13 n_10982 (succ_c5 m_10983))

def (lt_73 := lt_10985) : nat_d3 -> nat_d3 -> U
  | m_10989 n_10990 => (le_d13 (succ_c5 m_10989) n_10990)

data eq_d14 (A_10991 : U) (x_10992 : A_10991) : A_10991 -> U
  | refl_c21 (A_10994 : U) (x_10995 : A_10994) :
    (eq_d14 A_10994 x_10995 x_10995)

def (stdin_rec_83 := stdin_rec_10996) : unit_d1 -> proto
  | tt_c1 =>
    !(b_10998 : bool_d2) ⋅
      (match b_10998 return proto with
        | true_c2 => ?string_d12 ⋅ ((stdin_rec_10996) tt_c1)
        | false_c3 => end)

def (stdout_rec_87 := stdout_rec_11000) : unit_d1 -> proto
  | tt_c1 =>
    !(b_11002 : bool_d2) ⋅
      (match b_11002 return proto with
        | true_c2 => !string_d12 ⋅ ((stdout_rec_11000) tt_c1)
        | false_c3 => end)

def (stderr_rec_91 := stderr_rec_11004) : unit_d1 -> proto
  | tt_c1 =>
    !(b_11006 : bool_d2) ⋅
      (match b_11006 return proto with
        | true_c2 => !string_d12 ⋅ ((stderr_rec_11004) tt_c1)
        | false_c3 => end)

def stdin_t_95 := ((stdin_rec_83) tt_c1)

def stdout_t_96 := ((stdout_rec_87) tt_c1)

def stderr_t_97 := ((stderr_rec_91) tt_c1)

def (readline_98 := readline_11008) :
  ch<stdin_t_95> -> (sig_d8 string_d12 (fun
                                         | _11014 => ch<stdin_t_95>))
  | ch_11015 => recv ((send ch_11015) true_c2)

def (close_in_103 := close_in_11016) : ch<stdin_t_95> -> unit_d1
  | ch_11018 => close ((send ch_11018) false_c3)

def (printline_106 := printline_11019) :
  ch<stdout_t_96> -> string_d12 -o ch<stdout_t_96>
  | ch_11023 s_11024 => ((send ((send ch_11023) true_c2)) s_11024)

def (close_out_111 := close_out_11025) : ch<stdout_t_96> -> unit_d1
  | ch_11027 => close ((send ch_11027) false_c3)

def (printerr_114 := printerr_11028) :
  ch<stderr_t_97> -> string_d12 -o ch<stderr_t_97>
  | ch_11032 s_11033 => ((send ((send ch_11032) true_c2)) s_11033)

def (close_err_119 := close_err_11034) : ch<stderr_t_97> -> unit_d1
  | ch_11036 => close ((send ch_11036) false_c3)

def loc_122 := nat_d3

axiom at_123 : U -> loc_122 -> L

axiom new_126 :
  ∀ (A_11040 : U) ->
    A_11040 -> (sig_d8 loc_122 (fun
                                 | l_11047 => ((at_123) A_11040 l_11047)))

axiom free_131 :
  ∀ (A_11048 : U) ->
    ∀ (l_11051 : loc_122) ->
      A_11048 -> ((at_123) A_11048 l_11051) -> unit_d1

axiom get_136 :
  ∀ (A_11057 : U) ->
    ∀ (l_11060 : loc_122) ->
      ((at_123) A_11057 l_11060) ->
        (sig_d8 A_11057 (fun
                          | _11067 => ((at_123) A_11057 l_11060)))

axiom set_142 :
  ∀ (A_11068 : U) ->
    ∀ (B_11072 : U) ->
      ∀ (l_11077 : loc_122) ->
        A_11068 ->
          ((at_123) A_11068 l_11077) -> B_11072 -o ((at_123) A_11068 l_11077)

data ArrVec_d15 (A_11086 : U) (l_11087 : loc_122) : loc_122 -> L
  | Nil_c22 (A_11089 : U) (l_11090 : loc_122) :
    (ArrVec_d15 A_11089 l_11090 zero_c4)
  | Cons_c23 (A_11091 : U) (l_11092 : loc_122) :
    ∀ (n_11093 : nat_d3) ->
      ((at_123) A_11091 ((addn_3) l_11092 n_11093)) ->
        (ArrVec_d15 A_11091 l_11092 n_11093) ->
          (ArrVec_d15 A_11091 l_11092 (succ_c5 n_11093))

def (Array_159 := Array_11097) : U -> loc_122 -> L
  | A_11101 n_11102 =>
    (sig_d8 loc_122 (fun
                      | l_11105 => (ArrVec_d15 A_11101 l_11105 n_11102)))

def (nth_166 := nth_11106) :
  ∀ (A_11107 : U) ->
    ∀ (l_11113 : loc_122) ->
      ∀ (m_11118 : loc_122) ->
        ∀ (n_11121 : loc_122) ->
          ((lt_73) m_11118 n_11121) ->
            (ArrVec_d15 A_11107 l_11113 n_11121) ->
              (tnsr_d9 ((at_123) A_11107 ((addn_3) l_11113 m_11118))
              ((at_123) A_11107 ((addn_3) l_11113 m_11118)) -o
                (ArrVec_d15 A_11107 l_11113 n_11121))
  | _11129 _11130 _11131 _11132 le_n_c19 (Cons_c23 n_11133 c_11134 v_11135) =>
    (tnsr_intro_c14 c_11134
    (fun
      | c_11138 => (Cons_c23 n_11133 c_11138 v_11135)))
  | _11139 _11140 m_11141 _11142 (le_succ_c20 _11143 pf_11144) (Cons_c23 n_11145 c0_11146 v0_11147) =>
    (match ((nth_11106) _11139 _11140 m_11141 n_11145 pf_11144 v0_11147)
     return
       (tnsr_d9 ((at_123) _11139 ((addn_3) _11140 m_11141))
       ((at_123) _11139 ((addn_3) _11140 m_11141)) -o
         (ArrVec_d15 _11139 _11140 (succ_c5 _11143)))
     with
      | (tnsr_intro_c14 c_11149 f_11150) =>
        (tnsr_intro_c14 c_11149
        (fun
          | c_11153 => (Cons_c23 n_11145 c0_11146 ((f_11150) c_11153)))))

def (index_196 := index_11154) :
  ∀ (A_11155 : U) ->
    ∀ (m_11160 : loc_122) ->
      ∀ (n_11163 : loc_122) ->
        ((lt_73) m_11160 n_11163) ->
          ((Array_159) A_11155 n_11163) ->
            (sig_d8 A_11155 (fun
                              | _11174 => ((Array_159) A_11155 n_11163)))
  | _11175 m_11176 _11177 pf_11178 a_11179 =>
    (match a_11179 return
       (sig_d8 _11175 (fun
                        | _11182 => ((Array_159) _11175 _11177)))
     with
      | (sig_intro_c13 l_11183 v_11184) =>
        (match ((nth_166) _11175 l_11183 m_11176 _11177 pf_11178 v_11184)
         return (sig_d8 _11175 (fun
                                 | _11187 => ((Array_159) _11175 _11177)))
         with
          | (tnsr_intro_c14 c_11188 f_11189) =>
            (match ((get_136) _11175 ((addn_3) l_11183 m_11176) c_11188)
             return
               (sig_d8 _11175 (fun
                                | _11192 => ((Array_159) _11175 _11177)))
             with
              | (sig_intro_c13 x_11193 c_11194) =>
                (sig_intro_c13 x_11193
                (sig_intro_c13 l_11183 ((f_11189) c_11194))))))

def _215 := main_1


trans1e success-------------------------------------

def addn_3 :=
  fix addn_14405 _14406 =>
    (case _14406 of
      | zero_c4 => lam _14407 => _14407
      | (succ_c5 _14408) =>
        lam _14409 => (succ_c5 ((addn_14405) _14408 _14409)))

def cat_60 :=
  fix cat_14410 _14411 =>
    (case _14411 of
      | EmptyString_c17 => lam _14412 => _14412
      | (String_c18 _14413 _14414) =>
        lam _14415 => (String_c18 _14413 ((cat_14410) _14414 _14415)))

def lt_73 := fix lt_14416 _14417 _14418 => (le_d13 (succ_c5 _14417) _14418)

def stdin_rec_83 :=
  fix stdin_rec_14419 _14420 =>
    (case _14420 of
      | tt_c1 =>
        !(b_14421 : bool_d2) ⋅
          ((lin _14424 =>
              (case _14424 of
                | true_c2 => ?string_d12 ⋅ ((stdin_rec_14419) tt_c1)
                | false_c3 => end))
            b_14421))

def stdout_rec_87 :=
  fix stdout_rec_14426 _14427 =>
    (case _14427 of
      | tt_c1 =>
        !(b_14428 : bool_d2) ⋅
          ((lin _14431 =>
              (case _14431 of
                | true_c2 => !string_d12 ⋅ ((stdout_rec_14426) tt_c1)
                | false_c3 => end))
            b_14428))

def stderr_rec_91 :=
  fix stderr_rec_14433 _14434 =>
    (case _14434 of
      | tt_c1 =>
        !(b_14435 : bool_d2) ⋅
          ((lin _14438 =>
              (case _14438 of
                | true_c2 => !string_d12 ⋅ ((stderr_rec_14433) tt_c1)
                | false_c3 => end))
            b_14435))

def stdin_t_95 := ((stdin_rec_83) tt_c1)

def stdout_t_96 := ((stdout_rec_87) tt_c1)

def stderr_t_97 := ((stderr_rec_91) tt_c1)

def readline_98 := fix readline_14440 _14441 => recv ((send _14441) true_c2)

def close_in_103 :=
  fix close_in_14442 _14443 => close ((send _14443) false_c3)

def printline_106 :=
  fix printline_14444 _14445 =>
    lin _14446 => ((send ((send _14445) true_c2)) _14446)

def close_out_111 :=
  fix close_out_14447 _14448 => close ((send _14448) false_c3)

def printerr_114 :=
  fix printerr_14449 _14450 =>
    lin _14451 => ((send ((send _14450) true_c2)) _14451)

def close_err_119 :=
  fix close_err_14452 _14453 => close ((send _14453) false_c3)

def loc_122 := nat_d3

def Array_159 :=
  fix Array_14454 _14455 _14456 =>
    (sig_d8 loc_122 fix _14457 _14458 => (ArrVec_d15 _14455 _14458 _14456))

def nth_166 :=
  fix nth_14459 A_14460 l_14461 m_14462 n_14463 _14464 =>
    (case _14464 of
      | le_n_c19 =>
        lam _14465 =>
          (case _14465 of
            | Nil_c22 => absurd
            | (Cons_c23 n_14466 _14467 _14468) =>
              (tnsr_intro_c14 _14467
              lin _14469 => (Cons_c23 m_14462 _14469 _14468)))
      | (le_succ_c20 m_14470 _14471) =>
        lam _14472 =>
          (case _14472 of
            | Nil_c22 => absurd
            | (Cons_c23 n_14473 _14474 _14475) =>
              ((lin _14476 =>
                  (case _14476 of
                    | (tnsr_intro_c14 _14477 _14478) =>
                      (tnsr_intro_c14 _14477
                      lin _14479 =>
                        (Cons_c23 m_14470 _14474 ((_14478) _14479)))))
                ((nth_14459) A_14460 l_14461 m_14462 m_14470 _14471 _14475))))

def index_196 :=
  fix index_14480 A_14481 m_14482 n_14483 _14484 _14485 =>
    ((lin _14486 =>
        (case _14486 of
          | (sig_intro_c13 x_14487 _14488) =>
            ((lin _14489 =>
                (case _14489 of
                  | (tnsr_intro_c14 _14490 _14491) =>
                    ((lin _14492 =>
                        (case _14492 of
                          | (sig_intro_c13 x_14493 _14494) =>
                            (sig_intro_c13 x_14493
                            (sig_intro_c13 x_14487 ((_14491) _14494)))))
                      ((get_136) A_14481 ((addn_3) x_14487 m_14482) _14490))))
              ((nth_166) A_14481 x_14487 m_14482 n_14483 _14484 _14488))))
      _14485)

def _215 := main_1


trans12 success-------------------------------------

[(addn_3,
  (VFix (addn_14495,
     lam _14513 =>
       (case _14513 of
         | zero_c4 => lam _14514 => _14514
         | (succ_c5 _14515) =>
           lam _14516 => (succ_c5 ((addn_14495) _14515 _14516)))
     )));
  (cat_60,
   (VFix (cat_14496,
      lam _14517 =>
        (case _14517 of
          | EmptyString_c17 => lam _14518 => _14518
          | (String_c18 _14519 _14520) =>
            lam _14521 => (String_c18 _14519 ((cat_14496) _14520 _14521)))
      )));
  (lt_73,
   (VFix (lt_14497, lam _14522 _14523 => (le_d13 (succ_c5 _14522) _14523))));
  (stdin_rec_83,
   (VFix (stdin_rec_14498,
      lam _14524 =>
        (case _14524 of
          | tt_c1 =>
            !(b_14525 : bool_d2) ⋅
              ((lin _14528 =>
                  (case _14528 of
                    | true_c2 => ?string_d12 ⋅ ((stdin_rec_14498) tt_c1)
                    | false_c3 => end))
                b_14525))
      )));
  (stdout_rec_87,
   (VFix (stdout_rec_14499,
      lam _14530 =>
        (case _14530 of
          | tt_c1 =>
            !(b_14531 : bool_d2) ⋅
              ((lin _14534 =>
                  (case _14534 of
                    | true_c2 => !string_d12 ⋅ ((stdout_rec_14499) tt_c1)
                    | false_c3 => end))
                b_14531))
      )));
  (stderr_rec_91,
   (VFix (stderr_rec_14500,
      lam _14536 =>
        (case _14536 of
          | tt_c1 =>
            !(b_14537 : bool_d2) ⋅
              ((lin _14540 =>
                  (case _14540 of
                    | true_c2 => !string_d12 ⋅ ((stderr_rec_14500) tt_c1)
                    | false_c3 => end))
                b_14537))
      )));
  (stdin_t_95, VBox); (stdout_t_96, VBox); (stderr_t_97, VBox);
  (readline_98,
   (VFix (readline_14504, lam _14542 => recv ((send _14542) true_c2))));
  (close_in_103,
   (VFix (close_in_14505, lam _14543 => close ((send _14543) false_c3))));
  (printline_106,
   (VFix (printline_14506,
      lam _14544 => lin _14545 => ((send ((send _14544) true_c2)) _14545))));
  (close_out_111,
   (VFix (close_out_14507, lam _14546 => close ((send _14546) false_c3))));
  (printerr_114,
   (VFix (printerr_14508,
      lam _14547 => lin _14548 => ((send ((send _14547) true_c2)) _14548))));
  (close_err_119,
   (VFix (close_err_14509, lam _14549 => close ((send _14549) false_c3))));
  (loc_122, VBox);
  (Array_159,
   (VFix (Array_14510,
      lam _14550 _14551 =>
        (sig_d8 loc_122
        fix _14552 _14553 => (ArrVec_d15 _14550 _14553 _14551))
      )));
  (nth_166,
   (VFix (nth_14511,
      lam A_14554 l_14555 m_14556 n_14557 _14558 =>
        (case _14558 of
          | le_n_c19 =>
            lam _14559 =>
              (case _14559 of
                | Nil_c22 => absurd
                | (Cons_c23 n_14560 _14561 _14562) =>
                  (tnsr_intro_c14 _14561
                  lin _14563 => (Cons_c23 m_14556 _14563 _14562)))
          | (le_succ_c20 m_14564 _14565) =>
            lam _14566 =>
              (case _14566 of
                | Nil_c22 => absurd
                | (Cons_c23 n_14567 _14568 _14569) =>
                  ((lin _14570 =>
                      (case _14570 of
                        | (tnsr_intro_c14 _14571 _14572) =>
                          (tnsr_intro_c14 _14571
                          lin _14573 =>
                            (Cons_c23 m_14564 _14568 ((_14572) _14573)))))
                    ((nth_14511)
                      A_14554 l_14555 m_14556 m_14564 _14565 _14569))))
      )));
  (index_196,
   (VFix (index_14512,
      lam A_14574 m_14575 n_14576 _14577 _14578 =>
        ((lin _14579 =>
            (case _14579 of
              | (sig_intro_c13 x_14580 _14581) =>
                ((lin _14582 =>
                    (case _14582 of
                      | (tnsr_intro_c14 _14583 _14584) =>
                        ((lin _14585 =>
                            (case _14585 of
                              | (sig_intro_c13 x_14586 _14587) =>
                                (sig_intro_c13 x_14586
                                (sig_intro_c13 x_14580 ((_14584) _14587)))))
                          ((get_136)
                            A_14574 ((addn_3) x_14580 m_14575) _14583))))
                  ((nth_166) A_14574 x_14580 m_14575 n_14576 _14577 _14581))))
          _14578)
      )));
  (_215, VBox)]
eval2 success---------------------------------------

