[(DTm ((Some "loc"), None, (Id "nat")));
  (DAxiom ("at",
     (Pi (U, [((Some "A"), (Type U))],
        (Pi (U, [(None, (Id "loc"))], (Type L)))))
     ));
  (DAxiom ("new",
     (Pi (U, [((Some "A"), (Type U))],
        (Pi (U, [(None, (Id "A"))],
           (App
              [(Id "sig"); (Id "loc");
                (Fun (None, None,
                   [(Cl
                       ([(PVar (Some "l"))],
                        (Some (App [(Id "at"); (Id "A"); (Id "l")]))))
                     ]
                   ))
                ])
           ))
        ))
     ));
  (DAxiom ("free",
     (Pi (U, [((Some "A"), (Type U)); ((Some "l"), (Id "loc"))],
        (Pi (U, [(None, (Id "A"))],
           (Pi (U, [(None, (App [(Id "at"); (Id "A"); (Id "l")]))],
              (Id "unit")))
           ))
        ))
     ));
  (DAxiom ("get",
     (Pi (U, [((Some "A"), (Type U)); ((Some "l"), (Id "loc"))],
        (Pi (U, [(None, (App [(Id "at"); (Id "A"); (Id "l")]))],
           (App
              [(Id "sig"); (Id "A");
                (Fun (None, None,
                   [(Cl
                       ([(PVar None)],
                        (Some (App [(Id "at"); (Id "A"); (Id "l")]))))
                     ]
                   ))
                ])
           ))
        ))
     ));
  (DAxiom ("set",
     (Pi (U,
        [((Some "A"), (Type U)); ((Some "B"), (Type U));
          ((Some "l"), (Id "loc"))],
        (Pi (U, [(None, (Id "A"))],
           (Pi (U, [(None, (App [(Id "at"); (Id "A"); (Id "l")]))],
              (Pi (L, [((Some "y"), (Id "B"))],
                 (App [(Id "at"); (Id "A"); (Id "l")])))
              ))
           ))
        ))
     ));
  (DData ("ArrVec",
     (PTl ([((Some "A"), (Type U)); ((Some "l"), (Id "loc"))],
        (Tl ([(None, (Id "loc"))], (Type L))))),
     [(DCons ("Nil",
         (PTl ([((Some "A"), (Type U)); ((Some "l"), (Id "loc"))],
            (Tl ([],
               (App [(Id "ArrVec"); (Id "A"); (Id "l"); (App [(Id "zero")])])
               ))
            ))
         ));
       (DCons ("Cons",
          (PTl ([((Some "A"), (Type U)); ((Some "l"), (Id "loc"))],
             (Tl (
                [((Some "n"), (Id "nat"));
                  (None,
                   (App
                      [(Id "at"); (Id "A");
                        (App [(Id "addn"); (Id "l"); (Id "n")])]));
                  (None, (App [(Id "ArrVec"); (Id "A"); (Id "l"); (Id "n")]))
                  ],
                (App
                   [(Id "ArrVec"); (Id "A"); (Id "l");
                     (App [(Id "succ"); (Id "n")])])
                ))
             ))
          ))
       ]
     ));
  (DFun ("Array",
     (Pi (U, [(None, (Type U))], (Pi (U, [(None, (Id "loc"))], (Type L))))),
     [(Cl
         ([(PVar (Some "A")); (PVar (Some "n"))],
          (Some (App
                   [(Id "sig"); (Id "loc");
                     (Fun (None, None,
                        [(Cl
                            ([(PVar (Some "l"))],
                             (Some (App
                                      [(Id "ArrVec"); (Id "A"); (Id "l");
                                        (Id "n")]))))
                          ]
                        ))
                     ]))))
       ]
     ));
  (DFun ("nth",
     (Pi (U,
        [((Some "A"), (Type U)); ((Some "l"), (Id "loc"));
          ((Some "m"), (Id "loc")); ((Some "n"), (Id "loc"))],
        (Pi (U, [(None, (App [(Id "lt"); (Id "m"); (Id "n")]))],
           (Pi (U,
              [(None, (App [(Id "ArrVec"); (Id "A"); (Id "l"); (Id "n")]))],
              (App
                 [(Id "tnsr");
                   (App
                      [(Id "at"); (Id "A");
                        (App [(Id "addn"); (Id "l"); (Id "m")])]);
                   (Pi (L,
                      [(None,
                        (App
                           [(Id "at"); (Id "A");
                             (App [(Id "addn"); (Id "l"); (Id "m")])]))
                        ],
                      (App [(Id "ArrVec"); (Id "A"); (Id "l"); (Id "n")])))
                   ])
              ))
           ))
        )),
     [(Cl
         ([(PVar None); (PVar None); (PVar None); (PVar None);
            (PCons ("le_refl", []));
            (PCons ("Cons",
               [(PVar (Some "n")); (PVar (Some "c")); (PVar (Some "v"))]))
            ],
          (Some (App
                   [(Id "tnsr_intro"); (Id "c");
                     (Fun (None, None,
                        [(Cl
                            ([(PVar (Some "c"))],
                             (Some (App
                                      [(Id "Cons"); (Id "n"); (Id "c");
                                        (Id "v")]))))
                          ]
                        ))
                     ]))));
       (Cl
          ([(PVar None); (PVar None); (PVar (Some "m")); (PVar None);
             (PCons ("le_succ", [(PVar None); (PVar (Some "pf"))]));
             (PCons ("Cons",
                [(PVar (Some "n")); (PVar (Some "c0")); (PVar (Some "v0"))]))
             ],
           (Some (Let (
                    (PCons ("tnsr_intro",
                       [(PVar (Some "c")); (PVar (Some "f"))])),
                    (App
                       [(Id "nth"); (Id "_"); (Id "_"); (Id "m"); (Id "n");
                         (Id "pf"); (Id "v0")]),
                    (App
                       [(Id "tnsr_intro"); (Id "c");
                         (Fun (None, None,
                            [(Cl
                                ([(PVar (Some "c"))],
                                 (Some (App
                                          [(Id "Cons"); (Id "n"); (Id "c0");
                                            (App [(Id "f"); (Id "c")])]))))
                              ]
                            ))
                         ])
                    )))))
       ]
     ));
  (DFun ("index",
     (Pi (U,
        [((Some "A"), (Type U)); ((Some "m"), (Id "loc"));
          ((Some "n"), (Id "loc"))],
        (Pi (U, [(None, (App [(Id "lt"); (Id "m"); (Id "n")]))],
           (Pi (U, [(None, (App [(Id "Array"); (Id "A"); (Id "n")]))],
              (App
                 [(Id "sig"); (Id "A");
                   (Fun (None, None,
                      [(Cl
                          ([(PVar None)],
                           (Some (App [(Id "Array"); (Id "A"); (Id "n")]))))
                        ]
                      ))
                   ])
              ))
           ))
        )),
     [(Cl
         ([(PVar None); (PVar (Some "m")); (PVar None); (PVar (Some "pf"));
            (PVar (Some "a"))],
          (Some (Let (
                   (PCons ("sig_intro",
                      [(PVar (Some "l")); (PVar (Some "v"))])),
                   (Id "a"),
                   (Let (
                      (PCons ("tnsr_intro",
                         [(PVar (Some "c")); (PVar (Some "f"))])),
                      (App
                         [(Id "nth"); (Id "_"); (Id "l"); (Id "_"); (
                           Id "_"); (Id "pf"); (Id "v")]),
                      (Let (
                         (PCons ("sig_intro",
                            [(PVar (Some "x")); (PVar (Some "c"))])),
                         (App
                            [(Id "get"); (Id "_");
                              (App [(Id "addn"); (Id "l"); (Id "m")]);
                              (Id "c")]),
                         (App
                            [(Id "sig_intro"); (Id "x");
                              (App
                                 [(Id "sig_intro"); (Id "l");
                                   (App [(Id "f"); (Id "c")])])
                              ])
                         ))
                      ))
                   )))))
       ]
     ));
  (DTm (None, None, (Id "main")))]
parse success---------------------------------------

data unit_d1 : U
  | tt_c1 : unit_d1

data bool_d2 : U
  | true_c2 : bool_d2
  | false_c3 : bool_d2

data nat_d3 : U
  | zero_c4 : nat_d3
  | succ_c5 : nat_d3 -> nat_d3

def (addn_3 := addn_217) : nat_d3 -> nat_d3 -> nat_d3
  | zero_c4 x_221 => x_221
  | (succ_c5 x_222) y_223 => (succ_c5 ((addn_217) x_222 y_223))

data option_d4 (A_224 : U) : U
  | none_c6 (A_225 : U) : (option_d4 A_225)
  | some_c7 (A_226 : U) : A_226 -> (option_d4 A_226)

data list_d5 (A_228 : U) : U
  | nil_c8 (A_229 : U) : (list_d5 A_229)
  | cons_c9 (A_230 : U) : A_230 -> (list_d5 A_230) -> (list_d5 A_230)

data vec_d6 (A_234 : U) : nat_d3 -> U
  | vnil_c10 (A_236 : U) : (vec_d6 A_236 zero_c4)
  | vcons_c11 (A_237 : U) :
    ∀ (n_238 : nat_d3) ->
      A_237 -> (vec_d6 A_237 n_238) -> (vec_d6 A_237 (succ_c5 n_238))

data ex_d7 (A_243 : U) (P_244 : A_243 -> U) : U
  | ex_intro_c12 (A_246 : U) (P_247 : A_246 -> U) :
    ∀ (x_249 : A_246) -> ((P_247) x_249) -> (ex_d7 A_246 P_247)

data sig_d8 (A_251 : U) (P_252 : A_251 -> L) : L
  | sig_intro_c13 (A_254 : U) (P_255 : A_254 -> L) :
    ∀ (x_257 : A_254) -> ((P_255) x_257) -> (sig_d8 A_254 P_255)

data tnsr_d9 (A_259 : L) (B_260 : L) : L
  | tnsr_intro_c14 (A_261 : L) (B_262 : L) :
    A_261 -> B_262 -> (tnsr_d9 A_261 B_262)

data box_d10 (A_266 : U) : L
  | box_intro_c15 (A_267 : U) : A_267 -> (box_d10 A_267)

data ascii_d11 : U
  | Ascii_c16 :
    bool_d2 ->
      bool_d2 ->
        bool_d2 ->
          bool_d2 -> bool_d2 -> bool_d2 -> bool_d2 -> bool_d2 -> ascii_d11

data string_d12 : U
  | EmptyString_c17 : string_d12
  | String_c18 : ascii_d11 -> string_d12 -> string_d12

def (cat_60 := cat_308) : string_d12 -> string_d12 -> string_d12
  | EmptyString_c17 s_312 => s_312
  | (String_c18 c_313 s1_314) s2_315 =>
    (String_c18 c_313 ((cat_308) s1_314 s2_315))

data le_d13 (n_316 : nat_d3) : nat_d3 -> U
  | le_refl_c19 (n_318 : nat_d3) : (le_d13 n_318 n_318)
  | le_succ_c20 (n_319 : nat_d3) :
    ∀ (m_320 : nat_d3) ->
      (le_d13 n_319 m_320) -> (le_d13 n_319 (succ_c5 m_320))

def (lt_73 := lt_322) : nat_d3 -> nat_d3 -> U
  | m_326 n_327 => (le_d13 (succ_c5 m_326) n_327)

data eq_d14 (A_328 : U) (x_329 : A_328) : A_328 -> U
  | refl_c21 (A_331 : U) (x_332 : A_331) : (eq_d14 A_331 x_332 x_332)

def (stdin_rec_83 := stdin_rec_333) : unit_d1 -> proto
  | tt_c1 =>
    !(b_335 : bool_d2) ⋅
      (match b_335 return ??1 with
        | true_c2 => ?string_d12 ⋅ ((stdin_rec_333) tt_c1)
        | false_c3 => end)

def (stdout_rec_87 := stdout_rec_337) : unit_d1 -> proto
  | tt_c1 =>
    !(b_339 : bool_d2) ⋅
      (match b_339 return ??2 with
        | true_c2 => !string_d12 ⋅ ((stdout_rec_337) tt_c1)
        | false_c3 => end)

def (stderr_rec_91 := stderr_rec_341) : unit_d1 -> proto
  | tt_c1 =>
    !(b_343 : bool_d2) ⋅
      (match b_343 return ??3 with
        | true_c2 => !string_d12 ⋅ ((stderr_rec_341) tt_c1)
        | false_c3 => end)

def stdin_t_95 := ((stdin_rec_83) tt_c1)

def stdout_t_96 := ((stdout_rec_87) tt_c1)

def stderr_t_97 := ((stderr_rec_91) tt_c1)

def (readline_98 := readline_345) :
  ch<stdin_t_95> -> (sig_d8 string_d12 (fun
                                         | _351 => ch<stdin_t_95>))
  | ch_352 => recv ((send ch_352) true_c2)

def (close_in_103 := close_in_353) : ch<stdin_t_95> -> unit_d1
  | ch_355 => close ((send ch_355) false_c3)

def (printline_106 := printline_356) :
  ch<stdout_t_96> -> string_d12 -o ch<stdout_t_96>
  | ch_360 s_361 => ((send ((send ch_360) true_c2)) s_361)

def (close_out_111 := close_out_362) : ch<stdout_t_96> -> unit_d1
  | ch_364 => close ((send ch_364) false_c3)

def (printerr_114 := printerr_365) :
  ch<stderr_t_97> -> string_d12 -o ch<stderr_t_97>
  | ch_369 s_370 => ((send ((send ch_369) true_c2)) s_370)

def (close_err_119 := close_err_371) : ch<stderr_t_97> -> unit_d1
  | ch_373 => close ((send ch_373) false_c3)

def loc_122 := nat_d3

axiom at_123 : U -> loc_122 -> L

axiom new_126 :
  ∀ (A_377 : U) ->
    A_377 -> (sig_d8 loc_122 (fun
                               | l_384 => ((at_123) A_377 l_384)))

axiom free_131 :
  ∀ (A_385 : U) ->
    ∀ (l_388 : loc_122) -> A_385 -> ((at_123) A_385 l_388) -> unit_d1

axiom get_136 :
  ∀ (A_394 : U) ->
    ∀ (l_397 : loc_122) ->
      ((at_123) A_394 l_397) ->
        (sig_d8 A_394 (fun
                        | _404 => ((at_123) A_394 l_397)))

axiom set_142 :
  ∀ (A_405 : U) ->
    ∀ (B_409 : U) ->
      ∀ (l_414 : loc_122) ->
        A_405 -> ((at_123) A_405 l_414) -> B_409 -o ((at_123) A_405 l_414)

data ArrVec_d15 (A_423 : U) (l_424 : loc_122) : loc_122 -> L
  | Nil_c22 (A_426 : U) (l_427 : loc_122) : (ArrVec_d15 A_426 l_427 zero_c4)
  | Cons_c23 (A_428 : U) (l_429 : loc_122) :
    ∀ (n_430 : nat_d3) ->
      ((at_123) A_428 ((addn_3) l_429 n_430)) ->
        (ArrVec_d15 A_428 l_429 n_430) ->
          (ArrVec_d15 A_428 l_429 (succ_c5 n_430))

def (Array_159 := Array_434) : U -> loc_122 -> L
  | A_438 n_439 =>
    (sig_d8 loc_122 (fun
                      | l_442 => (ArrVec_d15 A_438 l_442 n_439)))

def (nth_166 := nth_443) :
  ∀ (A_444 : U) ->
    ∀ (l_450 : loc_122) ->
      ∀ (m_455 : loc_122) ->
        ∀ (n_458 : loc_122) ->
          ((lt_73) m_455 n_458) ->
            (ArrVec_d15 A_444 l_450 n_458) ->
              (tnsr_d9 ((at_123) A_444 ((addn_3) l_450 m_455))
              ((at_123) A_444 ((addn_3) l_450 m_455)) -o
                (ArrVec_d15 A_444 l_450 n_458))
  | _466 _467 _468 _469 le_refl_c19 (Cons_c23 n_470 c_471 v_472) =>
    (tnsr_intro_c14 c_471 (fun
                            | c_475 => (Cons_c23 n_470 c_475 v_472)))
  | _476 _477 m_478 _479 (le_succ_c20 _480 pf_481) (Cons_c23 n_482 c0_483 v0_484) =>
    (match ((nth_443) ??4 ??5 m_478 n_482 pf_481 v0_484) return ??6 with
      | (tnsr_intro_c14 c_485 f_486) =>
        (tnsr_intro_c14 c_485
        (fun
          | c_489 => (Cons_c23 n_482 c0_483 ((f_486) c_489)))))

def (index_196 := index_490) :
  ∀ (A_491 : U) ->
    ∀ (m_496 : loc_122) ->
      ∀ (n_499 : loc_122) ->
        ((lt_73) m_496 n_499) ->
          ((Array_159) A_491 n_499) ->
            (sig_d8 A_491 (fun
                            | _510 => ((Array_159) A_491 n_499)))
  | _511 m_512 _513 pf_514 a_515 =>
    (match a_515 return ??13 with
      | (sig_intro_c13 l_516 v_517) =>
        (match ((nth_166) ??7 l_516 ??8 ??9 pf_514 v_517) return ??12 with
          | (tnsr_intro_c14 c_518 f_519) =>
            (match ((get_136) ??10 ((addn_3) l_516 m_512) c_518) return ??11 with
              | (sig_intro_c13 x_520 c_521) =>
                (sig_intro_c13 x_520 (sig_intro_c13 l_516 ((f_519) c_521))))))

def _215 := main_1


trans01 success-------------------------------------

data unit_d1 : U
  | tt_c1 : unit_d1

data bool_d2 : U
  | true_c2 : bool_d2
  | false_c3 : bool_d2

data nat_d3 : U
  | zero_c4 : nat_d3
  | succ_c5 : nat_d3 -> nat_d3

def (addn_3 := addn_10805) : nat_d3 -> nat_d3 -> nat_d3
  | zero_c4 x_10809 => x_10809
  | (succ_c5 x_10810) y_10811 => (succ_c5 ((addn_10805) x_10810 y_10811))

data option_d4 (A_10812 : U) : U
  | none_c6 (A_10813 : U) : (option_d4 A_10813)
  | some_c7 (A_10814 : U) : A_10814 -> (option_d4 A_10814)

data list_d5 (A_10816 : U) : U
  | nil_c8 (A_10817 : U) : (list_d5 A_10817)
  | cons_c9 (A_10818 : U) : A_10818 -> (list_d5 A_10818) -> (list_d5 A_10818)

data vec_d6 (A_10822 : U) : nat_d3 -> U
  | vnil_c10 (A_10824 : U) : (vec_d6 A_10824 zero_c4)
  | vcons_c11 (A_10825 : U) :
    ∀ (n_10826 : nat_d3) ->
      A_10825 ->
        (vec_d6 A_10825 n_10826) -> (vec_d6 A_10825 (succ_c5 n_10826))

data ex_d7 (A_10831 : U) (P_10832 : A_10831 -> U) : U
  | ex_intro_c12 (A_10834 : U) (P_10835 : A_10834 -> U) :
    ∀ (x_10837 : A_10834) -> ((P_10835) x_10837) -> (ex_d7 A_10834 P_10835)

data sig_d8 (A_10839 : U) (P_10840 : A_10839 -> L) : L
  | sig_intro_c13 (A_10842 : U) (P_10843 : A_10842 -> L) :
    ∀ (x_10845 : A_10842) ->
      ((P_10843) x_10845) -> (sig_d8 A_10842 P_10843)

data tnsr_d9 (A_10847 : L) (B_10848 : L) : L
  | tnsr_intro_c14 (A_10849 : L) (B_10850 : L) :
    A_10849 -> B_10850 -> (tnsr_d9 A_10849 B_10850)

data box_d10 (A_10854 : U) : L
  | box_intro_c15 (A_10855 : U) : A_10855 -> (box_d10 A_10855)

data ascii_d11 : U
  | Ascii_c16 :
    bool_d2 ->
      bool_d2 ->
        bool_d2 ->
          bool_d2 -> bool_d2 -> bool_d2 -> bool_d2 -> bool_d2 -> ascii_d11

data string_d12 : U
  | EmptyString_c17 : string_d12
  | String_c18 : ascii_d11 -> string_d12 -> string_d12

def (cat_60 := cat_10896) : string_d12 -> string_d12 -> string_d12
  | EmptyString_c17 s_10900 => s_10900
  | (String_c18 c_10901 s1_10902) s2_10903 =>
    (String_c18 c_10901 ((cat_10896) s1_10902 s2_10903))

data le_d13 (n_10904 : nat_d3) : nat_d3 -> U
  | le_refl_c19 (n_10906 : nat_d3) : (le_d13 n_10906 n_10906)
  | le_succ_c20 (n_10907 : nat_d3) :
    ∀ (m_10908 : nat_d3) ->
      (le_d13 n_10907 m_10908) -> (le_d13 n_10907 (succ_c5 m_10908))

def (lt_73 := lt_10910) : nat_d3 -> nat_d3 -> U
  | m_10914 n_10915 => (le_d13 (succ_c5 m_10914) n_10915)

data eq_d14 (A_10916 : U) (x_10917 : A_10916) : A_10916 -> U
  | refl_c21 (A_10919 : U) (x_10920 : A_10919) :
    (eq_d14 A_10919 x_10920 x_10920)

def (stdin_rec_83 := stdin_rec_10921) : unit_d1 -> proto
  | tt_c1 =>
    !(b_10923 : bool_d2) ⋅
      (match b_10923 return proto with
        | true_c2 => ?string_d12 ⋅ ((stdin_rec_10921) tt_c1)
        | false_c3 => end)

def (stdout_rec_87 := stdout_rec_10925) : unit_d1 -> proto
  | tt_c1 =>
    !(b_10927 : bool_d2) ⋅
      (match b_10927 return proto with
        | true_c2 => !string_d12 ⋅ ((stdout_rec_10925) tt_c1)
        | false_c3 => end)

def (stderr_rec_91 := stderr_rec_10929) : unit_d1 -> proto
  | tt_c1 =>
    !(b_10931 : bool_d2) ⋅
      (match b_10931 return proto with
        | true_c2 => !string_d12 ⋅ ((stderr_rec_10929) tt_c1)
        | false_c3 => end)

def stdin_t_95 := ((stdin_rec_83) tt_c1)

def stdout_t_96 := ((stdout_rec_87) tt_c1)

def stderr_t_97 := ((stderr_rec_91) tt_c1)

def (readline_98 := readline_10933) :
  ch<stdin_t_95> -> (sig_d8 string_d12 (fun
                                         | _10939 => ch<stdin_t_95>))
  | ch_10940 => recv ((send ch_10940) true_c2)

def (close_in_103 := close_in_10941) : ch<stdin_t_95> -> unit_d1
  | ch_10943 => close ((send ch_10943) false_c3)

def (printline_106 := printline_10944) :
  ch<stdout_t_96> -> string_d12 -o ch<stdout_t_96>
  | ch_10948 s_10949 => ((send ((send ch_10948) true_c2)) s_10949)

def (close_out_111 := close_out_10950) : ch<stdout_t_96> -> unit_d1
  | ch_10952 => close ((send ch_10952) false_c3)

def (printerr_114 := printerr_10953) :
  ch<stderr_t_97> -> string_d12 -o ch<stderr_t_97>
  | ch_10957 s_10958 => ((send ((send ch_10957) true_c2)) s_10958)

def (close_err_119 := close_err_10959) : ch<stderr_t_97> -> unit_d1
  | ch_10961 => close ((send ch_10961) false_c3)

def loc_122 := nat_d3

axiom at_123 : U -> loc_122 -> L

axiom new_126 :
  ∀ (A_10965 : U) ->
    A_10965 -> (sig_d8 loc_122 (fun
                                 | l_10972 => ((at_123) A_10965 l_10972)))

axiom free_131 :
  ∀ (A_10973 : U) ->
    ∀ (l_10976 : loc_122) ->
      A_10973 -> ((at_123) A_10973 l_10976) -> unit_d1

axiom get_136 :
  ∀ (A_10982 : U) ->
    ∀ (l_10985 : loc_122) ->
      ((at_123) A_10982 l_10985) ->
        (sig_d8 A_10982 (fun
                          | _10992 => ((at_123) A_10982 l_10985)))

axiom set_142 :
  ∀ (A_10993 : U) ->
    ∀ (B_10997 : U) ->
      ∀ (l_11002 : loc_122) ->
        A_10993 ->
          ((at_123) A_10993 l_11002) -> B_10997 -o ((at_123) A_10993 l_11002)

data ArrVec_d15 (A_11011 : U) (l_11012 : loc_122) : loc_122 -> L
  | Nil_c22 (A_11014 : U) (l_11015 : loc_122) :
    (ArrVec_d15 A_11014 l_11015 zero_c4)
  | Cons_c23 (A_11016 : U) (l_11017 : loc_122) :
    ∀ (n_11018 : nat_d3) ->
      ((at_123) A_11016 ((addn_3) l_11017 n_11018)) ->
        (ArrVec_d15 A_11016 l_11017 n_11018) ->
          (ArrVec_d15 A_11016 l_11017 (succ_c5 n_11018))

def (Array_159 := Array_11022) : U -> loc_122 -> L
  | A_11026 n_11027 =>
    (sig_d8 loc_122 (fun
                      | l_11030 => (ArrVec_d15 A_11026 l_11030 n_11027)))

def (nth_166 := nth_11031) :
  ∀ (A_11032 : U) ->
    ∀ (l_11038 : loc_122) ->
      ∀ (m_11043 : loc_122) ->
        ∀ (n_11046 : loc_122) ->
          ((lt_73) m_11043 n_11046) ->
            (ArrVec_d15 A_11032 l_11038 n_11046) ->
              (tnsr_d9 ((at_123) A_11032 ((addn_3) l_11038 m_11043))
              ((at_123) A_11032 ((addn_3) l_11038 m_11043)) -o
                (ArrVec_d15 A_11032 l_11038 n_11046))
  | _11054 _11055 _11056 _11057 le_refl_c19 (Cons_c23 n_11058 c_11059 v_11060) =>
    (tnsr_intro_c14 c_11059
    (fun
      | c_11063 => (Cons_c23 n_11058 c_11063 v_11060)))
  | _11064 _11065 m_11066 _11067 (le_succ_c20 _11068 pf_11069) (Cons_c23 n_11070 c0_11071 v0_11072) =>
    (match ((nth_11031) _11064 _11065 m_11066 n_11070 pf_11069 v0_11072)
     return
       (tnsr_d9 ((at_123) _11064 ((addn_3) _11065 m_11066))
       ((at_123) _11064 ((addn_3) _11065 m_11066)) -o
         (ArrVec_d15 _11064 _11065 (succ_c5 _11068)))
     with
      | (tnsr_intro_c14 c_11074 f_11075) =>
        (tnsr_intro_c14 c_11074
        (fun
          | c_11078 => (Cons_c23 n_11070 c0_11071 ((f_11075) c_11078)))))

def (index_196 := index_11079) :
  ∀ (A_11080 : U) ->
    ∀ (m_11085 : loc_122) ->
      ∀ (n_11088 : loc_122) ->
        ((lt_73) m_11085 n_11088) ->
          ((Array_159) A_11080 n_11088) ->
            (sig_d8 A_11080 (fun
                              | _11099 => ((Array_159) A_11080 n_11088)))
  | _11100 m_11101 _11102 pf_11103 a_11104 =>
    (match a_11104 return
       (sig_d8 _11100 (fun
                        | _11107 => ((Array_159) _11100 _11102)))
     with
      | (sig_intro_c13 l_11108 v_11109) =>
        (match ((nth_166) _11100 l_11108 m_11101 _11102 pf_11103 v_11109)
         return (sig_d8 _11100 (fun
                                 | _11112 => ((Array_159) _11100 _11102)))
         with
          | (tnsr_intro_c14 c_11113 f_11114) =>
            (match ((get_136) _11100 ((addn_3) l_11108 m_11101) c_11113)
             return
               (sig_d8 _11100 (fun
                                | _11117 => ((Array_159) _11100 _11102)))
             with
              | (sig_intro_c13 x_11118 c_11119) =>
                (sig_intro_c13 x_11118
                (sig_intro_c13 l_11108 ((f_11114) c_11119))))))

def _215 := main_1


trans1e success-------------------------------------

def addn_3 :=
  fix addn_14330 _14331 =>
    (case _14331 of
      | zero_c4 => lam _14332 => _14332
      | (succ_c5 _14333) =>
        lam _14334 => (succ_c5 ((addn_14330) _14333 _14334)))

def cat_60 :=
  fix cat_14335 _14336 =>
    (case _14336 of
      | EmptyString_c17 => lam _14337 => _14337
      | (String_c18 _14338 _14339) =>
        lam _14340 => (String_c18 _14338 ((cat_14335) _14339 _14340)))

def lt_73 := fix lt_14341 _14342 _14343 => (le_d13 (succ_c5 _14342) _14343)

def stdin_rec_83 :=
  fix stdin_rec_14344 _14345 =>
    (case _14345 of
      | tt_c1 =>
        !(b_14346 : bool_d2) ⋅
          ((lin _14349 =>
              (case _14349 of
                | true_c2 => ?string_d12 ⋅ ((stdin_rec_14344) tt_c1)
                | false_c3 => end))
            b_14346))

def stdout_rec_87 :=
  fix stdout_rec_14351 _14352 =>
    (case _14352 of
      | tt_c1 =>
        !(b_14353 : bool_d2) ⋅
          ((lin _14356 =>
              (case _14356 of
                | true_c2 => !string_d12 ⋅ ((stdout_rec_14351) tt_c1)
                | false_c3 => end))
            b_14353))

def stderr_rec_91 :=
  fix stderr_rec_14358 _14359 =>
    (case _14359 of
      | tt_c1 =>
        !(b_14360 : bool_d2) ⋅
          ((lin _14363 =>
              (case _14363 of
                | true_c2 => !string_d12 ⋅ ((stderr_rec_14358) tt_c1)
                | false_c3 => end))
            b_14360))

def stdin_t_95 := ((stdin_rec_83) tt_c1)

def stdout_t_96 := ((stdout_rec_87) tt_c1)

def stderr_t_97 := ((stderr_rec_91) tt_c1)

def readline_98 := fix readline_14365 _14366 => recv ((send _14366) true_c2)

def close_in_103 :=
  fix close_in_14367 _14368 => close ((send _14368) false_c3)

def printline_106 :=
  fix printline_14369 _14370 =>
    lin _14371 => ((send ((send _14370) true_c2)) _14371)

def close_out_111 :=
  fix close_out_14372 _14373 => close ((send _14373) false_c3)

def printerr_114 :=
  fix printerr_14374 _14375 =>
    lin _14376 => ((send ((send _14375) true_c2)) _14376)

def close_err_119 :=
  fix close_err_14377 _14378 => close ((send _14378) false_c3)

def loc_122 := nat_d3

def Array_159 :=
  fix Array_14379 _14380 _14381 =>
    (sig_d8 loc_122 fix _14382 _14383 => (ArrVec_d15 _14380 _14383 _14381))

def nth_166 :=
  fix nth_14384 A_14385 l_14386 m_14387 n_14388 _14389 =>
    (case _14389 of
      | le_refl_c19 =>
        lam _14390 =>
          (case _14390 of
            | Nil_c22 => absurd
            | (Cons_c23 n_14391 _14392 _14393) =>
              (tnsr_intro_c14 _14392
              lin _14394 => (Cons_c23 m_14387 _14394 _14393)))
      | (le_succ_c20 m_14395 _14396) =>
        lam _14397 =>
          (case _14397 of
            | Nil_c22 => absurd
            | (Cons_c23 n_14398 _14399 _14400) =>
              ((lin _14401 =>
                  (case _14401 of
                    | (tnsr_intro_c14 _14402 _14403) =>
                      (tnsr_intro_c14 _14402
                      lin _14404 =>
                        (Cons_c23 m_14395 _14399 ((_14403) _14404)))))
                ((nth_14384) A_14385 l_14386 m_14387 m_14395 _14396 _14400))))

def index_196 :=
  fix index_14405 A_14406 m_14407 n_14408 _14409 _14410 =>
    ((lin _14411 =>
        (case _14411 of
          | (sig_intro_c13 x_14412 _14413) =>
            ((lin _14414 =>
                (case _14414 of
                  | (tnsr_intro_c14 _14415 _14416) =>
                    ((lin _14417 =>
                        (case _14417 of
                          | (sig_intro_c13 x_14418 _14419) =>
                            (sig_intro_c13 x_14418
                            (sig_intro_c13 x_14412 ((_14416) _14419)))))
                      ((get_136) A_14406 ((addn_3) x_14412 m_14407) _14415))))
              ((nth_166) A_14406 x_14412 m_14407 n_14408 _14409 _14413))))
      _14410)

def _215 := main_1


trans12 success-------------------------------------

[(addn_3,
  (VFix (addn_14420,
     lam _14438 =>
       (case _14438 of
         | zero_c4 => lam _14439 => _14439
         | (succ_c5 _14440) =>
           lam _14441 => (succ_c5 ((addn_14420) _14440 _14441)))
     )));
  (cat_60,
   (VFix (cat_14421,
      lam _14442 =>
        (case _14442 of
          | EmptyString_c17 => lam _14443 => _14443
          | (String_c18 _14444 _14445) =>
            lam _14446 => (String_c18 _14444 ((cat_14421) _14445 _14446)))
      )));
  (lt_73,
   (VFix (lt_14422, lam _14447 _14448 => (le_d13 (succ_c5 _14447) _14448))));
  (stdin_rec_83,
   (VFix (stdin_rec_14423,
      lam _14449 =>
        (case _14449 of
          | tt_c1 =>
            !(b_14450 : bool_d2) ⋅
              ((lin _14453 =>
                  (case _14453 of
                    | true_c2 => ?string_d12 ⋅ ((stdin_rec_14423) tt_c1)
                    | false_c3 => end))
                b_14450))
      )));
  (stdout_rec_87,
   (VFix (stdout_rec_14424,
      lam _14455 =>
        (case _14455 of
          | tt_c1 =>
            !(b_14456 : bool_d2) ⋅
              ((lin _14459 =>
                  (case _14459 of
                    | true_c2 => !string_d12 ⋅ ((stdout_rec_14424) tt_c1)
                    | false_c3 => end))
                b_14456))
      )));
  (stderr_rec_91,
   (VFix (stderr_rec_14425,
      lam _14461 =>
        (case _14461 of
          | tt_c1 =>
            !(b_14462 : bool_d2) ⋅
              ((lin _14465 =>
                  (case _14465 of
                    | true_c2 => !string_d12 ⋅ ((stderr_rec_14425) tt_c1)
                    | false_c3 => end))
                b_14462))
      )));
  (stdin_t_95, VBox); (stdout_t_96, VBox); (stderr_t_97, VBox);
  (readline_98,
   (VFix (readline_14429, lam _14467 => recv ((send _14467) true_c2))));
  (close_in_103,
   (VFix (close_in_14430, lam _14468 => close ((send _14468) false_c3))));
  (printline_106,
   (VFix (printline_14431,
      lam _14469 => lin _14470 => ((send ((send _14469) true_c2)) _14470))));
  (close_out_111,
   (VFix (close_out_14432, lam _14471 => close ((send _14471) false_c3))));
  (printerr_114,
   (VFix (printerr_14433,
      lam _14472 => lin _14473 => ((send ((send _14472) true_c2)) _14473))));
  (close_err_119,
   (VFix (close_err_14434, lam _14474 => close ((send _14474) false_c3))));
  (loc_122, VBox);
  (Array_159,
   (VFix (Array_14435,
      lam _14475 _14476 =>
        (sig_d8 loc_122
        fix _14477 _14478 => (ArrVec_d15 _14475 _14478 _14476))
      )));
  (nth_166,
   (VFix (nth_14436,
      lam A_14479 l_14480 m_14481 n_14482 _14483 =>
        (case _14483 of
          | le_refl_c19 =>
            lam _14484 =>
              (case _14484 of
                | Nil_c22 => absurd
                | (Cons_c23 n_14485 _14486 _14487) =>
                  (tnsr_intro_c14 _14486
                  lin _14488 => (Cons_c23 m_14481 _14488 _14487)))
          | (le_succ_c20 m_14489 _14490) =>
            lam _14491 =>
              (case _14491 of
                | Nil_c22 => absurd
                | (Cons_c23 n_14492 _14493 _14494) =>
                  ((lin _14495 =>
                      (case _14495 of
                        | (tnsr_intro_c14 _14496 _14497) =>
                          (tnsr_intro_c14 _14496
                          lin _14498 =>
                            (Cons_c23 m_14489 _14493 ((_14497) _14498)))))
                    ((nth_14436)
                      A_14479 l_14480 m_14481 m_14489 _14490 _14494))))
      )));
  (index_196,
   (VFix (index_14437,
      lam A_14499 m_14500 n_14501 _14502 _14503 =>
        ((lin _14504 =>
            (case _14504 of
              | (sig_intro_c13 x_14505 _14506) =>
                ((lin _14507 =>
                    (case _14507 of
                      | (tnsr_intro_c14 _14508 _14509) =>
                        ((lin _14510 =>
                            (case _14510 of
                              | (sig_intro_c13 x_14511 _14512) =>
                                (sig_intro_c13 x_14511
                                (sig_intro_c13 x_14505 ((_14509) _14512)))))
                          ((get_136)
                            A_14499 ((addn_3) x_14505 m_14500) _14508))))
                  ((nth_166) A_14499 x_14505 m_14500 n_14501 _14502 _14506))))
          _14503)
      )));
  (_215, VBox)]
eval2 success---------------------------------------

