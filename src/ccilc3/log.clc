[(DData ("lvec",
    (PTl ([((Some "A"), (Type U))], (Tl ([(None, (Id "nat"))], (Type L))))),
    [(DCons ("lnil",
        (PTl ([((Some "A"), (Type U))],
           (Tl ([], (App [(Id "lvec"); (Id "A"); (Id "zero")])))))
        ));
      (DCons ("lcons",
         (PTl ([((Some "A"), (Type U))],
            (Tl (
               [((Some "n"), (Id "nat")); (None, (Id "A"));
                 (None, (App [(Id "lvec"); (Id "A"); (Id "n")]))],
               (App [(Id "lvec"); (Id "A"); (App [(Id "succ"); (Id "n")])])))
            ))
         ))
      ]
    ));
  (DFun ("head",
     (Pi (U, [((Some "A"), (Type U)); ((Some "n"), (Id "nat"))],
        (Pi (U,
           [(None,
             (App [(Id "lvec"); (Id "A"); (App [(Id "succ"); (Id "n")])]))],
           (App
              [(Id "sig"); (Id "A");
                (Fun (None, None,
                   [(Cl
                       ([(PVar None)],
                        (Some (App [(Id "lvec"); (Id "A"); (Id "n")]))))
                     ]
                   ))
                ])
           ))
        )),
     [(Cl
         ([(PVar None); (PVar None);
            (PCons ("lcons",
               [(PVar None); (PVar (Some "hd")); (PVar (Some "tl"))]))
            ],
          (Some (App [(Id "sig_intro"); (Id "hd"); (Id "tl")]))))
       ]
     ));
  (DFun ("kappend",
     (Pi (U,
        [((Some "A"), (Type U)); ((Some "B"), (Type L));
          ((Some "m"), (Id "nat")); ((Some "n"), (Id "nat"))],
        (Pi (U, [(None, (App [(Id "lvec"); (Id "A"); (Id "m")]))],
           (Pi (L, [(None, (App [(Id "lvec"); (Id "A"); (Id "n")]))],
              (Pi (L,
                 [(None,
                   (Pi (L,
                      [(None,
                        (App
                           [(Id "lvec"); (Id "A");
                             (App [(Id "addn"); (Id "m"); (Id "n")])]))
                        ],
                      (Id "B"))))
                   ],
                 (Id "B")))
              ))
           ))
        )),
     [(Cl
         ([(PVar None); (PVar None); (PCons ("zero", [])); (PVar None);
            (PCons ("lnil", [])); (PVar (Some "ls2")); (PVar (Some "k"))],
          (Some (App [(Id "k"); (Id "ls2")]))));
       (Cl
          ([(PVar None); (PVar None); (PCons ("succ", [(PVar (Some "m"))]));
             (PVar (Some "n"));
             (PCons ("lcons",
                [(PVar None); (PVar (Some "hd")); (PVar (Some "tl"))]));
             (PVar (Some "ls2")); (PVar (Some "k"))],
           (Some (App
                    [(Id "kappend"); (Id "_"); (Id "_"); (Id "_"); (Id "_");
                      (Id "tl"); (Id "ls2");
                      (Fun (None, None,
                         [(Cl
                             ([(PVar (Some "res"))],
                              (Some (App
                                       [(Id "k");
                                         (App
                                            [(Id "lcons");
                                              (App
                                                 [(Id "addn"); (Id "m");
                                                   (Id "n")]);
                                              (Id "hd"); (Id "res")])
                                         ]))))
                           ]
                         ))
                      ]))))
       ]
     ));
  (DFun ("append",
     (Pi (U,
        [((Some "A"), (Type U)); ((Some "m"), (Id "nat"));
          ((Some "n"), (Id "nat"))],
        (Pi (U, [(None, (App [(Id "lvec"); (Id "A"); (Id "m")]))],
           (Pi (L, [(None, (App [(Id "lvec"); (Id "A"); (Id "n")]))],
              (App
                 [(Id "lvec"); (Id "A");
                   (App [(Id "addn"); (Id "m"); (Id "n")])])
              ))
           ))
        )),
     [(Cl
         ([(PVar None); (PVar None); (PVar None); (PVar (Some "xs"));
            (PVar (Some "ys"))],
          (Some (App
                   [(Id "kappend"); (Id "_"); (Id "_"); (Id "_"); (Id "_");
                     (Id "xs"); (Id "ys");
                     (Fun (None, None,
                        [(Cl ([(PVar (Some "x"))], (Some (Id "x"))))]))
                     ]))))
       ]
     ));
  (DFun ("rep",
     (Pi (U, [((Some "A"), (Type U)); ((Some "n"), (Id "nat"))],
        (Pi (U, [(None, (Id "A"))], (App [(Id "lvec"); (Id "A"); (Id "n")])))
        )),
     [(Cl
         ([(PVar None); (PCons ("zero", [])); (PVar None)],
          (Some (Id "lnil"))));
       (Cl
          ([(PVar None); (PCons ("succ", [(PVar (Some "n"))]));
             (PVar (Some "x"))],
           (Some (App
                    [(Id "lcons"); (Id "_"); (Id "x");
                      (App [(Id "rep"); (Id "_"); (Id "n"); (Id "x")])]))))
       ]
     ));
  (DFun ("length",
     (Pi (U, [((Some "A"), (Type U)); ((Some "n"), (Id "nat"))],
        (Pi (U, [(None, (App [(Id "lvec"); (Id "A"); (Id "n")]))],
           (App [(Id "box"); (Id "nat")])))
        )),
     [(Cl
         ([(PVar None); (PVar None); (PCons ("lnil", []))],
          (Some (App [(Id "box_intro"); (Id "zero")]))));
       (Cl
          ([(PVar None); (PVar None);
             (PCons ("lcons",
                [(PVar None); (PVar (Some "hd")); (PVar (Some "tl"))]))
             ],
           (Some (Let ((PCons ("box_intro", [(PVar (Some "len"))])),
                    (App [(Id "length"); (Id "_"); (Id "_"); (Id "tl")]),
                    (App [(Id "box_intro"); (App [(Id "succ"); (Id "len")])])
                    )))))
       ]
     ));
  (DFun ("string_of_nat", (Pi (U, [(None, (Id "nat"))], (Id "string"))),
     [(Cl
         ([(PCons ("zero", []))],
          (Some (App
                   [(Id "String");
                     (App
                        [(Id "Ascii"); (App [(Id "false")]);
                          (App [(Id "true")]); (App [(Id "true")]);
                          (App [(Id "true")]); (App [(Id "true")]);
                          (App [(Id "false")]); (App [(Id "true")]);
                          (App [(Id "false")])]);
                     (App
                        [(Id "String");
                          (App
                             [(Id "Ascii"); (App [(Id "false")]);
                               (App [(Id "true")]); (App [(Id "true")]);
                               (App [(Id "false")]); (App [(Id "false")]);
                               (App [(Id "true")]); (App [(Id "false")]);
                               (App [(Id "true")])]);
                          (App
                             [(Id "String");
                               (App
                                  [(Id "Ascii"); (App [(Id "false")]);
                                    (App [(Id "true")]); (App [(Id "true")]);
                                    (App [(Id "true")]);
                                    (App [(Id "false")]);
                                    (App [(Id "false")]);
                                    (App [(Id "true")]); (App [(Id "false")])
                                    ]);
                               (App
                                  [(Id "String");
                                    (App
                                       [(Id "Ascii"); (App [(Id "false")]);
                                         (App [(Id "true")]);
                                         (App [(Id "true")]);
                                         (App [(Id "false")]);
                                         (App [(Id "true")]);
                                         (App [(Id "true")]);
                                         (App [(Id "true")]);
                                         (App [(Id "true")])]);
                                    (App [(Id "EmptyString")])])
                               ])
                          ])
                     ]))));
       (Cl
          ([(PCons ("succ", [(PVar (Some "n"))]))],
           (Some (App
                    [(Id "cat");
                      (App
                         [(Id "cat");
                           (App
                              [(Id "String");
                                (App
                                   [(Id "Ascii"); (App [(Id "false")]);
                                     (App [(Id "true")]);
                                     (App [(Id "true")]);
                                     (App [(Id "true")]);
                                     (App [(Id "false")]);
                                     (App [(Id "false")]);
                                     (App [(Id "true")]); (App [(Id "true")])
                                     ]);
                                (App
                                   [(Id "String");
                                     (App
                                        [(Id "Ascii"); (App [(Id "false")]);
                                          (App [(Id "true")]);
                                          (App [(Id "true")]);
                                          (App [(Id "true")]);
                                          (App [(Id "false")]);
                                          (App [(Id "true")]);
                                          (App [(Id "false")]);
                                          (App [(Id "true")])]);
                                     (App
                                        [(Id "String");
                                          (App
                                             [(Id "Ascii");
                                               (App [(Id "false")]);
                                               (App [(Id "true")]);
                                               (App [(Id "true")]);
                                               (App [(Id "false")]);
                                               (App [(Id "false")]);
                                               (App [(Id "false")]);
                                               (App [(Id "true")]);
                                               (App [(Id "true")])]);
                                          (App
                                             [(Id "String");
                                               (App
                                                  [(Id "Ascii");
                                                    (App [(Id "false")]);
                                                    (App [(Id "true")]);
                                                    (App [(Id "true")]);
                                                    (App [(Id "false")]);
                                                    (App [(Id "false")]);
                                                    (App [(Id "false")]);
                                                    (App [(Id "true")]);
                                                    (App [(Id "true")])]);
                                               (App
                                                  [(Id "String");
                                                    (App
                                                       [(Id "Ascii");
                                                         (App [(Id "false")]);
                                                         (App [(Id "false")]);
                                                         (App [(Id "true")]);
                                                         (App [(Id "false")]);
                                                         (App [(Id "false")]);
                                                         (App [(Id "false")]);
                                                         (App [(Id "false")]);
                                                         (App [(Id "false")])
                                                         ]);
                                                    (App
                                                       [(Id "String");
                                                         (App
                                                            [(Id "Ascii");
                                                              (App
                                                                 [(Id "false")
                                                                   ]);
                                                              (App
                                                                 [(Id "false")
                                                                   ]);
                                                              (App
                                                                 [(Id "true")
                                                                   ]);
                                                              (App
                                                                 [(Id "false")
                                                                   ]);
                                                              (App
                                                                 [(Id "true")
                                                                   ]);
                                                              (App
                                                                 [(Id "false")
                                                                   ]);
                                                              (App
                                                                 [(Id "false")
                                                                   ]);
                                                              (App
                                                                 [(Id "false")
                                                                   ])
                                                              ]);
                                                         (App
                                                            [(Id
                                                                "EmptyString")
                                                              ])
                                                         ])
                                                    ])
                                               ])
                                          ])
                                     ])
                                ]);
                           (App [(Id "string_of_nat"); (Id "n")])]);
                      (App
                         [(Id "String");
                           (App
                              [(Id "Ascii"); (App [(Id "false")]);
                                (App [(Id "false")]); (App [(Id "true")]);
                                (App [(Id "false")]); (App [(Id "true")]);
                                (App [(Id "false")]); (App [(Id "false")]);
                                (App [(Id "true")])]);
                           (App [(Id "EmptyString")])])
                      ]))))
       ]
     ));
  (DTm ((Some "foo"), None,
     (App
        [(Id "rep"); (Id "_");
          (App
             [(Id "succ");
               (App
                  [(Id "succ");
                    (App
                       [(Id "succ");
                         (App
                            [(Id "succ");
                              (App [(Id "succ"); (App [(Id "zero")])])])
                         ])
                    ])
               ]);
          (Id "tt")])
     ));
  (DTm ((Some "bar"), None,
     (App
        [(Id "rep"); (Id "_");
          (App
             [(Id "succ");
               (App
                  [(Id "succ");
                    (App
                       [(Id "succ");
                         (App
                            [(Id "succ");
                              (App [(Id "succ"); (App [(Id "zero")])])])
                         ])
                    ])
               ]);
          (Id "tt")])
     ));
  (DTm ((Some "baz"), None,
     (App
        [(Id "append"); (Id "_"); (Id "_"); (Id "_"); (Id "foo"); (Id "bar")])
     ));
  (DOpen ("@stdout", "stdout"));
  (DTm (None, None,
     (Let ((PCons ("box_intro", [(PVar (Some "len"))])),
        (App [(Id "length"); (Id "_"); (Id "_"); (Id "baz")]),
        (Let ((PVar (Some "stdout")),
           (App
              [(Id "printline"); (Id "stdout");
                (App [(Id "string_of_nat"); (Id "len")])]),
           (Let ((PCons ("tt", [])), (App [(Id "close_out"); (Id "stdout")]),
              (Id "main")))
           ))
        ))
     ))
  ]
parse success---------------------------------------

data unit_d1 : U
  | tt_c1 : unit_d1

data bool_d2 : U
  | true_c2 : bool_d2
  | false_c3 : bool_d2

data nat_d3 : U
  | zero_c4 : nat_d3
  | succ_c5 : nat_d3 -> nat_d3

def (addn_3 := addn_221) : nat_d3 -> nat_d3 -> nat_d3
  | zero_c4 x_225 => x_225
  | (succ_c5 x_226) y_227 => (succ_c5 ((addn_221) x_226 y_227))

def (subn_9 := subn_228) : nat_d3 -> nat_d3 -> nat_d3
  | zero_c4 _232 => zero_c4
  | x_233 zero_c4 => x_233
  | (succ_c5 x_234) (succ_c5 y_235) => ((subn_228) x_234 y_235)

data option_d4 (A_236 : U) : U
  | none_c6 (A_237 : U) : (option_d4 A_237)
  | some_c7 (A_238 : U) : A_238 -> (option_d4 A_238)

data list_d5 (A_240 : U) : U
  | nil_c8 (A_241 : U) : (list_d5 A_241)
  | cons_c9 (A_242 : U) : A_242 -> (list_d5 A_242) -> (list_d5 A_242)

data vec_d6 (A_246 : U) : nat_d3 -> U
  | vnil_c10 (A_248 : U) : (vec_d6 A_248 zero_c4)
  | vcons_c11 (A_249 : U) :
    ∀ (n_250 : nat_d3) ->
      A_249 -> (vec_d6 A_249 n_250) -> (vec_d6 A_249 (succ_c5 n_250))

data ex_d7 (A_255 : U) (P_256 : A_255 -> U) : U
  | ex_intro_c12 (A_258 : U) (P_259 : A_258 -> U) :
    ∀ (x_261 : A_258) -> ((P_259) x_261) -> (ex_d7 A_258 P_259)

data sig_d8 (A_263 : U) (P_264 : A_263 -> L) : L
  | sig_intro_c13 (A_266 : U) (P_267 : A_266 -> L) :
    ∀ (x_269 : A_266) -> ((P_267) x_269) -> (sig_d8 A_266 P_267)

data tnsr_d9 (A_271 : L) (B_272 : L) : L
  | tnsr_intro_c14 (A_273 : L) (B_274 : L) :
    A_273 -> B_274 -> (tnsr_d9 A_273 B_274)

data box_d10 (A_278 : U) : L
  | box_intro_c15 (A_279 : U) : A_279 -> (box_d10 A_279)

data ascii_d11 : U
  | Ascii_c16 :
    bool_d2 ->
      bool_d2 ->
        bool_d2 ->
          bool_d2 -> bool_d2 -> bool_d2 -> bool_d2 -> bool_d2 -> ascii_d11

data string_d12 : U
  | EmptyString_c17 : string_d12
  | String_c18 : ascii_d11 -> string_d12 -> string_d12

def (cat_67 := cat_320) : string_d12 -> string_d12 -> string_d12
  | EmptyString_c17 s_324 => s_324
  | (String_c18 c_325 s1_326) s2_327 =>
    (String_c18 c_325 ((cat_320) s1_326 s2_327))

def (strlen_74 := strlen_328) : string_d12 -> nat_d3
  | EmptyString_c17 => zero_c4
  | (String_c18 _330 s_331) => (succ_c5 ((strlen_328) s_331))

data le_d13 (n_332 : nat_d3) : nat_d3 -> U
  | le_refl_c19 (n_334 : nat_d3) : (le_d13 n_334 n_334)
  | le_succ_c20 (n_335 : nat_d3) :
    ∀ (m_336 : nat_d3) ->
      (le_d13 n_335 m_336) -> (le_d13 n_335 (succ_c5 m_336))

def (lt_84 := lt_338) : nat_d3 -> nat_d3 -> U
  | m_342 n_343 => (le_d13 (succ_c5 m_342) n_343)

data eq_d14 (A_344 : U) (x_345 : A_344) : A_344 -> U
  | refl_c21 (A_347 : U) (x_348 : A_347) : (eq_d14 A_347 x_348 x_348)

def (stdin_rec_94 := stdin_rec_349) : unit_d1 -> proto
  | tt_c1 =>
    !(b_351 : bool_d2) ⋅
      (match b_351 return ??1 with
        | true_c2 => ?string_d12 ⋅ ((stdin_rec_349) tt_c1)
        | false_c3 => end)

def (stdout_rec_98 := stdout_rec_353) : unit_d1 -> proto
  | tt_c1 =>
    !(b_355 : bool_d2) ⋅
      (match b_355 return ??2 with
        | true_c2 => !string_d12 ⋅ ((stdout_rec_353) tt_c1)
        | false_c3 => end)

def (stderr_rec_102 := stderr_rec_357) : unit_d1 -> proto
  | tt_c1 =>
    !(b_359 : bool_d2) ⋅
      (match b_359 return ??3 with
        | true_c2 => !string_d12 ⋅ ((stderr_rec_357) tt_c1)
        | false_c3 => end)

def stdin_t_106 := ((stdin_rec_94) tt_c1)

def stdout_t_107 := ((stdout_rec_98) tt_c1)

def stderr_t_108 := ((stderr_rec_102) tt_c1)

def (readline_109 := readline_361) :
  ch‹stdin_t_106› ->
    (sig_d8 string_d12 (fun
                         | _367 => ch‹stdin_t_106›))
  | ch_368 => recv ((send ch_368) true_c2)

def (close_in_114 := close_in_369) : ch‹stdin_t_106› -> unit_d1
  | ch_371 => close ((send ch_371) false_c3)

def (printline_117 := printline_372) :
  ch‹stdout_t_107› -> string_d12 -o ch‹stdout_t_107›
  | ch_376 s_377 => ((send ((send ch_376) true_c2)) s_377)

def (close_out_122 := close_out_378) : ch‹stdout_t_107› -> unit_d1
  | ch_380 => close ((send ch_380) false_c3)

def (printerr_125 := printerr_381) :
  ch‹stderr_t_108› -> string_d12 -o ch‹stderr_t_108›
  | ch_385 s_386 => ((send ((send ch_385) true_c2)) s_386)

def (close_err_130 := close_err_387) : ch‹stderr_t_108› -> unit_d1
  | ch_389 => close ((send ch_389) false_c3)

data lvec_d15 (A_390 : U) : nat_d3 -> L
  | lnil_c22 (A_392 : U) : (lvec_d15 A_392 zero_c4)
  | lcons_c23 (A_393 : U) :
    ∀ (n_394 : nat_d3) ->
      A_393 -> (lvec_d15 A_393 n_394) -> (lvec_d15 A_393 (succ_c5 n_394))

def (head_140 := head_399) :
  ∀ (A_400 : U) ->
    ∀ (n_403 : nat_d3) ->
      (lvec_d15 A_400 (succ_c5 n_403)) ->
        (sig_d8 A_400 (fun
                        | _410 => (lvec_d15 A_400 n_403)))
  | _411 _412 (lcons_c23 _413 hd_414 tl_415) => (sig_intro_c13 hd_414 tl_415)

def (kappend_151 := kappend_416) :
  ∀ (A_417 : U) ->
    ∀ (B_422 : L) ->
      ∀ (m_429 : nat_d3) ->
        ∀ (n_432 : nat_d3) ->
          (lvec_d15 A_417 m_429) ->
            (lvec_d15 A_417 n_432) -o
              (lvec_d15 A_417 ((addn_3) m_429 n_432)) -o B_422 -o B_422
  | _444 _445 zero_c4 _446 lnil_c22 ls2_447 k_448 => ((k_448) ls2_447)
  | _449 _450 (succ_c5 m_451) n_452 (lcons_c23 _453 hd_454 tl_455) ls2_456 k_457 =>
    ((kappend_416)
      ??4 ??5 ??6 ??7 tl_455 ls2_456
      (fun
        | res_460 =>
          ((k_457) (lcons_c23 ((addn_3) m_451 n_452) hd_454 res_460))))

def (append_176 := append_461) :
  ∀ (A_462 : U) ->
    ∀ (m_466 : nat_d3) ->
      ∀ (n_469 : nat_d3) ->
        (lvec_d15 A_462 m_466) ->
          (lvec_d15 A_462 n_469) -o (lvec_d15 A_462 ((addn_3) m_466 n_469))
  | _475 _476 _477 xs_478 ys_479 =>
    ((kappend_151) ??8 ??9 ??10 ??11 xs_478 ys_479 (fun
                                                     | x_482 => x_482))

def (rep_189 := rep_483) :
  ∀ (A_484 : U) -> ∀ (n_487 : nat_d3) -> A_484 -> (lvec_d15 A_484 n_487)
  | _490 zero_c4 _491 => lnil_c22
  | _492 (succ_c5 n_493) x_494 =>
    (lcons_c23 ??12 x_494 ((rep_483) ??13 n_493 x_494))

def (length_198 := length_495) :
  ∀ (A_496 : U) ->
    ∀ (n_499 : nat_d3) -> (lvec_d15 A_496 n_499) -> (box_d10 nat_d3)
  | _502 _503 lnil_c22 => (box_intro_c15 zero_c4)
  | _504 _505 (lcons_c23 _506 hd_507 tl_508) =>
    (match ((length_495) ??14 ??15 tl_508) return ??16 with
      | (box_intro_c15 len_509) => (box_intro_c15 (succ_c5 len_509)))

def (string_of_nat_210 := string_of_nat_510) : nat_d3 -> string_d12
  | zero_c4 => "zero"
  | (succ_c5 n_512) =>
    ((cat_67) ((cat_67) "succ (" ((string_of_nat_510) n_512)) ")")

def foo_213 := ((rep_189) ??17 5 tt_c1)

def bar_214 := ((rep_189) ??18 5 tt_c1)

def baz_215 := ((append_176) ??19 ??20 ??21 foo_213 bar_214)

open @stdout as stdout_216

def _217 :=
  (match ((length_198) ??22 ??23 baz_215) return ??25 with
    | (box_intro_c15 len_513) =>
      let stdout_514 :=
        ((printline_117) stdout_216 ((string_of_nat_210) len_513))
      in
      (match ((close_out_122) stdout_514) return ??24 with
        | tt_c1 => main_1))

trans01 success-------------------------------------

data unit_d1 : U
  | tt_c1 : unit_d1

data bool_d2 : U
  | true_c2 : bool_d2
  | false_c3 : bool_d2

data nat_d3 : U
  | zero_c4 : nat_d3
  | succ_c5 : nat_d3 -> nat_d3

def (addn_3 := addn_15490) : nat_d3 -> nat_d3 -> nat_d3
  | zero_c4 x_15494 => x_15494
  | (succ_c5 x_15495) y_15496 => (succ_c5 ((addn_15490) x_15495 y_15496))

def (subn_9 := subn_15497) : nat_d3 -> nat_d3 -> nat_d3
  | zero_c4 _15501 => zero_c4
  | x_15502 zero_c4 => x_15502
  | (succ_c5 x_15503) (succ_c5 y_15504) => ((subn_15497) x_15503 y_15504)

data option_d4 (A_15505 : U) : U
  | none_c6 (A_15506 : U) : (option_d4 A_15506)
  | some_c7 (A_15507 : U) : A_15507 -> (option_d4 A_15507)

data list_d5 (A_15509 : U) : U
  | nil_c8 (A_15510 : U) : (list_d5 A_15510)
  | cons_c9 (A_15511 : U) : A_15511 -> (list_d5 A_15511) -> (list_d5 A_15511)

data vec_d6 (A_15515 : U) : nat_d3 -> U
  | vnil_c10 (A_15517 : U) : (vec_d6 A_15517 zero_c4)
  | vcons_c11 (A_15518 : U) :
    ∀ (n_15519 : nat_d3) ->
      A_15518 ->
        (vec_d6 A_15518 n_15519) -> (vec_d6 A_15518 (succ_c5 n_15519))

data ex_d7 (A_15524 : U) (P_15525 : A_15524 -> U) : U
  | ex_intro_c12 (A_15527 : U) (P_15528 : A_15527 -> U) :
    ∀ (x_15530 : A_15527) -> ((P_15528) x_15530) -> (ex_d7 A_15527 P_15528)

data sig_d8 (A_15532 : U) (P_15533 : A_15532 -> L) : L
  | sig_intro_c13 (A_15535 : U) (P_15536 : A_15535 -> L) :
    ∀ (x_15538 : A_15535) ->
      ((P_15536) x_15538) -> (sig_d8 A_15535 P_15536)

data tnsr_d9 (A_15540 : L) (B_15541 : L) : L
  | tnsr_intro_c14 (A_15542 : L) (B_15543 : L) :
    A_15542 -> B_15543 -> (tnsr_d9 A_15542 B_15543)

data box_d10 (A_15547 : U) : L
  | box_intro_c15 (A_15548 : U) : A_15548 -> (box_d10 A_15548)

data ascii_d11 : U
  | Ascii_c16 :
    bool_d2 ->
      bool_d2 ->
        bool_d2 ->
          bool_d2 -> bool_d2 -> bool_d2 -> bool_d2 -> bool_d2 -> ascii_d11

data string_d12 : U
  | EmptyString_c17 : string_d12
  | String_c18 : ascii_d11 -> string_d12 -> string_d12

def (cat_67 := cat_15589) : string_d12 -> string_d12 -> string_d12
  | EmptyString_c17 s_15593 => s_15593
  | (String_c18 c_15594 s1_15595) s2_15596 =>
    (String_c18 c_15594 ((cat_15589) s1_15595 s2_15596))

def (strlen_74 := strlen_15597) : string_d12 -> nat_d3
  | EmptyString_c17 => zero_c4
  | (String_c18 _15599 s_15600) => (succ_c5 ((strlen_15597) s_15600))

data le_d13 (n_15601 : nat_d3) : nat_d3 -> U
  | le_refl_c19 (n_15603 : nat_d3) : (le_d13 n_15603 n_15603)
  | le_succ_c20 (n_15604 : nat_d3) :
    ∀ (m_15605 : nat_d3) ->
      (le_d13 n_15604 m_15605) -> (le_d13 n_15604 (succ_c5 m_15605))

def (lt_84 := lt_15607) : nat_d3 -> nat_d3 -> U
  | m_15611 n_15612 => (le_d13 (succ_c5 m_15611) n_15612)

data eq_d14 (A_15613 : U) (x_15614 : A_15613) : A_15613 -> U
  | refl_c21 (A_15616 : U) (x_15617 : A_15616) :
    (eq_d14 A_15616 x_15617 x_15617)

def (stdin_rec_94 := stdin_rec_15618) : unit_d1 -> proto
  | tt_c1 =>
    !(b_15620 : bool_d2) ⋅
      (match b_15620 return proto with
        | true_c2 => ?string_d12 ⋅ ((stdin_rec_15618) tt_c1)
        | false_c3 => end)

def (stdout_rec_98 := stdout_rec_15622) : unit_d1 -> proto
  | tt_c1 =>
    !(b_15624 : bool_d2) ⋅
      (match b_15624 return proto with
        | true_c2 => !string_d12 ⋅ ((stdout_rec_15622) tt_c1)
        | false_c3 => end)

def (stderr_rec_102 := stderr_rec_15626) : unit_d1 -> proto
  | tt_c1 =>
    !(b_15628 : bool_d2) ⋅
      (match b_15628 return proto with
        | true_c2 => !string_d12 ⋅ ((stderr_rec_15626) tt_c1)
        | false_c3 => end)

def stdin_t_106 := ((stdin_rec_94) tt_c1)

def stdout_t_107 := ((stdout_rec_98) tt_c1)

def stderr_t_108 := ((stderr_rec_102) tt_c1)

def (readline_109 := readline_15630) :
  ch‹stdin_t_106› ->
    (sig_d8 string_d12 (fun
                         | _15636 => ch‹stdin_t_106›))
  | ch_15637 => recv ((send ch_15637) true_c2)

def (close_in_114 := close_in_15638) : ch‹stdin_t_106› -> unit_d1
  | ch_15640 => close ((send ch_15640) false_c3)

def (printline_117 := printline_15641) :
  ch‹stdout_t_107› -> string_d12 -o ch‹stdout_t_107›
  | ch_15645 s_15646 => ((send ((send ch_15645) true_c2)) s_15646)

def (close_out_122 := close_out_15647) : ch‹stdout_t_107› -> unit_d1
  | ch_15649 => close ((send ch_15649) false_c3)

def (printerr_125 := printerr_15650) :
  ch‹stderr_t_108› -> string_d12 -o ch‹stderr_t_108›
  | ch_15654 s_15655 => ((send ((send ch_15654) true_c2)) s_15655)

def (close_err_130 := close_err_15656) : ch‹stderr_t_108› -> unit_d1
  | ch_15658 => close ((send ch_15658) false_c3)

data lvec_d15 (A_15659 : U) : nat_d3 -> L
  | lnil_c22 (A_15661 : U) : (lvec_d15 A_15661 zero_c4)
  | lcons_c23 (A_15662 : U) :
    ∀ (n_15663 : nat_d3) ->
      A_15662 ->
        (lvec_d15 A_15662 n_15663) -> (lvec_d15 A_15662 (succ_c5 n_15663))

def (head_140 := head_15668) :
  ∀ (A_15669 : U) ->
    ∀ (n_15672 : nat_d3) ->
      (lvec_d15 A_15669 (succ_c5 n_15672)) ->
        (sig_d8 A_15669 (fun
                          | _15679 => (lvec_d15 A_15669 n_15672)))
  | _15680 _15681 (lcons_c23 _15682 hd_15683 tl_15684) =>
    (sig_intro_c13 hd_15683 tl_15684)

def (kappend_151 := kappend_15685) :
  ∀ (A_15686 : U) ->
    ∀ (B_15691 : L) ->
      ∀ (m_15698 : nat_d3) ->
        ∀ (n_15701 : nat_d3) ->
          (lvec_d15 A_15686 m_15698) ->
            (lvec_d15 A_15686 n_15701) -o
              (lvec_d15 A_15686 ((addn_3) m_15698 n_15701)) -o B_15691 -o
                B_15691
  | _15713 _15714 zero_c4 _15715 lnil_c22 ls2_15716 k_15717 =>
    ((k_15717) ls2_15716)
  | _15718 _15719 (succ_c5 m_15720) n_15721 (lcons_c23 _15722 hd_15723 tl_15724) ls2_15725 k_15726 =>
    ((kappend_15685)
      _15718 _15719 m_15720 n_15721 tl_15724 ls2_15725
      (fun
        | res_15729 =>
          ((k_15726)
            (lcons_c23 ((addn_3) m_15720 n_15721) hd_15723 res_15729))))

def (append_176 := append_15730) :
  ∀ (A_15731 : U) ->
    ∀ (m_15735 : nat_d3) ->
      ∀ (n_15738 : nat_d3) ->
        (lvec_d15 A_15731 m_15735) ->
          (lvec_d15 A_15731 n_15738) -o
            (lvec_d15 A_15731 ((addn_3) m_15735 n_15738))
  | _15744 _15745 _15746 xs_15747 ys_15748 =>
    ((kappend_151)
      _15744 (lvec_d15 _15744 ((addn_3) _15745 _15746)) _15745 _15746
      xs_15747 ys_15748 (fun
                          | x_15751 => x_15751))

def (rep_189 := rep_15752) :
  ∀ (A_15753 : U) ->
    ∀ (n_15756 : nat_d3) -> A_15753 -> (lvec_d15 A_15753 n_15756)
  | _15759 zero_c4 _15760 => lnil_c22
  | _15761 (succ_c5 n_15762) x_15763 =>
    (lcons_c23 n_15762 x_15763 ((rep_15752) _15761 n_15762 x_15763))

def (length_198 := length_15764) :
  ∀ (A_15765 : U) ->
    ∀ (n_15768 : nat_d3) -> (lvec_d15 A_15765 n_15768) -> (box_d10 nat_d3)
  | _15771 _15772 lnil_c22 => (box_intro_c15 zero_c4)
  | _15773 _15774 (lcons_c23 _15775 hd_15776 tl_15777) =>
    (match ((length_15764) _15773 _15775 tl_15777) return (box_d10 nat_d3) with
      | (box_intro_c15 len_15778) => (box_intro_c15 (succ_c5 len_15778)))

def (string_of_nat_210 := string_of_nat_15779) : nat_d3 -> string_d12
  | zero_c4 => "zero"
  | (succ_c5 n_15781) =>
    ((cat_67) ((cat_67) "succ (" ((string_of_nat_15779) n_15781)) ")")

def foo_213 := ((rep_189) unit_d1 5 tt_c1)

def bar_214 := ((rep_189) unit_d1 5 tt_c1)

def baz_215 := ((append_176) unit_d1 5 5 foo_213 bar_214)

open @stdout as stdout_216

def _217 :=
  (match ((length_198) unit_d1 ((addn_3) 5 5) baz_215) return @main with
    | (box_intro_c15 len_15782) =>
      let stdout_15783 :=
        ((printline_117) stdout_216 ((string_of_nat_210) len_15782))
      in
      (match ((close_out_122) stdout_15783) return @main with
        | tt_c1 => main_1))

trans1e success-------------------------------------

data unit_d1 : U
  | tt_c1 : unit_d1

data bool_d2 : U
  | true_c2 : bool_d2
  | false_c3 : bool_d2

data nat_d3 : U
  | zero_c4 : nat_d3
  | succ_c5 : nat_d3 -> nat_d3

def addn_3 :=
  fix addn_18104 _18105 =>
    (case _18105 of
      | zero_c4 => lam _18106 => _18106
      | (succ_c5 _18107) =>
        lam _18108 => (succ_c5 ((addn_18104) _18107 _18108)))

def subn_9 :=
  fix subn_18109 _18110 =>
    (case _18110 of
      | zero_c4 => lam _18111 => zero_c4
      | (succ_c5 _18112) =>
        lam _18113 =>
          (case _18113 of
            | zero_c4 => (succ_c5 _18112)
            | (succ_c5 _18114) => ((subn_18109) _18112 _18114)))

data option_d4 (A_18115 : U) : U
  | none_c6 (A_18116 : U) : (option_d4 A_18116)
  | some_c7 (A_18117 : U) : A_18117 -> (option_d4 A_18117)

data list_d5 (A_18119 : U) : U
  | nil_c8 (A_18120 : U) : (list_d5 A_18120)
  | cons_c9 (A_18121 : U) : A_18121 -> (list_d5 A_18121) -> (list_d5 A_18121)

data vec_d6 (A_18125 : U) : nat_d3 -> U
  | vnil_c10 (A_18127 : U) : (vec_d6 A_18127 zero_c4)
  | vcons_c11 (A_18128 : U) :
    ∀ (n_18129 : nat_d3) ->
      A_18128 ->
        (vec_d6 A_18128 n_18129) -> (vec_d6 A_18128 (succ_c5 n_18129))

data ex_d7 (A_18134 : U) (P_18135 : A_18134 -> U) : U
  | ex_intro_c12 (A_18137 : U) (P_18138 : A_18137 -> U) :
    ∀ (x_18140 : A_18137) -> ((P_18138) x_18140) -> (ex_d7 A_18137 P_18138)

data sig_d8 (A_18142 : U) (P_18143 : A_18142 -> L) : L
  | sig_intro_c13 (A_18145 : U) (P_18146 : A_18145 -> L) :
    ∀ (x_18148 : A_18145) ->
      ((P_18146) x_18148) -> (sig_d8 A_18145 P_18146)

data tnsr_d9 (A_18150 : L) (B_18151 : L) : L
  | tnsr_intro_c14 (A_18152 : L) (B_18153 : L) :
    A_18152 -> B_18153 -> (tnsr_d9 A_18152 B_18153)

data box_d10 (A_18157 : U) : L
  | box_intro_c15 (A_18158 : U) : A_18158 -> (box_d10 A_18158)

data ascii_d11 : U
  | Ascii_c16 :
    bool_d2 ->
      bool_d2 ->
        bool_d2 ->
          bool_d2 -> bool_d2 -> bool_d2 -> bool_d2 -> bool_d2 -> ascii_d11

data string_d12 : U
  | EmptyString_c17 : string_d12
  | String_c18 : ascii_d11 -> string_d12 -> string_d12

def cat_67 :=
  fix cat_18199 _18200 =>
    (case _18200 of
      | EmptyString_c17 => lam _18201 => _18201
      | (String_c18 _18202 _18203) =>
        lam _18204 => (String_c18 _18202 ((cat_18199) _18203 _18204)))

def strlen_74 :=
  fix strlen_18205 _18206 =>
    (case _18206 of
      | EmptyString_c17 => zero_c4
      | (String_c18 _18207 _18208) => (succ_c5 ((strlen_18205) _18208)))

data le_d13 (n_18209 : nat_d3) : nat_d3 -> U
  | le_refl_c19 (n_18211 : nat_d3) : (le_d13 n_18211 n_18211)
  | le_succ_c20 (n_18212 : nat_d3) :
    ∀ (m_18213 : nat_d3) ->
      (le_d13 n_18212 m_18213) -> (le_d13 n_18212 (succ_c5 m_18213))

def lt_84 := fix lt_18215 _18216 _18217 => (le_d13 (succ_c5 _18216) _18217)

data eq_d14 (A_18218 : U) (x_18219 : A_18218) : A_18218 -> U
  | refl_c21 (A_18221 : U) (x_18222 : A_18221) :
    (eq_d14 A_18221 x_18222 x_18222)

def stdin_rec_94 :=
  fix stdin_rec_18223 _18224 =>
    (case _18224 of
      | tt_c1 =>
        !(b_18225 : bool_d2) ⋅
          ((lin _18228 =>
              (case _18228 of
                | true_c2 => ?string_d12 ⋅ ((stdin_rec_18223) tt_c1)
                | false_c3 => end))
            b_18225))

def stdout_rec_98 :=
  fix stdout_rec_18230 _18231 =>
    (case _18231 of
      | tt_c1 =>
        !(b_18232 : bool_d2) ⋅
          ((lin _18235 =>
              (case _18235 of
                | true_c2 => !string_d12 ⋅ ((stdout_rec_18230) tt_c1)
                | false_c3 => end))
            b_18232))

def stderr_rec_102 :=
  fix stderr_rec_18237 _18238 =>
    (case _18238 of
      | tt_c1 =>
        !(b_18239 : bool_d2) ⋅
          ((lin _18242 =>
              (case _18242 of
                | true_c2 => !string_d12 ⋅ ((stderr_rec_18237) tt_c1)
                | false_c3 => end))
            b_18239))

def stdin_t_106 := ((stdin_rec_94) tt_c1)

def stdout_t_107 := ((stdout_rec_98) tt_c1)

def stderr_t_108 := ((stderr_rec_102) tt_c1)

def readline_109 := fix readline_18244 _18245 => recv ((send _18245) true_c2)

def close_in_114 :=
  fix close_in_18246 _18247 => close ((send _18247) false_c3)

def printline_117 :=
  fix printline_18248 _18249 =>
    lin _18250 => ((send ((send _18249) true_c2)) _18250)

def close_out_122 :=
  fix close_out_18251 _18252 => close ((send _18252) false_c3)

def printerr_125 :=
  fix printerr_18253 _18254 =>
    lin _18255 => ((send ((send _18254) true_c2)) _18255)

def close_err_130 :=
  fix close_err_18256 _18257 => close ((send _18257) false_c3)

data lvec_d15 (A_18258 : U) : nat_d3 -> L
  | lnil_c22 (A_18260 : U) : (lvec_d15 A_18260 zero_c4)
  | lcons_c23 (A_18261 : U) :
    ∀ (n_18262 : nat_d3) ->
      A_18261 ->
        (lvec_d15 A_18261 n_18262) -> (lvec_d15 A_18261 (succ_c5 n_18262))

def head_140 :=
  fix head_18267 A_18268 n_18269 _18270 =>
    (case _18270 of
      | lnil_c22 => absurd
      | (lcons_c23 n_18271 _18272 _18273) => (sig_intro_c13 _18272 _18273))

def kappend_151 :=
  fix kappend_18274 A_18275 B_18276 m_18277 =>
    (case m_18277 of
      | zero_c4 =>
        lam n_18278 _18279 =>
          (case _18279 of
            | lnil_c22 => lin _18280 _18281 => ((_18281) _18280)
            | (lcons_c23 n_18282 _18283 _18284) => absurd)
      | (succ_c5 _18285) =>
        lam n_18286 _18287 =>
          (case _18287 of
            | lnil_c22 => absurd
            | (lcons_c23 n_18288 _18289 _18290) =>
              lin _18291 _18292 =>
                ((kappend_18274)
                  A_18275 B_18276 _18285 n_18286 _18290 _18291
                  lin _18293 =>
                    ((_18292)
                      (lcons_c23 ((addn_3) _18285 n_18286) _18289 _18293)))))

def append_176 :=
  fix append_18294 A_18295 m_18296 n_18297 _18298 =>
    lin _18299 =>
      ((kappend_151)
        A_18295 (lvec_d15 A_18295 ((addn_3) m_18296 n_18297)) m_18296 n_18297
        _18298 _18299 lin _18300 => _18300)

def rep_189 :=
  fix rep_18301 A_18302 n_18303 =>
    (case n_18303 of
      | zero_c4 => lam _18304 => lnil_c22
      | (succ_c5 _18305) =>
        lam _18306 =>
          (lcons_c23 _18305 _18306 ((rep_18301) A_18302 _18305 _18306)))

def length_198 :=
  fix length_18307 A_18308 n_18309 _18310 =>
    (case _18310 of
      | lnil_c22 => (box_intro_c15 zero_c4)
      | (lcons_c23 n_18311 _18312 _18313) =>
        ((lin _18314 =>
            (case _18314 of
              | (box_intro_c15 _18315) => (box_intro_c15 (succ_c5 _18315))))
          ((length_18307) A_18308 n_18311 _18313)))

def string_of_nat_210 :=
  fix string_of_nat_18316 _18317 =>
    (case _18317 of
      | zero_c4 => "zero"
      | (succ_c5 _18318) =>
        ((cat_67) ((cat_67) "succ (" ((string_of_nat_18316) _18318)) ")"))

def foo_213 := ((rep_189) unit_d1 5 tt_c1)

def bar_214 := ((rep_189) unit_d1 5 tt_c1)

def baz_215 := ((append_176) unit_d1 5 5 foo_213 bar_214)

open @stdout as stdout_216

def _217 :=
  ((lin _18319 =>
      (case _18319 of
        | (box_intro_c15 _18320) =>
          let stdout_18321 :=
            ((printline_117) stdout_216 ((string_of_nat_210) _18320))
          in
          ((lin _18322 => (case _18322 of
                            | tt_c1 => main_1))
            ((close_out_122) stdout_18321))))
    ((length_198) unit_d1 ((addn_3) 5 5) baz_215))

trans12 success-------------------------------------

[(addn_3,
  (VFix (addn_18323, _18324,
     (case _18324 of
       | zero_c4 => lam _20031 => _20031
       | (succ_c5 _20032) =>
         lam _20033 => (succ_c5 ((addn_18323) _20032 _20033))),
     <opaque>)));
  (subn_9,
   (VFix (subn_18325, _18326,
      (case _18326 of
        | zero_c4 => lam _20034 => zero_c4
        | (succ_c5 _20035) =>
          lam _20036 =>
            (case _20036 of
              | zero_c4 => (succ_c5 _20035)
              | (succ_c5 _20037) => ((subn_18325) _20035 _20037))),
      <opaque>)));
  (cat_67,
   (VFix (cat_18327, _18328,
      (case _18328 of
        | EmptyString_c17 => lam _20038 => _20038
        | (String_c18 _20039 _20040) =>
          lam _20041 => (String_c18 _20039 ((cat_18327) _20040 _20041))),
      <opaque>)));
  (strlen_74,
   (VFix (strlen_18329, _18330,
      (case _18330 of
        | EmptyString_c17 => zero_c4
        | (String_c18 _20042 _20043) => (succ_c5 ((strlen_18329) _20043))),
      <opaque>)));
  (lt_84,
   (VFix (lt_18331, _18332, lam _20044 => (le_d13 (succ_c5 _18332) _20044),
      <opaque>)));
  (stdin_rec_94,
   (VFix (stdin_rec_18333, _18334,
      (case _18334 of
        | tt_c1 =>
          !(b_20045 : bool_d2) ⋅
            ((lin _20048 =>
                (case _20048 of
                  | true_c2 => ?string_d12 ⋅ ((stdin_rec_18333) tt_c1)
                  | false_c3 => end))
              b_20045)),
      <opaque>)));
  (stdout_rec_98,
   (VFix (stdout_rec_18335, _18336,
      (case _18336 of
        | tt_c1 =>
          !(b_20050 : bool_d2) ⋅
            ((lin _20053 =>
                (case _20053 of
                  | true_c2 => !string_d12 ⋅ ((stdout_rec_18335) tt_c1)
                  | false_c3 => end))
              b_20050)),
      <opaque>)));
  (stderr_rec_102,
   (VFix (stderr_rec_18337, _18338,
      (case _18338 of
        | tt_c1 =>
          !(b_20055 : bool_d2) ⋅
            ((lin _20058 =>
                (case _20058 of
                  | true_c2 => !string_d12 ⋅ ((stderr_rec_18337) tt_c1)
                  | false_c3 => end))
              b_20055)),
      <opaque>)));
  (stdin_t_106, VBox); (stdout_t_107, VBox); (stderr_t_108, VBox);
  (readline_109,
   (VFix (readline_18339, _18340, recv ((send _18340) true_c2), <opaque>)));
  (close_in_114,
   (VFix (close_in_18341, _18342, close ((send _18342) false_c3), <opaque>)));
  (printline_117,
   (VFix (printline_18343, _18344,
      lin _20060 => ((send ((send _18344) true_c2)) _20060), <opaque>)));
  (close_out_122,
   (VFix (close_out_18345, _18346, close ((send _18346) false_c3), <opaque>)));
  (printerr_125,
   (VFix (printerr_18347, _18348,
      lin _20061 => ((send ((send _18348) true_c2)) _20061), <opaque>)));
  (close_err_130,
   (VFix (close_err_18349, _18350, close ((send _18350) false_c3), <opaque>)));
  (head_140,
   (VFix (head_18351, A_18352,
      lam n_20062 _20063 =>
        (case _20063 of
          | lnil_c22 => absurd
          | (lcons_c23 n_20064 _20065 _20066) =>
            (sig_intro_c13 _20065 _20066)),
      <opaque>)));
  (kappend_151,
   (VFix (kappend_18353, A_18354,
      lam B_20067 m_20068 =>
        (case m_20068 of
          | zero_c4 =>
            lam n_20069 _20070 =>
              (case _20070 of
                | lnil_c22 => lin _20071 _20072 => ((_20072) _20071)
                | (lcons_c23 n_20073 _20074 _20075) => absurd)
          | (succ_c5 _20076) =>
            lam n_20077 _20078 =>
              (case _20078 of
                | lnil_c22 => absurd
                | (lcons_c23 n_20079 _20080 _20081) =>
                  lin _20082 _20083 =>
                    ((kappend_18353)
                      A_18354 B_20067 _20076 n_20077 _20081 _20082
                      lin _20084 =>
                        ((_20083)
                          (lcons_c23 ((addn_3) _20076 n_20077) _20080 _20084))))),
      <opaque>)));
  (append_176,
   (VFix (append_18355, A_18356,
      lam m_20085 n_20086 _20087 =>
        lin _20088 =>
          ((kappend_151)
            A_18356 (lvec_d15 A_18356 ((addn_3) m_20085 n_20086)) m_20085
            n_20086 _20087 _20088 lin _20089 => _20089),
      <opaque>)));
  (rep_189,
   (VFix (rep_18357, A_18358,
      lam n_20090 =>
        (case n_20090 of
          | zero_c4 => lam _20091 => lnil_c22
          | (succ_c5 _20092) =>
            lam _20093 =>
              (lcons_c23 _20092 _20093 ((rep_18357) A_18358 _20092 _20093))),
      <opaque>)));
  (length_198,
   (VFix (length_18359, A_18360,
      lam n_20094 _20095 =>
        (case _20095 of
          | lnil_c22 => (box_intro_c15 zero_c4)
          | (lcons_c23 n_20096 _20097 _20098) =>
            ((lin _20099 =>
                (case _20099 of
                  | (box_intro_c15 _20100) =>
                    (box_intro_c15 (succ_c5 _20100))))
              ((length_18359) A_18360 n_20096 _20098))),
      <opaque>)));
  (string_of_nat_210,
   (VFix (string_of_nat_18361, _18362,
      (case _18362 of
        | zero_c4 => "zero"
        | (succ_c5 _20101) =>
          ((cat_67) ((cat_67) "succ (" ((string_of_nat_18361) _20101)) ")")),
      <opaque>)));
  (foo_213,
   (VCons (lcons_c23,
      [(VCons (succ_c5,
          [(VCons (succ_c5,
              [(VCons (succ_c5, [(VCons (succ_c5, [(VCons (zero_c4, []))]))]
                  ))
                ]
              ))
            ]
          ));
        (VCons (tt_c1, []));
        (VCons (lcons_c23,
           [(VCons (succ_c5,
               [(VCons (succ_c5, [(VCons (succ_c5, [(VCons (zero_c4, []))]))]
                   ))
                 ]
               ));
             (VCons (tt_c1, []));
             (VCons (lcons_c23,
                [(VCons (succ_c5,
                    [(VCons (succ_c5, [(VCons (zero_c4, []))]))]));
                  (VCons (tt_c1, []));
                  (VCons (lcons_c23,
                     [(VCons (succ_c5, [(VCons (zero_c4, []))]));
                       (VCons (tt_c1, []));
                       (VCons (lcons_c23,
                          [(VCons (zero_c4, [])); (VCons (tt_c1, []));
                            (VCons (lnil_c22, []))]
                          ))
                       ]
                     ))
                  ]
                ))
             ]
           ))
        ]
      )));
  (bar_214,
   (VCons (lcons_c23,
      [(VCons (succ_c5,
          [(VCons (succ_c5,
              [(VCons (succ_c5, [(VCons (succ_c5, [(VCons (zero_c4, []))]))]
                  ))
                ]
              ))
            ]
          ));
        (VCons (tt_c1, []));
        (VCons (lcons_c23,
           [(VCons (succ_c5,
               [(VCons (succ_c5, [(VCons (succ_c5, [(VCons (zero_c4, []))]))]
                   ))
                 ]
               ));
             (VCons (tt_c1, []));
             (VCons (lcons_c23,
                [(VCons (succ_c5,
                    [(VCons (succ_c5, [(VCons (zero_c4, []))]))]));
                  (VCons (tt_c1, []));
                  (VCons (lcons_c23,
                     [(VCons (succ_c5, [(VCons (zero_c4, []))]));
                       (VCons (tt_c1, []));
                       (VCons (lcons_c23,
                          [(VCons (zero_c4, [])); (VCons (tt_c1, []));
                            (VCons (lnil_c22, []))]
                          ))
                       ]
                     ))
                  ]
                ))
             ]
           ))
        ]
      )));
  (baz_215,
   (VCons (lcons_c23,
      [(VCons (succ_c5,
          [(VCons (succ_c5,
              [(VCons (succ_c5,
                  [(VCons (succ_c5,
                      [(VCons (succ_c5,
                          [(VCons (succ_c5,
                              [(VCons (succ_c5,
                                  [(VCons (succ_c5,
                                      [(VCons (succ_c5,
                                          [(VCons (zero_c4, []))]))
                                        ]
                                      ))
                                    ]
                                  ))
                                ]
                              ))
                            ]
                          ))
                        ]
                      ))
                    ]
                  ))
                ]
              ))
            ]
          ));
        (VCons (tt_c1, []));
        (VCons (lcons_c23,
           [(VCons (succ_c5,
               [(VCons (succ_c5,
                   [(VCons (succ_c5,
                       [(VCons (succ_c5,
                           [(VCons (succ_c5,
                               [(VCons (succ_c5,
                                   [(VCons (succ_c5,
                                       [(VCons (succ_c5,
                                           [(VCons (zero_c4, []))]))
                                         ]
                                       ))
                                     ]
                                   ))
                                 ]
                               ))
                             ]
                           ))
                         ]
                       ))
                     ]
                   ))
                 ]
               ));
             (VCons (tt_c1, []));
             (VCons (lcons_c23,
                [(VCons (succ_c5,
                    [(VCons (succ_c5,
                        [(VCons (succ_c5,
                            [(VCons (succ_c5,
                                [(VCons (succ_c5,
                                    [(VCons (succ_c5,
                                        [(VCons (succ_c5,
                                            [(VCons (zero_c4, []))]))
                                          ]
                                        ))
                                      ]
                                    ))
                                  ]
                                ))
                              ]
                            ))
                          ]
                        ))
                      ]
                    ));
                  (VCons (tt_c1, []));
                  (VCons (lcons_c23,
                     [(VCons (succ_c5,
                         [(VCons (succ_c5,
                             [(VCons (succ_c5,
                                 [(VCons (succ_c5,
                                     [(VCons (succ_c5,
                                         [(VCons (succ_c5,
                                             [(VCons (zero_c4, []))]))
                                           ]
                                         ))
                                       ]
                                     ))
                                   ]
                                 ))
                               ]
                             ))
                           ]
                         ));
                       (VCons (tt_c1, []));
                       (VCons (lcons_c23,
                          [(VCons (succ_c5,
                              [(VCons (succ_c5,
                                  [(VCons (succ_c5,
                                      [(VCons (succ_c5,
                                          [(VCons (succ_c5,
                                              [(VCons (zero_c4, []))]))
                                            ]
                                          ))
                                        ]
                                      ))
                                    ]
                                  ))
                                ]
                              ));
                            (VCons (tt_c1, []));
                            (VCons (lcons_c23,
                               [(VCons (succ_c5,
                                   [(VCons (succ_c5,
                                       [(VCons (succ_c5,
                                           [(VCons (succ_c5,
                                               [(VCons (zero_c4, []))]))
                                             ]
                                           ))
                                         ]
                                       ))
                                     ]
                                   ));
                                 (VCons (tt_c1, []));
                                 (VCons (lcons_c23,
                                    [(VCons (succ_c5,
                                        [(VCons (succ_c5,
                                            [(VCons (succ_c5,
                                                [(VCons (zero_c4, []))]))
                                              ]
                                            ))
                                          ]
                                        ));
                                      (VCons (tt_c1, []));
                                      (VCons (lcons_c23,
                                         [(VCons (succ_c5,
                                             [(VCons (succ_c5,
                                                 [(VCons (zero_c4, []))]))
                                               ]
                                             ));
                                           (VCons (tt_c1, []));
                                           (VCons (lcons_c23,
                                              [(VCons (succ_c5,
                                                  [(VCons (zero_c4, []))]));
                                                (VCons (tt_c1, []));
                                                (VCons (lcons_c23,
                                                   [(VCons (zero_c4, []));
                                                     (VCons (tt_c1, []));
                                                     (VCons (lnil_c22, []))]
                                                   ))
                                                ]
                                              ))
                                           ]
                                         ))
                                      ]
                                    ))
                                 ]
                               ))
                            ]
                          ))
                       ]
                     ))
                  ]
                ))
             ]
           ))
        ]
      )));
  (_217, VBox)]
eval2 success---------------------------------------

#include "runtime.h"

clc_ptr lam_20107(clc_ptr _20106, clc_env env)
{
  
  
  return _20106;
}

clc_ptr lam_20115(clc_ptr _20111, clc_env env)
{
  clc_ptr succ_c5_20114; clc_ptr tmp_20112; clc_ptr tmp_20113;
  instr_call(&tmp_20112, env[3], env[2]);
  instr_call(&tmp_20113, tmp_20112, _20111);
  instr_struct(&succ_c5_20114, 5, 1,
    tmp_20113);
  return succ_c5_20114;
}

clc_ptr addn_20117(clc_ptr _20103, clc_env env)
{
  clc_ptr _20109; clc_ptr case_20104; clc_ptr clo_20108; clc_ptr clo_20116;
  switch(((clc_node)_20103)->tag){
    case 4:
      instr_clo(&clo_20108, &lam_20107, 2, env, 1, _20103);
      instr_mov(&case_20104, clo_20108);
      break;
    case 5:
      instr_mov(&_20109, ((clc_node)_20103)->data[0]);
      instr_clo(&clo_20116, &lam_20115, 2, env, 2, _20103, _20109);
      instr_mov(&case_20104, clo_20116);
      break;}
  return case_20104;
}

clc_ptr lam_20125(clc_ptr _20123, clc_env env)
{
  clc_ptr zero_c4_20124;
  instr_struct(&zero_c4_20124, 4, 0);
  return zero_c4_20124;
}

clc_ptr lam_20135(clc_ptr _20129, clc_env env)
{
  clc_ptr _20132; clc_ptr case_20130; clc_ptr succ_c5_20131;
  clc_ptr tmp_20133; clc_ptr tmp_20134;
  switch(((clc_node)_20129)->tag){
    case 4:
      instr_struct(&succ_c5_20131, 5, 1,
        env[2]);
      instr_mov(&case_20130, succ_c5_20131);
      break;
    case 5:
      instr_mov(&_20132, ((clc_node)_20129)->data[0]);
      instr_call(&tmp_20133, env[3], env[2]);
      instr_call(&tmp_20134, tmp_20133, _20132);
      instr_mov(&case_20130, tmp_20134);
      break;}
  return case_20130;
}

clc_ptr subn_20137(clc_ptr _20120, clc_env env)
{
  clc_ptr _20127; clc_ptr case_20121; clc_ptr clo_20126; clc_ptr clo_20136;
  switch(((clc_node)_20120)->tag){
    case 4:
      instr_clo(&clo_20126, &lam_20125, 3, env, 1, _20120);
      instr_mov(&case_20121, clo_20126);
      break;
    case 5:
      instr_mov(&_20127, ((clc_node)_20120)->data[0]);
      instr_clo(&clo_20136, &lam_20135, 3, env, 2, _20120, _20127);
      instr_mov(&case_20121, clo_20136);
      break;}
  return case_20121;
}

clc_ptr lam_20144(clc_ptr _20143, clc_env env)
{
  
  
  return _20143;
}

clc_ptr lam_20153(clc_ptr _20149, clc_env env)
{
  clc_ptr String_c18_20152; clc_ptr tmp_20150; clc_ptr tmp_20151;
  instr_call(&tmp_20150, env[4], env[3]);
  instr_call(&tmp_20151, tmp_20150, _20149);
  instr_struct(&String_c18_20152, 18, 2,
    env[2], tmp_20151);
  return String_c18_20152;
}

clc_ptr cat_20155(clc_ptr _20140, clc_env env)
{
  clc_ptr _20146; clc_ptr _20147; clc_ptr case_20141; clc_ptr clo_20145;
  clc_ptr clo_20154;
  switch(((clc_node)_20140)->tag){
    case 17:
      instr_clo(&clo_20145, &lam_20144, 4, env, 1, _20140);
      instr_mov(&case_20141, clo_20145);
      break;
    case 18:
      instr_mov(&_20146, ((clc_node)_20140)->data[0]);
      instr_mov(&_20147, ((clc_node)_20140)->data[1]);
      instr_clo(&clo_20154, &lam_20153, 4, env, 3, _20140, _20146, _20147);
      instr_mov(&case_20141, clo_20154);
      break;}
  return case_20141;
}

clc_ptr strlen_20165(clc_ptr _20158, clc_env env)
{
  clc_ptr _20161; clc_ptr _20162; clc_ptr case_20159; clc_ptr succ_c5_20164;
  clc_ptr tmp_20163; clc_ptr zero_c4_20160;
  switch(((clc_node)_20158)->tag){
    case 17:
      instr_struct(&zero_c4_20160, 4, 0);
      instr_mov(&case_20159, zero_c4_20160);
      break;
    case 18:
      instr_mov(&_20161, ((clc_node)_20158)->data[0]);
      instr_mov(&_20162, ((clc_node)_20158)->data[1]);
      instr_call(&tmp_20163, env[0], _20162);
      instr_struct(&succ_c5_20164, 5, 1,
        tmp_20163);
      instr_mov(&case_20159, succ_c5_20164);
      break;}
  return case_20159;
}

clc_ptr lam_20171(clc_ptr _20170, clc_env env)
{
  
  
  return 0;
}

clc_ptr lt_20173(clc_ptr _20168, clc_env env)
{
  clc_ptr clo_20172;
  instr_clo(&clo_20172, &lam_20171, 6, env, 1, _20168);
  return clo_20172;
}

clc_ptr stdin_rec_20178(clc_ptr _20176, clc_env env)
{
  clc_ptr case_20177;
  switch(((clc_node)_20176)->tag){
    case 1: instr_mov(&case_20177, 0);
            break;}
  return case_20177;
}

clc_ptr stdout_rec_20183(clc_ptr _20181, clc_env env)
{
  clc_ptr case_20182;
  switch(((clc_node)_20181)->tag){
    case 1: instr_mov(&case_20182, 0);
            break;}
  return case_20182;
}

clc_ptr stderr_rec_20188(clc_ptr _20186, clc_env env)
{
  clc_ptr case_20187;
  switch(((clc_node)_20186)->tag){
    case 1: instr_mov(&case_20187, 0);
            break;}
  return case_20187;
}

clc_ptr readline_20202(clc_ptr _20197, clc_env env)
{
  clc_ptr recv_struct_20201; clc_ptr send_clo_20198; clc_ptr tmp_20200;
  clc_ptr true_c2_20199;
  instr_send(&send_clo_20198, _20197);
  instr_struct(&true_c2_20199, 2, 0);
  instr_call(&tmp_20200, send_clo_20198, true_c2_20199);
  instr_free_clo(send_clo_20198);
  instr_recv(&recv_struct_20201, tmp_20200, 13);
  return recv_struct_20201;
}

clc_ptr close_in_20210(clc_ptr _20205, clc_env env)
{
  clc_ptr false_c3_20208; clc_ptr send_clo_20207; clc_ptr tmp_20209;
  clc_ptr unit_struct_20206;
  instr_send(&send_clo_20207, _20205);
  instr_struct(&false_c3_20208, 3, 0);
  instr_call(&tmp_20209, send_clo_20207, false_c3_20208);
  instr_free_clo(send_clo_20207);
  instr_struct(&unit_struct_20206, 1, 0);
  return unit_struct_20206;
}

clc_ptr lam_20221(clc_ptr _20215, clc_env env)
{
  clc_ptr send_clo_20216; clc_ptr send_clo_20219; clc_ptr tmp_20218;
  clc_ptr tmp_20220; clc_ptr true_c2_20217;
  instr_send(&send_clo_20216, env[1]);
  instr_struct(&true_c2_20217, 2, 0);
  instr_call(&tmp_20218, send_clo_20216, true_c2_20217);
  instr_free_clo(send_clo_20216);
  instr_send(&send_clo_20219, tmp_20218);
  instr_call(&tmp_20220, send_clo_20219, _20215);
  instr_free_clo(send_clo_20219);
  return tmp_20220;
}

clc_ptr printline_20223(clc_ptr _20213, clc_env env)
{
  clc_ptr clo_20222;
  instr_clo(&clo_20222, &lam_20221, 15, env, 1, _20213);
  return clo_20222;
}

clc_ptr close_out_20231(clc_ptr _20226, clc_env env)
{
  clc_ptr false_c3_20229; clc_ptr send_clo_20228; clc_ptr tmp_20230;
  clc_ptr unit_struct_20227;
  instr_send(&send_clo_20228, _20226);
  instr_struct(&false_c3_20229, 3, 0);
  instr_call(&tmp_20230, send_clo_20228, false_c3_20229);
  instr_free_clo(send_clo_20228);
  instr_struct(&unit_struct_20227, 1, 0);
  return unit_struct_20227;
}

clc_ptr lam_20242(clc_ptr _20236, clc_env env)
{
  clc_ptr send_clo_20237; clc_ptr send_clo_20240; clc_ptr tmp_20239;
  clc_ptr tmp_20241; clc_ptr true_c2_20238;
  instr_send(&send_clo_20237, env[1]);
  instr_struct(&true_c2_20238, 2, 0);
  instr_call(&tmp_20239, send_clo_20237, true_c2_20238);
  instr_free_clo(send_clo_20237);
  instr_send(&send_clo_20240, tmp_20239);
  instr_call(&tmp_20241, send_clo_20240, _20236);
  instr_free_clo(send_clo_20240);
  return tmp_20241;
}

clc_ptr printerr_20244(clc_ptr _20234, clc_env env)
{
  clc_ptr clo_20243;
  instr_clo(&clo_20243, &lam_20242, 17, env, 1, _20234);
  return clo_20243;
}

clc_ptr close_err_20252(clc_ptr _20247, clc_env env)
{
  clc_ptr false_c3_20250; clc_ptr send_clo_20249; clc_ptr tmp_20251;
  clc_ptr unit_struct_20248;
  instr_send(&send_clo_20249, _20247);
  instr_struct(&false_c3_20250, 3, 0);
  instr_call(&tmp_20251, send_clo_20249, false_c3_20250);
  instr_free_clo(send_clo_20249);
  instr_struct(&unit_struct_20248, 1, 0);
  return unit_struct_20248;
}

clc_ptr lam_20265(clc_ptr _20259, clc_env env)
{
  clc_ptr _20262; clc_ptr _20263; clc_ptr case_20260; clc_ptr n_20261;
  clc_ptr sig_intro_c13_20264;
  switch(((clc_node)_20259)->tag){
    case 22: instr_free_struct(_20259);
             instr_mov(&case_20260, 0);
             break;
    case 23:
      instr_mov(&n_20261, ((clc_node)_20259)->data[0]);
      instr_mov(&_20262, ((clc_node)_20259)->data[1]);
      instr_mov(&_20263, ((clc_node)_20259)->data[2]);
      instr_free_struct(_20259);
      instr_struct(&sig_intro_c13_20264, 13, 2,
        _20262, _20263);
      instr_mov(&case_20260, sig_intro_c13_20264);
      break;}
  return case_20260;
}

clc_ptr lam_20267(clc_ptr n_20257, clc_env env)
{
  clc_ptr clo_20266;
  instr_clo(&clo_20266, &lam_20265, 21, env, 1, n_20257);
  return clo_20266;
}

clc_ptr head_20269(clc_ptr A_20255, clc_env env)
{
  clc_ptr clo_20268;
  instr_clo(&clo_20268, &lam_20267, 19, env, 1, A_20255);
  return clo_20268;
}

clc_ptr lam_20288(clc_ptr _20286, clc_env env)
{
  clc_ptr tmp_20287;
  instr_call(&tmp_20287, _20286, env[1]);
  instr_free_clo(_20286);
  return tmp_20287;
}

clc_ptr lam_20290(clc_ptr _20284, clc_env env)
{
  clc_ptr clo_20289;
  instr_clo(&clo_20289, &lam_20288, 30, env, 1, _20284);
  return clo_20289;
}

clc_ptr lam_20295(clc_ptr _20281, clc_env env)
{
  clc_ptr _20293; clc_ptr _20294; clc_ptr case_20282; clc_ptr clo_20291;
  clc_ptr n_20292;
  switch(((clc_node)_20281)->tag){
    case 22:
      instr_free_struct(_20281);
      instr_clo(&clo_20291, &lam_20290, 28, env, 1, _20281);
      instr_mov(&case_20282, clo_20291);
      break;
    case 23:
      instr_mov(&n_20292, ((clc_node)_20281)->data[0]);
      instr_mov(&_20293, ((clc_node)_20281)->data[1]);
      instr_mov(&_20294, ((clc_node)_20281)->data[2]);
      instr_free_struct(_20281);
      instr_mov(&case_20282, 0);
      break;}
  return case_20282;
}

clc_ptr lam_20297(clc_ptr n_20279, clc_env env)
{
  clc_ptr clo_20296;
  instr_clo(&clo_20296, &lam_20295, 26, env, 1, n_20279);
  return clo_20296;
}

clc_ptr lam_20324(clc_ptr _20319, clc_env env)
{
  clc_ptr lcons_c23_20322; clc_ptr tmp_20320; clc_ptr tmp_20321;
  clc_ptr tmp_20323;
  instr_call(&tmp_20320, env[36], env[13]);
  instr_call(&tmp_20321, tmp_20320, env[10]);
  instr_struct(&lcons_c23_20322, 23, 3,
    tmp_20321, env[7], _20319);
  instr_call(&tmp_20323, env[1], lcons_c23_20322);
  instr_free_clo(env[1]);
  return tmp_20323;
}

clc_ptr lam_20327(clc_ptr _20311, clc_env env)
{
  clc_ptr clo_20325; clc_ptr tmp_20312; clc_ptr tmp_20313; clc_ptr tmp_20314;
  clc_ptr tmp_20315; clc_ptr tmp_20316; clc_ptr tmp_20317; clc_ptr tmp_20326;
  instr_call(&tmp_20312, env[16], env[15]);
  instr_call(&tmp_20313, tmp_20312, env[13]);
  instr_call(&tmp_20314, tmp_20313, env[11]);
  instr_call(&tmp_20315, tmp_20314, env[8]);
  instr_call(&tmp_20316, tmp_20315, env[6]);
  instr_call(&tmp_20317, tmp_20316, env[1]);
  instr_free_clo(tmp_20316);
  instr_clo(&clo_20325, &lam_20324, 36, env, 1, _20311);
  instr_call(&tmp_20326, tmp_20317, clo_20325);
  instr_free_clo(tmp_20317);
  return tmp_20326;
}

clc_ptr lam_20329(clc_ptr _20309, clc_env env)
{
  clc_ptr clo_20328;
  instr_clo(&clo_20328, &lam_20327, 34, env, 1, _20309);
  return clo_20328;
}

clc_ptr lam_20331(clc_ptr _20303, clc_env env)
{
  clc_ptr _20306; clc_ptr _20307; clc_ptr case_20304; clc_ptr clo_20330;
  clc_ptr n_20305;
  switch(((clc_node)_20303)->tag){
    case 22: instr_free_struct(_20303);
             instr_mov(&case_20304, 0);
             break;
    case 23:
      instr_mov(&n_20305, ((clc_node)_20303)->data[0]);
      instr_mov(&_20306, ((clc_node)_20303)->data[1]);
      instr_mov(&_20307, ((clc_node)_20303)->data[2]);
      instr_free_struct(_20303);
      instr_clo(&clo_20330, &lam_20329, 29, env, 4,
        _20303, n_20305, _20306, _20307);
      instr_mov(&case_20304, clo_20330);
      break;}
  return case_20304;
}

clc_ptr lam_20333(clc_ptr n_20301, clc_env env)
{
  clc_ptr clo_20332;
  instr_clo(&clo_20332, &lam_20331, 27, env, 1, n_20301);
  return clo_20332;
}

clc_ptr lam_20335(clc_ptr m_20276, clc_env env)
{
  clc_ptr _20299; clc_ptr case_20277; clc_ptr clo_20298; clc_ptr clo_20334;
  switch(((clc_node)m_20276)->tag){
    case 4:
      instr_clo(&clo_20298, &lam_20297, 24, env, 1, m_20276);
      instr_mov(&case_20277, clo_20298);
      break;
    case 5:
      instr_mov(&_20299, ((clc_node)m_20276)->data[0]);
      instr_clo(&clo_20334, &lam_20333, 24, env, 2, m_20276, _20299);
      instr_mov(&case_20277, clo_20334);
      break;}
  return case_20277;
}

clc_ptr lam_20337(clc_ptr B_20274, clc_env env)
{
  clc_ptr clo_20336;
  instr_clo(&clo_20336, &lam_20335, 22, env, 1, B_20274);
  return clo_20336;
}

clc_ptr kappend_20339(clc_ptr A_20272, clc_env env)
{
  clc_ptr clo_20338;
  instr_clo(&clo_20338, &lam_20337, 20, env, 1, A_20272);
  return clo_20338;
}

clc_ptr lam_20359(clc_ptr _20358, clc_env env)
{
  
  
  return _20358;
}

clc_ptr lam_20362(clc_ptr _20350, clc_env env)
{
  clc_ptr clo_20360; clc_ptr tmp_20351; clc_ptr tmp_20352; clc_ptr tmp_20353;
  clc_ptr tmp_20354; clc_ptr tmp_20355; clc_ptr tmp_20356; clc_ptr tmp_20361;
  instr_call(&tmp_20351, env[9], env[7]);
  instr_call(&tmp_20352, tmp_20351, 0);
  instr_call(&tmp_20353, tmp_20352, env[5]);
  instr_call(&tmp_20354, tmp_20353, env[3]);
  instr_call(&tmp_20355, tmp_20354, env[1]);
  instr_call(&tmp_20356, tmp_20355, _20350);
  instr_free_clo(tmp_20355);
  instr_clo(&clo_20360, &lam_20359, 29, env, 1, _20350);
  instr_call(&tmp_20361, tmp_20356, clo_20360);
  instr_free_clo(tmp_20356);
  return tmp_20361;
}

clc_ptr lam_20364(clc_ptr _20348, clc_env env)
{
  clc_ptr clo_20363;
  instr_clo(&clo_20363, &lam_20362, 27, env, 1, _20348);
  return clo_20363;
}

clc_ptr lam_20366(clc_ptr n_20346, clc_env env)
{
  clc_ptr clo_20365;
  instr_clo(&clo_20365, &lam_20364, 25, env, 1, n_20346);
  return clo_20365;
}

clc_ptr lam_20368(clc_ptr m_20344, clc_env env)
{
  clc_ptr clo_20367;
  instr_clo(&clo_20367, &lam_20366, 23, env, 1, m_20344);
  return clo_20367;
}

clc_ptr append_20370(clc_ptr A_20342, clc_env env)
{
  clc_ptr clo_20369;
  instr_clo(&clo_20369, &lam_20368, 21, env, 1, A_20342);
  return clo_20369;
}

clc_ptr lam_20380(clc_ptr _20378, clc_env env)
{
  clc_ptr lnil_c22_20379;
  instr_struct(&lnil_c22_20379, 22, 0);
  return lnil_c22_20379;
}

clc_ptr lam_20389(clc_ptr _20384, clc_env env)
{
  clc_ptr lcons_c23_20388; clc_ptr tmp_20385; clc_ptr tmp_20386;
  clc_ptr tmp_20387;
  instr_call(&tmp_20385, env[5], env[4]);
  instr_call(&tmp_20386, tmp_20385, env[2]);
  instr_call(&tmp_20387, tmp_20386, _20384);
  instr_struct(&lcons_c23_20388, 23, 3,
    env[2], _20384, tmp_20387);
  return lcons_c23_20388;
}

clc_ptr lam_20391(clc_ptr n_20375, clc_env env)
{
  clc_ptr _20382; clc_ptr case_20376; clc_ptr clo_20381; clc_ptr clo_20390;
  switch(((clc_node)n_20375)->tag){
    case 4:
      instr_clo(&clo_20381, &lam_20380, 24, env, 1, n_20375);
      instr_mov(&case_20376, clo_20381);
      break;
    case 5:
      instr_mov(&_20382, ((clc_node)n_20375)->data[0]);
      instr_clo(&clo_20390, &lam_20389, 24, env, 2, n_20375, _20382);
      instr_mov(&case_20376, clo_20390);
      break;}
  return case_20376;
}

clc_ptr rep_20393(clc_ptr A_20373, clc_env env)
{
  clc_ptr clo_20392;
  instr_clo(&clo_20392, &lam_20391, 22, env, 1, A_20373);
  return clo_20392;
}

clc_ptr lam_20413(clc_ptr _20408, clc_env env)
{
  clc_ptr _20410; clc_ptr box_intro_c15_20412; clc_ptr case_20409;
  clc_ptr succ_c5_20411;
  switch(((clc_node)_20408)->tag){
    case 15:
      instr_mov(&_20410, ((clc_node)_20408)->data[0]);
      instr_free_struct(_20408);
      instr_struct(&succ_c5_20411, 5, 1,
        _20410);
      instr_struct(&box_intro_c15_20412, 15, 1,
        succ_c5_20411);
      instr_mov(&case_20409, box_intro_c15_20412);
      break;}
  return case_20409;
}

clc_ptr lam_20419(clc_ptr _20400, clc_env env)
{
  clc_ptr _20405; clc_ptr _20406; clc_ptr box_intro_c15_20403;
  clc_ptr case_20401; clc_ptr clo_20414; clc_ptr n_20404; clc_ptr tmp_20415;
  clc_ptr tmp_20416; clc_ptr tmp_20417; clc_ptr tmp_20418;
  clc_ptr zero_c4_20402;
  switch(((clc_node)_20400)->tag){
    case 22:
      instr_free_struct(_20400);
      instr_struct(&zero_c4_20402, 4, 0);
      instr_struct(&box_intro_c15_20403, 15, 1,
        zero_c4_20402);
      instr_mov(&case_20401, box_intro_c15_20403);
      break;
    case 23:
      instr_mov(&n_20404, ((clc_node)_20400)->data[0]);
      instr_mov(&_20405, ((clc_node)_20400)->data[1]);
      instr_mov(&_20406, ((clc_node)_20400)->data[2]);
      instr_free_struct(_20400);
      instr_clo(&clo_20414, &lam_20413, 27, env, 4,
        _20400, n_20404, _20405, _20406);
      instr_call(&tmp_20415, env[4], env[3]);
      instr_call(&tmp_20416, tmp_20415, n_20404);
      instr_call(&tmp_20417, tmp_20416, _20406);
      instr_call(&tmp_20418, clo_20414, tmp_20417);
      instr_free_clo(clo_20414);
      instr_mov(&case_20401, tmp_20418);
      break;}
  return case_20401;
}

clc_ptr lam_20421(clc_ptr n_20398, clc_env env)
{
  clc_ptr clo_20420;
  instr_clo(&clo_20420, &lam_20419, 25, env, 1, n_20398);
  return clo_20420;
}

clc_ptr length_20423(clc_ptr A_20396, clc_env env)
{
  clc_ptr clo_20422;
  instr_clo(&clo_20422, &lam_20421, 23, env, 1, A_20396);
  return clo_20422;
}

clc_ptr string_of_nat_20547(clc_ptr _20426, clc_env env)
{
  clc_ptr _20469; clc_ptr Ascii_c16_20436; clc_ptr Ascii_c16_20445;
  clc_ptr Ascii_c16_20454; clc_ptr Ascii_c16_20463; clc_ptr Ascii_c16_20478;
  clc_ptr Ascii_c16_20487; clc_ptr Ascii_c16_20496; clc_ptr Ascii_c16_20505;
  clc_ptr Ascii_c16_20514; clc_ptr Ascii_c16_20523; clc_ptr Ascii_c16_20543;
  clc_ptr EmptyString_c17_20464; clc_ptr EmptyString_c17_20524;
  clc_ptr EmptyString_c17_20544; clc_ptr String_c18_20465;
  clc_ptr String_c18_20466; clc_ptr String_c18_20467;
  clc_ptr String_c18_20468; clc_ptr String_c18_20525;
  clc_ptr String_c18_20526; clc_ptr String_c18_20527;
  clc_ptr String_c18_20528; clc_ptr String_c18_20529;
  clc_ptr String_c18_20530; clc_ptr String_c18_20545; clc_ptr case_20427;
  clc_ptr false_c3_20428; clc_ptr false_c3_20433; clc_ptr false_c3_20435;
  clc_ptr false_c3_20437; clc_ptr false_c3_20440; clc_ptr false_c3_20441;
  clc_ptr false_c3_20443; clc_ptr false_c3_20446; clc_ptr false_c3_20450;
  clc_ptr false_c3_20451; clc_ptr false_c3_20453; clc_ptr false_c3_20455;
  clc_ptr false_c3_20458; clc_ptr false_c3_20470; clc_ptr false_c3_20474;
  clc_ptr false_c3_20475; clc_ptr false_c3_20479; clc_ptr false_c3_20483;
  clc_ptr false_c3_20485; clc_ptr false_c3_20488; clc_ptr false_c3_20491;
  clc_ptr false_c3_20492; clc_ptr false_c3_20493; clc_ptr false_c3_20497;
  clc_ptr false_c3_20500; clc_ptr false_c3_20501; clc_ptr false_c3_20502;
  clc_ptr false_c3_20506; clc_ptr false_c3_20507; clc_ptr false_c3_20509;
  clc_ptr false_c3_20510; clc_ptr false_c3_20511; clc_ptr false_c3_20512;
  clc_ptr false_c3_20513; clc_ptr false_c3_20515; clc_ptr false_c3_20516;
  clc_ptr false_c3_20518; clc_ptr false_c3_20520; clc_ptr false_c3_20521;
  clc_ptr false_c3_20522; clc_ptr false_c3_20535; clc_ptr false_c3_20536;
  clc_ptr false_c3_20538; clc_ptr false_c3_20540; clc_ptr false_c3_20541;
  clc_ptr tmp_20531; clc_ptr tmp_20532; clc_ptr tmp_20533; clc_ptr tmp_20534;
  clc_ptr tmp_20546; clc_ptr true_c2_20429; clc_ptr true_c2_20430;
  clc_ptr true_c2_20431; clc_ptr true_c2_20432; clc_ptr true_c2_20434;
  clc_ptr true_c2_20438; clc_ptr true_c2_20439; clc_ptr true_c2_20442;
  clc_ptr true_c2_20444; clc_ptr true_c2_20447; clc_ptr true_c2_20448;
  clc_ptr true_c2_20449; clc_ptr true_c2_20452; clc_ptr true_c2_20456;
  clc_ptr true_c2_20457; clc_ptr true_c2_20459; clc_ptr true_c2_20460;
  clc_ptr true_c2_20461; clc_ptr true_c2_20462; clc_ptr true_c2_20471;
  clc_ptr true_c2_20472; clc_ptr true_c2_20473; clc_ptr true_c2_20476;
  clc_ptr true_c2_20477; clc_ptr true_c2_20480; clc_ptr true_c2_20481;
  clc_ptr true_c2_20482; clc_ptr true_c2_20484; clc_ptr true_c2_20486;
  clc_ptr true_c2_20489; clc_ptr true_c2_20490; clc_ptr true_c2_20494;
  clc_ptr true_c2_20495; clc_ptr true_c2_20498; clc_ptr true_c2_20499;
  clc_ptr true_c2_20503; clc_ptr true_c2_20504; clc_ptr true_c2_20508;
  clc_ptr true_c2_20517; clc_ptr true_c2_20519; clc_ptr true_c2_20537;
  clc_ptr true_c2_20539; clc_ptr true_c2_20542;
  switch(((clc_node)_20426)->tag){
    case 4:
      instr_struct(&false_c3_20428, 3, 0);
      instr_struct(&true_c2_20429, 2, 0);
      instr_struct(&true_c2_20430, 2, 0);
      instr_struct(&true_c2_20431, 2, 0);
      instr_struct(&true_c2_20432, 2, 0);
      instr_struct(&false_c3_20433, 3, 0);
      instr_struct(&true_c2_20434, 2, 0);
      instr_struct(&false_c3_20435, 3, 0);
      instr_struct(&Ascii_c16_20436, 16, 8,
        false_c3_20428, true_c2_20429, true_c2_20430, true_c2_20431,
        true_c2_20432, false_c3_20433, true_c2_20434, false_c3_20435);
      instr_struct(&false_c3_20437, 3, 0);
      instr_struct(&true_c2_20438, 2, 0);
      instr_struct(&true_c2_20439, 2, 0);
      instr_struct(&false_c3_20440, 3, 0);
      instr_struct(&false_c3_20441, 3, 0);
      instr_struct(&true_c2_20442, 2, 0);
      instr_struct(&false_c3_20443, 3, 0);
      instr_struct(&true_c2_20444, 2, 0);
      instr_struct(&Ascii_c16_20445, 16, 8,
        false_c3_20437, true_c2_20438, true_c2_20439, false_c3_20440,
        false_c3_20441, true_c2_20442, false_c3_20443, true_c2_20444);
      instr_struct(&false_c3_20446, 3, 0);
      instr_struct(&true_c2_20447, 2, 0);
      instr_struct(&true_c2_20448, 2, 0);
      instr_struct(&true_c2_20449, 2, 0);
      instr_struct(&false_c3_20450, 3, 0);
      instr_struct(&false_c3_20451, 3, 0);
      instr_struct(&true_c2_20452, 2, 0);
      instr_struct(&false_c3_20453, 3, 0);
      instr_struct(&Ascii_c16_20454, 16, 8,
        false_c3_20446, true_c2_20447, true_c2_20448, true_c2_20449,
        false_c3_20450, false_c3_20451, true_c2_20452, false_c3_20453);
      instr_struct(&false_c3_20455, 3, 0);
      instr_struct(&true_c2_20456, 2, 0);
      instr_struct(&true_c2_20457, 2, 0);
      instr_struct(&false_c3_20458, 3, 0);
      instr_struct(&true_c2_20459, 2, 0);
      instr_struct(&true_c2_20460, 2, 0);
      instr_struct(&true_c2_20461, 2, 0);
      instr_struct(&true_c2_20462, 2, 0);
      instr_struct(&Ascii_c16_20463, 16, 8,
        false_c3_20455, true_c2_20456, true_c2_20457, false_c3_20458,
        true_c2_20459, true_c2_20460, true_c2_20461, true_c2_20462);
      instr_struct(&EmptyString_c17_20464, 17, 0);
      instr_struct(&String_c18_20465, 18, 2,
        Ascii_c16_20463, EmptyString_c17_20464);
      instr_struct(&String_c18_20466, 18, 2,
        Ascii_c16_20454, String_c18_20465);
      instr_struct(&String_c18_20467, 18, 2,
        Ascii_c16_20445, String_c18_20466);
      instr_struct(&String_c18_20468, 18, 2,
        Ascii_c16_20436, String_c18_20467);
      instr_mov(&case_20427, String_c18_20468);
      break;
    case 5:
      instr_mov(&_20469, ((clc_node)_20426)->data[0]);
      instr_struct(&false_c3_20470, 3, 0);
      instr_struct(&true_c2_20471, 2, 0);
      instr_struct(&true_c2_20472, 2, 0);
      instr_struct(&true_c2_20473, 2, 0);
      instr_struct(&false_c3_20474, 3, 0);
      instr_struct(&false_c3_20475, 3, 0);
      instr_struct(&true_c2_20476, 2, 0);
      instr_struct(&true_c2_20477, 2, 0);
      instr_struct(&Ascii_c16_20478, 16, 8,
        false_c3_20470, true_c2_20471, true_c2_20472, true_c2_20473,
        false_c3_20474, false_c3_20475, true_c2_20476, true_c2_20477);
      instr_struct(&false_c3_20479, 3, 0);
      instr_struct(&true_c2_20480, 2, 0);
      instr_struct(&true_c2_20481, 2, 0);
      instr_struct(&true_c2_20482, 2, 0);
      instr_struct(&false_c3_20483, 3, 0);
      instr_struct(&true_c2_20484, 2, 0);
      instr_struct(&false_c3_20485, 3, 0);
      instr_struct(&true_c2_20486, 2, 0);
      instr_struct(&Ascii_c16_20487, 16, 8,
        false_c3_20479, true_c2_20480, true_c2_20481, true_c2_20482,
        false_c3_20483, true_c2_20484, false_c3_20485, true_c2_20486);
      instr_struct(&false_c3_20488, 3, 0);
      instr_struct(&true_c2_20489, 2, 0);
      instr_struct(&true_c2_20490, 2, 0);
      instr_struct(&false_c3_20491, 3, 0);
      instr_struct(&false_c3_20492, 3, 0);
      instr_struct(&false_c3_20493, 3, 0);
      instr_struct(&true_c2_20494, 2, 0);
      instr_struct(&true_c2_20495, 2, 0);
      instr_struct(&Ascii_c16_20496, 16, 8,
        false_c3_20488, true_c2_20489, true_c2_20490, false_c3_20491,
        false_c3_20492, false_c3_20493, true_c2_20494, true_c2_20495);
      instr_struct(&false_c3_20497, 3, 0);
      instr_struct(&true_c2_20498, 2, 0);
      instr_struct(&true_c2_20499, 2, 0);
      instr_struct(&false_c3_20500, 3, 0);
      instr_struct(&false_c3_20501, 3, 0);
      instr_struct(&false_c3_20502, 3, 0);
      instr_struct(&true_c2_20503, 2, 0);
      instr_struct(&true_c2_20504, 2, 0);
      instr_struct(&Ascii_c16_20505, 16, 8,
        false_c3_20497, true_c2_20498, true_c2_20499, false_c3_20500,
        false_c3_20501, false_c3_20502, true_c2_20503, true_c2_20504);
      instr_struct(&false_c3_20506, 3, 0);
      instr_struct(&false_c3_20507, 3, 0);
      instr_struct(&true_c2_20508, 2, 0);
      instr_struct(&false_c3_20509, 3, 0);
      instr_struct(&false_c3_20510, 3, 0);
      instr_struct(&false_c3_20511, 3, 0);
      instr_struct(&false_c3_20512, 3, 0);
      instr_struct(&false_c3_20513, 3, 0);
      instr_struct(&Ascii_c16_20514, 16, 8,
        false_c3_20506, false_c3_20507, true_c2_20508, false_c3_20509,
        false_c3_20510, false_c3_20511, false_c3_20512, false_c3_20513);
      instr_struct(&false_c3_20515, 3, 0);
      instr_struct(&false_c3_20516, 3, 0);
      instr_struct(&true_c2_20517, 2, 0);
      instr_struct(&false_c3_20518, 3, 0);
      instr_struct(&true_c2_20519, 2, 0);
      instr_struct(&false_c3_20520, 3, 0);
      instr_struct(&false_c3_20521, 3, 0);
      instr_struct(&false_c3_20522, 3, 0);
      instr_struct(&Ascii_c16_20523, 16, 8,
        false_c3_20515, false_c3_20516, true_c2_20517, false_c3_20518,
        true_c2_20519, false_c3_20520, false_c3_20521, false_c3_20522);
      instr_struct(&EmptyString_c17_20524, 17, 0);
      instr_struct(&String_c18_20525, 18, 2,
        Ascii_c16_20523, EmptyString_c17_20524);
      instr_struct(&String_c18_20526, 18, 2,
        Ascii_c16_20514, String_c18_20525);
      instr_struct(&String_c18_20527, 18, 2,
        Ascii_c16_20505, String_c18_20526);
      instr_struct(&String_c18_20528, 18, 2,
        Ascii_c16_20496, String_c18_20527);
      instr_struct(&String_c18_20529, 18, 2,
        Ascii_c16_20487, String_c18_20528);
      instr_struct(&String_c18_20530, 18, 2,
        Ascii_c16_20478, String_c18_20529);
      instr_call(&tmp_20531, env[20], String_c18_20530);
      instr_call(&tmp_20532, env[0], _20469);
      instr_call(&tmp_20533, tmp_20531, tmp_20532);
      instr_call(&tmp_20534, env[20], tmp_20533);
      instr_struct(&false_c3_20535, 3, 0);
      instr_struct(&false_c3_20536, 3, 0);
      instr_struct(&true_c2_20537, 2, 0);
      instr_struct(&false_c3_20538, 3, 0);
      instr_struct(&true_c2_20539, 2, 0);
      instr_struct(&false_c3_20540, 3, 0);
      instr_struct(&false_c3_20541, 3, 0);
      instr_struct(&true_c2_20542, 2, 0);
      instr_struct(&Ascii_c16_20543, 16, 8,
        false_c3_20535, false_c3_20536, true_c2_20537, false_c3_20538,
        true_c2_20539, false_c3_20540, false_c3_20541, true_c2_20542);
      instr_struct(&EmptyString_c17_20544, 17, 0);
      instr_struct(&String_c18_20545, 18, 2,
        Ascii_c16_20543, EmptyString_c17_20544);
      instr_call(&tmp_20546, tmp_20534, String_c18_20545);
      instr_mov(&case_20427, tmp_20546);
      break;}
  return case_20427;
}

clc_ptr lam_20597(clc_ptr _20595, clc_env env)
{
  clc_ptr case_20596;
  switch(((clc_node)_20595)->tag){
    case 1: instr_mov(&case_20596, env[32]);
            break;}
  return case_20596;
}

clc_ptr lam_20601(clc_ptr _20587, clc_env env)
{
  clc_ptr _20589; clc_ptr case_20588; clc_ptr clo_20598;
  clc_ptr stdout_20590; clc_ptr tmp_20591; clc_ptr tmp_20592;
  clc_ptr tmp_20593; clc_ptr tmp_20599; clc_ptr tmp_20600;
  switch(((clc_node)_20587)->tag){
    case 15:
      instr_mov(&_20589, ((clc_node)_20587)->data[0]);
      instr_free_struct(_20587);
      instr_call(&tmp_20591, env[14], env[1]);
      instr_call(&tmp_20592, env[5], _20589);
      instr_call(&tmp_20593, tmp_20591, tmp_20592);
      instr_free_clo(tmp_20591);
      instr_mov(&stdout_20590, tmp_20593);
      instr_clo(&clo_20598, &lam_20597, 29, env, 3,
        stdout_20590, _20587, _20589);
      instr_call(&tmp_20599, env[13], stdout_20590);
      instr_call(&tmp_20600, clo_20598, tmp_20599);
      instr_free_clo(clo_20598);
      instr_mov(&case_20588, tmp_20600);
      break;}
  return case_20588;
}

int main()
{
  clc_ptr _217; clc_ptr addn_3; clc_ptr addn_20118; clc_ptr append_176;
  clc_ptr append_20371; clc_ptr bar_214; clc_ptr baz_215; clc_ptr cat_67;
  clc_ptr cat_20156; clc_ptr clo_20602; clc_ptr close_err_130;
  clc_ptr close_err_20253; clc_ptr close_in_114; clc_ptr close_in_20211;
  clc_ptr close_out_122; clc_ptr close_out_20232; clc_ptr foo_213;
  clc_ptr head_140; clc_ptr head_20270; clc_ptr kappend_151;
  clc_ptr kappend_20340; clc_ptr length_198; clc_ptr length_20424;
  clc_ptr lt_84; clc_ptr lt_20174; clc_ptr printerr_125;
  clc_ptr printerr_20245; clc_ptr printline_117; clc_ptr printline_20224;
  clc_ptr readline_109; clc_ptr readline_20203; clc_ptr rep_189;
  clc_ptr rep_20394; clc_ptr stderr_rec_102; clc_ptr stderr_rec_20189;
  clc_ptr stderr_t_108; clc_ptr stdin_rec_94; clc_ptr stdin_rec_20179;
  clc_ptr stdin_t_106; clc_ptr stdout_216; clc_ptr stdout_rec_98;
  clc_ptr stdout_rec_20184; clc_ptr stdout_t_107; clc_ptr string_of_nat_210;
  clc_ptr string_of_nat_20548; clc_ptr strlen_74; clc_ptr strlen_20166;
  clc_ptr subn_9; clc_ptr subn_20138; clc_ptr succ_c5_20551;
  clc_ptr succ_c5_20552; clc_ptr succ_c5_20553; clc_ptr succ_c5_20554;
  clc_ptr succ_c5_20555; clc_ptr succ_c5_20561; clc_ptr succ_c5_20562;
  clc_ptr succ_c5_20563; clc_ptr succ_c5_20564; clc_ptr succ_c5_20565;
  clc_ptr succ_c5_20571; clc_ptr succ_c5_20572; clc_ptr succ_c5_20573;
  clc_ptr succ_c5_20574; clc_ptr succ_c5_20575; clc_ptr succ_c5_20578;
  clc_ptr succ_c5_20579; clc_ptr succ_c5_20580; clc_ptr succ_c5_20581;
  clc_ptr succ_c5_20582; clc_ptr succ_c5_20605; clc_ptr succ_c5_20606;
  clc_ptr succ_c5_20607; clc_ptr succ_c5_20608; clc_ptr succ_c5_20609;
  clc_ptr succ_c5_20612; clc_ptr succ_c5_20613; clc_ptr succ_c5_20614;
  clc_ptr succ_c5_20615; clc_ptr succ_c5_20616; clc_ptr tmp_20191;
  clc_ptr tmp_20193; clc_ptr tmp_20195; clc_ptr tmp_20549; clc_ptr tmp_20556;
  clc_ptr tmp_20558; clc_ptr tmp_20559; clc_ptr tmp_20566; clc_ptr tmp_20568;
  clc_ptr tmp_20569; clc_ptr tmp_20576; clc_ptr tmp_20583; clc_ptr tmp_20584;
  clc_ptr tmp_20585; clc_ptr tmp_20603; clc_ptr tmp_20610; clc_ptr tmp_20617;
  clc_ptr tmp_20618; clc_ptr tmp_20619; clc_ptr tmp_20620;
  clc_ptr tt_c1_20190; clc_ptr tt_c1_20192; clc_ptr tt_c1_20194;
  clc_ptr tt_c1_20557; clc_ptr tt_c1_20567; clc_ptr zero_c4_20550;
  clc_ptr zero_c4_20560; clc_ptr zero_c4_20570; clc_ptr zero_c4_20577;
  clc_ptr zero_c4_20604; clc_ptr zero_c4_20611;
  clc_env env = 0;
  instr_init();
  instr_clo(&addn_20118, &addn_20117, 0, env, 1, 0);
  instr_mov(&addn_3, addn_20118);
  instr_clo(&subn_20138, &subn_20137, 0, env, 2, addn_3, 0);
  instr_mov(&subn_9, subn_20138);
  instr_clo(&cat_20156, &cat_20155, 0, env, 3, subn_9, addn_3, 0);
  instr_mov(&cat_67, cat_20156);
  instr_clo(&strlen_20166, &strlen_20165, 0, env, 4,
    cat_67, subn_9, addn_3, 0);
  instr_mov(&strlen_74, strlen_20166);
  instr_clo(&lt_20174, &lt_20173, 0, env, 5,
    strlen_74, cat_67, subn_9, addn_3, 0);
  instr_mov(&lt_84, lt_20174);
  instr_clo(&stdin_rec_20179, &stdin_rec_20178, 0, env, 6,
    lt_84, strlen_74, cat_67, subn_9, addn_3, 0);
  instr_mov(&stdin_rec_94, stdin_rec_20179);
  instr_clo(&stdout_rec_20184, &stdout_rec_20183, 0, env, 7,
    stdin_rec_94, lt_84, strlen_74, cat_67, subn_9, addn_3, 0);
  instr_mov(&stdout_rec_98, stdout_rec_20184);
  instr_clo(&stderr_rec_20189, &stderr_rec_20188, 0, env, 8,
    stdout_rec_98, stdin_rec_94, lt_84, strlen_74, cat_67, subn_9, addn_3, 0);
  instr_mov(&stderr_rec_102, stderr_rec_20189);
  instr_struct(&tt_c1_20190, 1, 0);
  instr_call(&tmp_20191, stdin_rec_94, tt_c1_20190);
  instr_mov(&stdin_t_106, tmp_20191);
  instr_struct(&tt_c1_20192, 1, 0);
  instr_call(&tmp_20193, stdout_rec_98, tt_c1_20192);
  instr_mov(&stdout_t_107, tmp_20193);
  instr_struct(&tt_c1_20194, 1, 0);
  instr_call(&tmp_20195, stderr_rec_102, tt_c1_20194);
  instr_mov(&stderr_t_108, tmp_20195);
  instr_clo(&readline_20203, &readline_20202, 0, env, 12,
    stderr_t_108, stdout_t_107, stdin_t_106, stderr_rec_102, stdout_rec_98,
    stdin_rec_94, lt_84, strlen_74, cat_67, subn_9, addn_3, 0);
  instr_mov(&readline_109, readline_20203);
  instr_clo(&close_in_20211, &close_in_20210, 0, env, 13,
    readline_109, stderr_t_108, stdout_t_107, stdin_t_106, stderr_rec_102,
    stdout_rec_98, stdin_rec_94, lt_84, strlen_74, cat_67, subn_9, addn_3, 0);
  instr_mov(&close_in_114, close_in_20211);
  instr_clo(&printline_20224, &printline_20223, 0, env, 14,
    close_in_114, readline_109, stderr_t_108, stdout_t_107, stdin_t_106,
    stderr_rec_102, stdout_rec_98, stdin_rec_94, lt_84, strlen_74, cat_67,
    subn_9, addn_3, 0);
  instr_mov(&printline_117, printline_20224);
  instr_clo(&close_out_20232, &close_out_20231, 0, env, 15,
    printline_117, close_in_114, readline_109, stderr_t_108, stdout_t_107,
    stdin_t_106, stderr_rec_102, stdout_rec_98, stdin_rec_94, lt_84,
    strlen_74, cat_67, subn_9, addn_3, 0);
  instr_mov(&close_out_122, close_out_20232);
  instr_clo(&printerr_20245, &printerr_20244, 0, env, 16,
    close_out_122, printline_117, close_in_114, readline_109, stderr_t_108,
    stdout_t_107, stdin_t_106, stderr_rec_102, stdout_rec_98, stdin_rec_94,
    lt_84, strlen_74, cat_67, subn_9, addn_3, 0);
  instr_mov(&printerr_125, printerr_20245);
  instr_clo(&close_err_20253, &close_err_20252, 0, env, 17,
    printerr_125, close_out_122, printline_117, close_in_114, readline_109,
    stderr_t_108, stdout_t_107, stdin_t_106, stderr_rec_102, stdout_rec_98,
    stdin_rec_94, lt_84, strlen_74, cat_67, subn_9, addn_3, 0);
  instr_mov(&close_err_130, close_err_20253);
  instr_clo(&head_20270, &head_20269, 0, env, 18,
    close_err_130, printerr_125, close_out_122, printline_117, close_in_114,
    readline_109, stderr_t_108, stdout_t_107, stdin_t_106, stderr_rec_102,
    stdout_rec_98, stdin_rec_94, lt_84, strlen_74, cat_67, subn_9, addn_3, 0);
  instr_mov(&head_140, head_20270);
  instr_clo(&kappend_20340, &kappend_20339, 0, env, 19,
    head_140, close_err_130, printerr_125, close_out_122, printline_117,
    close_in_114, readline_109, stderr_t_108, stdout_t_107, stdin_t_106,
    stderr_rec_102, stdout_rec_98, stdin_rec_94, lt_84, strlen_74, cat_67,
    subn_9, addn_3, 0);
  instr_mov(&kappend_151, kappend_20340);
  instr_clo(&append_20371, &append_20370, 0, env, 20,
    kappend_151, head_140, close_err_130, printerr_125, close_out_122,
    printline_117, close_in_114, readline_109, stderr_t_108, stdout_t_107,
    stdin_t_106, stderr_rec_102, stdout_rec_98, stdin_rec_94, lt_84,
    strlen_74, cat_67, subn_9, addn_3, 0);
  instr_mov(&append_176, append_20371);
  instr_clo(&rep_20394, &rep_20393, 0, env, 21,
    append_176, kappend_151, head_140, close_err_130, printerr_125,
    close_out_122, printline_117, close_in_114, readline_109, stderr_t_108,
    stdout_t_107, stdin_t_106, stderr_rec_102, stdout_rec_98, stdin_rec_94,
    lt_84, strlen_74, cat_67, subn_9, addn_3, 0);
  instr_mov(&rep_189, rep_20394);
  instr_clo(&length_20424, &length_20423, 0, env, 22,
    rep_189, append_176, kappend_151, head_140, close_err_130, printerr_125,
    close_out_122, printline_117, close_in_114, readline_109, stderr_t_108,
    stdout_t_107, stdin_t_106, stderr_rec_102, stdout_rec_98, stdin_rec_94,
    lt_84, strlen_74, cat_67, subn_9, addn_3, 0);
  instr_mov(&length_198, length_20424);
  instr_clo(&string_of_nat_20548, &string_of_nat_20547, 0, env, 23,
    length_198, rep_189, append_176, kappend_151, head_140, close_err_130,
    printerr_125, close_out_122, printline_117, close_in_114, readline_109,
    stderr_t_108, stdout_t_107, stdin_t_106, stderr_rec_102, stdout_rec_98,
    stdin_rec_94, lt_84, strlen_74, cat_67, subn_9, addn_3, 0);
  instr_mov(&string_of_nat_210, string_of_nat_20548);
  instr_call(&tmp_20549, rep_189, 0);
  instr_struct(&zero_c4_20550, 4, 0);
  instr_struct(&succ_c5_20551, 5, 1,
    zero_c4_20550);
  instr_struct(&succ_c5_20552, 5, 1,
    succ_c5_20551);
  instr_struct(&succ_c5_20553, 5, 1,
    succ_c5_20552);
  instr_struct(&succ_c5_20554, 5, 1,
    succ_c5_20553);
  instr_struct(&succ_c5_20555, 5, 1,
    succ_c5_20554);
  instr_call(&tmp_20556, tmp_20549, succ_c5_20555);
  instr_struct(&tt_c1_20557, 1, 0);
  instr_call(&tmp_20558, tmp_20556, tt_c1_20557);
  instr_mov(&foo_213, tmp_20558);
  instr_call(&tmp_20559, rep_189, 0);
  instr_struct(&zero_c4_20560, 4, 0);
  instr_struct(&succ_c5_20561, 5, 1,
    zero_c4_20560);
  instr_struct(&succ_c5_20562, 5, 1,
    succ_c5_20561);
  instr_struct(&succ_c5_20563, 5, 1,
    succ_c5_20562);
  instr_struct(&succ_c5_20564, 5, 1,
    succ_c5_20563);
  instr_struct(&succ_c5_20565, 5, 1,
    succ_c5_20564);
  instr_call(&tmp_20566, tmp_20559, succ_c5_20565);
  instr_struct(&tt_c1_20567, 1, 0);
  instr_call(&tmp_20568, tmp_20566, tt_c1_20567);
  instr_mov(&bar_214, tmp_20568);
  instr_call(&tmp_20569, append_176, 0);
  instr_struct(&zero_c4_20570, 4, 0);
  instr_struct(&succ_c5_20571, 5, 1,
    zero_c4_20570);
  instr_struct(&succ_c5_20572, 5, 1,
    succ_c5_20571);
  instr_struct(&succ_c5_20573, 5, 1,
    succ_c5_20572);
  instr_struct(&succ_c5_20574, 5, 1,
    succ_c5_20573);
  instr_struct(&succ_c5_20575, 5, 1,
    succ_c5_20574);
  instr_call(&tmp_20576, tmp_20569, succ_c5_20575);
  instr_struct(&zero_c4_20577, 4, 0);
  instr_struct(&succ_c5_20578, 5, 1,
    zero_c4_20577);
  instr_struct(&succ_c5_20579, 5, 1,
    succ_c5_20578);
  instr_struct(&succ_c5_20580, 5, 1,
    succ_c5_20579);
  instr_struct(&succ_c5_20581, 5, 1,
    succ_c5_20580);
  instr_struct(&succ_c5_20582, 5, 1,
    succ_c5_20581);
  instr_call(&tmp_20583, tmp_20576, succ_c5_20582);
  instr_call(&tmp_20584, tmp_20583, foo_213);
  instr_call(&tmp_20585, tmp_20584, bar_214);
  instr_free_clo(tmp_20584);
  instr_mov(&baz_215, tmp_20585);
  instr_trg(&stdout_216, &proc_stdout);
  instr_clo(&clo_20602, &lam_20601, 0, env, 28,
    stdout_216, baz_215, bar_214, foo_213, string_of_nat_210, length_198,
    rep_189, append_176, kappend_151, head_140, close_err_130, printerr_125,
    close_out_122, printline_117, close_in_114, readline_109, stderr_t_108,
    stdout_t_107, stdin_t_106, stderr_rec_102, stdout_rec_98, stdin_rec_94,
    lt_84, strlen_74, cat_67, subn_9, addn_3, 0);
  instr_call(&tmp_20603, length_198, 0);
  instr_struct(&zero_c4_20604, 4, 0);
  instr_struct(&succ_c5_20605, 5, 1,
    zero_c4_20604);
  instr_struct(&succ_c5_20606, 5, 1,
    succ_c5_20605);
  instr_struct(&succ_c5_20607, 5, 1,
    succ_c5_20606);
  instr_struct(&succ_c5_20608, 5, 1,
    succ_c5_20607);
  instr_struct(&succ_c5_20609, 5, 1,
    succ_c5_20608);
  instr_call(&tmp_20610, addn_3, succ_c5_20609);
  instr_struct(&zero_c4_20611, 4, 0);
  instr_struct(&succ_c5_20612, 5, 1,
    zero_c4_20611);
  instr_struct(&succ_c5_20613, 5, 1,
    succ_c5_20612);
  instr_struct(&succ_c5_20614, 5, 1,
    succ_c5_20613);
  instr_struct(&succ_c5_20615, 5, 1,
    succ_c5_20614);
  instr_struct(&succ_c5_20616, 5, 1,
    succ_c5_20615);
  instr_call(&tmp_20617, tmp_20610, succ_c5_20616);
  instr_call(&tmp_20618, tmp_20603, tmp_20617);
  instr_call(&tmp_20619, tmp_20618, baz_215);
  instr_call(&tmp_20620, clo_20602, tmp_20619);
  instr_free_clo(clo_20602);
  instr_mov(&_217, tmp_20620);
  return 0;
}
trans23 success-------------------------------------

