[(DTm ((Some "loc"), None, (Id "nat")));
  (DAxiom ("at",
     (Pi (U, [((Some "A"), (Type U))],
        (Pi (U, [(None, (Id "loc"))], (Type L)))))
     ));
  (DAxiom ("new",
     (Pi (U, [((Some "A"), (Type U))],
        (Pi (U, [(None, (Id "A"))],
           (App
              [(Id "sig"); (Id "loc");
                (Fun (None, None,
                   [(Cl
                       ([(PVar (Some "l"))],
                        (Some (App [(Id "at"); (Id "A"); (Id "l")]))))
                     ]
                   ))
                ])
           ))
        ))
     ));
  (DAxiom ("free",
     (Pi (U, [((Some "A"), (Type U)); ((Some "l"), (Id "loc"))],
        (Pi (U, [(None, (Id "A"))],
           (Pi (U, [(None, (App [(Id "at"); (Id "A"); (Id "l")]))],
              (Id "unit")))
           ))
        ))
     ));
  (DAxiom ("get",
     (Pi (U, [((Some "A"), (Type U)); ((Some "l"), (Id "loc"))],
        (Pi (U, [(None, (App [(Id "at"); (Id "A"); (Id "l")]))],
           (App
              [(Id "sig"); (Id "A");
                (Fun (None, None,
                   [(Cl
                       ([(PVar None)],
                        (Some (App [(Id "at"); (Id "A"); (Id "l")]))))
                     ]
                   ))
                ])
           ))
        ))
     ));
  (DAxiom ("set",
     (Pi (U,
        [((Some "A"), (Type U)); ((Some "B"), (Type U));
          ((Some "l"), (Id "loc"))],
        (Pi (U, [(None, (Id "A"))],
           (Pi (U, [(None, (App [(Id "at"); (Id "A"); (Id "l")]))],
              (Pi (L, [((Some "y"), (Id "B"))],
                 (App [(Id "at"); (Id "A"); (Id "l")])))
              ))
           ))
        ))
     ));
  (DData ("ArrVec",
     (PTl ([((Some "A"), (Type U)); ((Some "l"), (Id "loc"))],
        (Tl ([(None, (Id "loc"))], (Type L))))),
     [(DCons ("Nil",
         (PTl ([((Some "A"), (Type U)); ((Some "l"), (Id "loc"))],
            (Tl ([],
               (App [(Id "ArrVec"); (Id "A"); (Id "l"); (App [(Id "zero")])])
               ))
            ))
         ));
       (DCons ("Cons",
          (PTl ([((Some "A"), (Type U)); ((Some "l"), (Id "loc"))],
             (Tl (
                [((Some "n"), (Id "nat"));
                  (None,
                   (App
                      [(Id "at"); (Id "A");
                        (App [(Id "addn"); (Id "l"); (Id "n")])]));
                  (None, (App [(Id "ArrVec"); (Id "A"); (Id "l"); (Id "n")]))
                  ],
                (App
                   [(Id "ArrVec"); (Id "A"); (Id "l");
                     (App [(Id "succ"); (Id "n")])])
                ))
             ))
          ))
       ]
     ));
  (DFun ("Array",
     (Pi (U, [(None, (Type U))], (Pi (U, [(None, (Id "loc"))], (Type L))))),
     [(Cl
         ([(PVar (Some "A")); (PVar (Some "n"))],
          (Some (App
                   [(Id "sig"); (Id "loc");
                     (Fun (None, None,
                        [(Cl
                            ([(PVar (Some "l"))],
                             (Some (App
                                      [(Id "ArrVec"); (Id "A"); (Id "l");
                                        (Id "n")]))))
                          ]
                        ))
                     ]))))
       ]
     ));
  (DFun ("nth",
     (Pi (U,
        [((Some "A"), (Type U)); ((Some "l"), (Id "loc"));
          ((Some "m"), (Id "loc")); ((Some "n"), (Id "loc"))],
        (Pi (U, [(None, (App [(Id "lt"); (Id "m"); (Id "n")]))],
           (Pi (U,
              [(None, (App [(Id "ArrVec"); (Id "A"); (Id "l"); (Id "n")]))],
              (App
                 [(Id "tnsr");
                   (App
                      [(Id "at"); (Id "A");
                        (App [(Id "addn"); (Id "l"); (Id "m")])]);
                   (Pi (L,
                      [(None,
                        (App
                           [(Id "at"); (Id "A");
                             (App [(Id "addn"); (Id "l"); (Id "m")])]))
                        ],
                      (App [(Id "ArrVec"); (Id "A"); (Id "l"); (Id "n")])))
                   ])
              ))
           ))
        )),
     [(Cl
         ([(PVar None); (PVar None); (PVar None); (PVar None);
            (PCons ("le_refl", []));
            (PCons ("Cons",
               [(PVar None); (PVar (Some "c")); (PVar (Some "v"))]))
            ],
          (Some (App
                   [(Id "tnsr_intro"); (Id "c");
                     (Fun (None, None,
                        [(Cl
                            ([(PVar (Some "c"))],
                             (Some (App
                                      [(Id "Cons"); (Id "_"); (Id "c");
                                        (Id "v")]))))
                          ]
                        ))
                     ]))));
       (Cl
          ([(PVar None); (PVar None); (PVar None); (PVar None);
             (PCons ("le_succ", [(PVar None); (PVar (Some "pf"))]));
             (PCons ("Cons",
                [(PVar None); (PVar (Some "c0")); (PVar (Some "v0"))]))
             ],
           (Some (Let (
                    (PCons ("tnsr_intro",
                       [(PVar (Some "c")); (PVar (Some "f"))])),
                    (App
                       [(Id "nth"); (Id "_"); (Id "_"); (Id "_"); (Id "_");
                         (Id "pf"); (Id "v0")]),
                    (App
                       [(Id "tnsr_intro"); (Id "c");
                         (Fun (None, None,
                            [(Cl
                                ([(PVar (Some "c"))],
                                 (Some (App
                                          [(Id "Cons"); (Id "_"); (Id "c0");
                                            (App [(Id "f"); (Id "c")])]))))
                              ]
                            ))
                         ])
                    )))))
       ]
     ));
  (DFun ("index",
     (Pi (U,
        [((Some "A"), (Type U)); ((Some "m"), (Id "loc"));
          ((Some "n"), (Id "loc"))],
        (Pi (U, [(None, (App [(Id "lt"); (Id "m"); (Id "n")]))],
           (Pi (U, [(None, (App [(Id "Array"); (Id "A"); (Id "n")]))],
              (App
                 [(Id "sig"); (Id "A");
                   (Fun (None, None,
                      [(Cl
                          ([(PVar None)],
                           (Some (App [(Id "Array"); (Id "A"); (Id "n")]))))
                        ]
                      ))
                   ])
              ))
           ))
        )),
     [(Cl
         ([(PVar None); (PVar (Some "m")); (PVar None); (PVar (Some "pf"));
            (PVar (Some "a"))],
          (Some (Let (
                   (PCons ("sig_intro",
                      [(PVar (Some "l")); (PVar (Some "v"))])),
                   (Id "a"),
                   (Let (
                      (PCons ("tnsr_intro",
                         [(PVar (Some "c")); (PVar (Some "f"))])),
                      (App
                         [(Id "nth"); (Id "_"); (Id "l"); (Id "_"); (
                           Id "_"); (Id "pf"); (Id "v")]),
                      (Let (
                         (PCons ("sig_intro",
                            [(PVar (Some "x")); (PVar (Some "c"))])),
                         (App
                            [(Id "get"); (Id "_");
                              (App [(Id "addn"); (Id "l"); (Id "m")]);
                              (Id "c")]),
                         (App
                            [(Id "sig_intro"); (Id "x");
                              (App
                                 [(Id "sig_intro"); (Id "l");
                                   (App [(Id "f"); (Id "c")])])
                              ])
                         ))
                      ))
                   )))))
       ]
     ));
  (DTm (None, None, (Id "main")))]
parse success---------------------------------------

data unit_d1 : U
  | tt_c1 : unit_d1

data bool_d2 : U
  | true_c2 : bool_d2
  | false_c3 : bool_d2

data nat_d3 : U
  | zero_c4 : nat_d3
  | succ_c5 : nat_d3 -> nat_d3

def (addn_3 := addn_217) : nat_d3 -> nat_d3 -> nat_d3
  | zero_c4 x_221 => x_221
  | (succ_c5 x_222) y_223 => (succ_c5 ((addn_217) x_222 y_223))

data option_d4 (A_224 : U) : U
  | none_c6 (A_225 : U) : (option_d4 A_225)
  | some_c7 (A_226 : U) : A_226 -> (option_d4 A_226)

data list_d5 (A_228 : U) : U
  | nil_c8 (A_229 : U) : (list_d5 A_229)
  | cons_c9 (A_230 : U) : A_230 -> (list_d5 A_230) -> (list_d5 A_230)

data vec_d6 (A_234 : U) : nat_d3 -> U
  | vnil_c10 (A_236 : U) : (vec_d6 A_236 zero_c4)
  | vcons_c11 (A_237 : U) :
    ∀ (n_238 : nat_d3) ->
      A_237 -> (vec_d6 A_237 n_238) -> (vec_d6 A_237 (succ_c5 n_238))

data ex_d7 (A_243 : U) (P_244 : A_243 -> U) : U
  | ex_intro_c12 (A_246 : U) (P_247 : A_246 -> U) :
    ∀ (x_249 : A_246) -> ((P_247) x_249) -> (ex_d7 A_246 P_247)

data sig_d8 (A_251 : U) (P_252 : A_251 -> L) : L
  | sig_intro_c13 (A_254 : U) (P_255 : A_254 -> L) :
    ∀ (x_257 : A_254) -> ((P_255) x_257) -> (sig_d8 A_254 P_255)

data tnsr_d9 (A_259 : L) (B_260 : L) : L
  | tnsr_intro_c14 (A_261 : L) (B_262 : L) :
    A_261 -> B_262 -> (tnsr_d9 A_261 B_262)

data box_d10 (A_266 : U) : L
  | box_intro_c15 (A_267 : U) : A_267 -> (box_d10 A_267)

data ascii_d11 : U
  | Ascii_c16 :
    bool_d2 ->
      bool_d2 ->
        bool_d2 ->
          bool_d2 -> bool_d2 -> bool_d2 -> bool_d2 -> bool_d2 -> ascii_d11

data string_d12 : U
  | EmptyString_c17 : string_d12
  | String_c18 : ascii_d11 -> string_d12 -> string_d12

def (cat_60 := cat_308) : string_d12 -> string_d12 -> string_d12
  | EmptyString_c17 s_312 => s_312
  | (String_c18 c_313 s1_314) s2_315 =>
    (String_c18 c_313 ((cat_308) s1_314 s2_315))

data le_d13 (n_316 : nat_d3) : nat_d3 -> U
  | le_refl_c19 (n_318 : nat_d3) : (le_d13 n_318 n_318)
  | le_succ_c20 (n_319 : nat_d3) :
    ∀ (m_320 : nat_d3) ->
      (le_d13 n_319 m_320) -> (le_d13 n_319 (succ_c5 m_320))

def (lt_73 := lt_322) : nat_d3 -> nat_d3 -> U
  | m_326 n_327 => (le_d13 (succ_c5 m_326) n_327)

data eq_d14 (A_328 : U) (x_329 : A_328) : A_328 -> U
  | refl_c21 (A_331 : U) (x_332 : A_331) : (eq_d14 A_331 x_332 x_332)

def (stdin_rec_83 := stdin_rec_333) : unit_d1 -> proto
  | tt_c1 =>
    !(b_335 : bool_d2) ⋅
      (match b_335 return ??1 with
        | true_c2 => ?string_d12 ⋅ ((stdin_rec_333) tt_c1)
        | false_c3 => end)

def (stdout_rec_87 := stdout_rec_337) : unit_d1 -> proto
  | tt_c1 =>
    !(b_339 : bool_d2) ⋅
      (match b_339 return ??2 with
        | true_c2 => !string_d12 ⋅ ((stdout_rec_337) tt_c1)
        | false_c3 => end)

def (stderr_rec_91 := stderr_rec_341) : unit_d1 -> proto
  | tt_c1 =>
    !(b_343 : bool_d2) ⋅
      (match b_343 return ??3 with
        | true_c2 => !string_d12 ⋅ ((stderr_rec_341) tt_c1)
        | false_c3 => end)

def stdin_t_95 := ((stdin_rec_83) tt_c1)

def stdout_t_96 := ((stdout_rec_87) tt_c1)

def stderr_t_97 := ((stderr_rec_91) tt_c1)

def (readline_98 := readline_345) :
  ch<stdin_t_95> -> (sig_d8 string_d12 (fun
                                         | _351 => ch<stdin_t_95>))
  | ch_352 => recv ((send ch_352) true_c2)

def (close_in_103 := close_in_353) : ch<stdin_t_95> -> unit_d1
  | ch_355 => close ((send ch_355) false_c3)

def (printline_106 := printline_356) :
  ch<stdout_t_96> -> string_d12 -o ch<stdout_t_96>
  | ch_360 s_361 => ((send ((send ch_360) true_c2)) s_361)

def (close_out_111 := close_out_362) : ch<stdout_t_96> -> unit_d1
  | ch_364 => close ((send ch_364) false_c3)

def (printerr_114 := printerr_365) :
  ch<stderr_t_97> -> string_d12 -o ch<stderr_t_97>
  | ch_369 s_370 => ((send ((send ch_369) true_c2)) s_370)

def (close_err_119 := close_err_371) : ch<stderr_t_97> -> unit_d1
  | ch_373 => close ((send ch_373) false_c3)

def loc_122 := nat_d3

axiom at_123 : U -> loc_122 -> L

axiom new_126 :
  ∀ (A_377 : U) ->
    A_377 -> (sig_d8 loc_122 (fun
                               | l_384 => ((at_123) A_377 l_384)))

axiom free_131 :
  ∀ (A_385 : U) ->
    ∀ (l_388 : loc_122) -> A_385 -> ((at_123) A_385 l_388) -> unit_d1

axiom get_136 :
  ∀ (A_394 : U) ->
    ∀ (l_397 : loc_122) ->
      ((at_123) A_394 l_397) ->
        (sig_d8 A_394 (fun
                        | _404 => ((at_123) A_394 l_397)))

axiom set_142 :
  ∀ (A_405 : U) ->
    ∀ (B_409 : U) ->
      ∀ (l_414 : loc_122) ->
        A_405 -> ((at_123) A_405 l_414) -> B_409 -o ((at_123) A_405 l_414)

data ArrVec_d15 (A_423 : U) (l_424 : loc_122) : loc_122 -> L
  | Nil_c22 (A_426 : U) (l_427 : loc_122) : (ArrVec_d15 A_426 l_427 zero_c4)
  | Cons_c23 (A_428 : U) (l_429 : loc_122) :
    ∀ (n_430 : nat_d3) ->
      ((at_123) A_428 ((addn_3) l_429 n_430)) ->
        (ArrVec_d15 A_428 l_429 n_430) ->
          (ArrVec_d15 A_428 l_429 (succ_c5 n_430))

def (Array_159 := Array_434) : U -> loc_122 -> L
  | A_438 n_439 =>
    (sig_d8 loc_122 (fun
                      | l_442 => (ArrVec_d15 A_438 l_442 n_439)))

def (nth_166 := nth_443) :
  ∀ (A_444 : U) ->
    ∀ (l_450 : loc_122) ->
      ∀ (m_455 : loc_122) ->
        ∀ (n_458 : loc_122) ->
          ((lt_73) m_455 n_458) ->
            (ArrVec_d15 A_444 l_450 n_458) ->
              (tnsr_d9 ((at_123) A_444 ((addn_3) l_450 m_455))
              ((at_123) A_444 ((addn_3) l_450 m_455)) -o
                (ArrVec_d15 A_444 l_450 n_458))
  | _466 _467 _468 _469 le_refl_c19 (Cons_c23 _470 c_471 v_472) =>
    (tnsr_intro_c14 c_471 (fun
                            | c_475 => (Cons_c23 ??4 c_475 v_472)))
  | _476 _477 _478 _479 (le_succ_c20 _480 pf_481) (Cons_c23 _482 c0_483 v0_484) =>
    (match ((nth_443) ??5 ??6 ??7 ??8 pf_481 v0_484) return ??10 with
      | (tnsr_intro_c14 c_485 f_486) =>
        (tnsr_intro_c14 c_485
        (fun
          | c_489 => (Cons_c23 ??9 c0_483 ((f_486) c_489)))))

def (index_196 := index_490) :
  ∀ (A_491 : U) ->
    ∀ (m_496 : loc_122) ->
      ∀ (n_499 : loc_122) ->
        ((lt_73) m_496 n_499) ->
          ((Array_159) A_491 n_499) ->
            (sig_d8 A_491 (fun
                            | _510 => ((Array_159) A_491 n_499)))
  | _511 m_512 _513 pf_514 a_515 =>
    (match a_515 return ??17 with
      | (sig_intro_c13 l_516 v_517) =>
        (match ((nth_166) ??11 l_516 ??12 ??13 pf_514 v_517) return ??16 with
          | (tnsr_intro_c14 c_518 f_519) =>
            (match ((get_136) ??14 ((addn_3) l_516 m_512) c_518) return ??15 with
              | (sig_intro_c13 x_520 c_521) =>
                (sig_intro_c13 x_520 (sig_intro_c13 l_516 ((f_519) c_521))))))

def _215 := main_1

trans01 success-------------------------------------

data unit_d1 : U
  | tt_c1 : unit_d1

data bool_d2 : U
  | true_c2 : bool_d2
  | false_c3 : bool_d2

data nat_d3 : U
  | zero_c4 : nat_d3
  | succ_c5 : nat_d3 -> nat_d3

def (addn_3 := addn_16578) : nat_d3 -> nat_d3 -> nat_d3
  | zero_c4 x_16582 => x_16582
  | (succ_c5 x_16583) y_16584 => (succ_c5 ((addn_16578) x_16583 y_16584))

data option_d4 (A_16585 : U) : U
  | none_c6 (A_16586 : U) : (option_d4 A_16586)
  | some_c7 (A_16587 : U) : A_16587 -> (option_d4 A_16587)

data list_d5 (A_16589 : U) : U
  | nil_c8 (A_16590 : U) : (list_d5 A_16590)
  | cons_c9 (A_16591 : U) : A_16591 -> (list_d5 A_16591) -> (list_d5 A_16591)

data vec_d6 (A_16595 : U) : nat_d3 -> U
  | vnil_c10 (A_16597 : U) : (vec_d6 A_16597 zero_c4)
  | vcons_c11 (A_16598 : U) :
    ∀ (n_16599 : nat_d3) ->
      A_16598 ->
        (vec_d6 A_16598 n_16599) -> (vec_d6 A_16598 (succ_c5 n_16599))

data ex_d7 (A_16604 : U) (P_16605 : A_16604 -> U) : U
  | ex_intro_c12 (A_16607 : U) (P_16608 : A_16607 -> U) :
    ∀ (x_16610 : A_16607) -> ((P_16608) x_16610) -> (ex_d7 A_16607 P_16608)

data sig_d8 (A_16612 : U) (P_16613 : A_16612 -> L) : L
  | sig_intro_c13 (A_16615 : U) (P_16616 : A_16615 -> L) :
    ∀ (x_16618 : A_16615) ->
      ((P_16616) x_16618) -> (sig_d8 A_16615 P_16616)

data tnsr_d9 (A_16620 : L) (B_16621 : L) : L
  | tnsr_intro_c14 (A_16622 : L) (B_16623 : L) :
    A_16622 -> B_16623 -> (tnsr_d9 A_16622 B_16623)

data box_d10 (A_16627 : U) : L
  | box_intro_c15 (A_16628 : U) : A_16628 -> (box_d10 A_16628)

data ascii_d11 : U
  | Ascii_c16 :
    bool_d2 ->
      bool_d2 ->
        bool_d2 ->
          bool_d2 -> bool_d2 -> bool_d2 -> bool_d2 -> bool_d2 -> ascii_d11

data string_d12 : U
  | EmptyString_c17 : string_d12
  | String_c18 : ascii_d11 -> string_d12 -> string_d12

def (cat_60 := cat_16669) : string_d12 -> string_d12 -> string_d12
  | EmptyString_c17 s_16673 => s_16673
  | (String_c18 c_16674 s1_16675) s2_16676 =>
    (String_c18 c_16674 ((cat_16669) s1_16675 s2_16676))

data le_d13 (n_16677 : nat_d3) : nat_d3 -> U
  | le_refl_c19 (n_16679 : nat_d3) : (le_d13 n_16679 n_16679)
  | le_succ_c20 (n_16680 : nat_d3) :
    ∀ (m_16681 : nat_d3) ->
      (le_d13 n_16680 m_16681) -> (le_d13 n_16680 (succ_c5 m_16681))

def (lt_73 := lt_16683) : nat_d3 -> nat_d3 -> U
  | m_16687 n_16688 => (le_d13 (succ_c5 m_16687) n_16688)

data eq_d14 (A_16689 : U) (x_16690 : A_16689) : A_16689 -> U
  | refl_c21 (A_16692 : U) (x_16693 : A_16692) :
    (eq_d14 A_16692 x_16693 x_16693)

def (stdin_rec_83 := stdin_rec_16694) : unit_d1 -> proto
  | tt_c1 =>
    !(b_16696 : bool_d2) ⋅
      (match b_16696 return proto with
        | true_c2 => ?string_d12 ⋅ ((stdin_rec_16694) tt_c1)
        | false_c3 => end)

def (stdout_rec_87 := stdout_rec_16698) : unit_d1 -> proto
  | tt_c1 =>
    !(b_16700 : bool_d2) ⋅
      (match b_16700 return proto with
        | true_c2 => !string_d12 ⋅ ((stdout_rec_16698) tt_c1)
        | false_c3 => end)

def (stderr_rec_91 := stderr_rec_16702) : unit_d1 -> proto
  | tt_c1 =>
    !(b_16704 : bool_d2) ⋅
      (match b_16704 return proto with
        | true_c2 => !string_d12 ⋅ ((stderr_rec_16702) tt_c1)
        | false_c3 => end)

def stdin_t_95 := ((stdin_rec_83) tt_c1)

def stdout_t_96 := ((stdout_rec_87) tt_c1)

def stderr_t_97 := ((stderr_rec_91) tt_c1)

def (readline_98 := readline_16706) :
  ch<stdin_t_95> -> (sig_d8 string_d12 (fun
                                         | _16712 => ch<stdin_t_95>))
  | ch_16713 => recv ((send ch_16713) true_c2)

def (close_in_103 := close_in_16714) : ch<stdin_t_95> -> unit_d1
  | ch_16716 => close ((send ch_16716) false_c3)

def (printline_106 := printline_16717) :
  ch<stdout_t_96> -> string_d12 -o ch<stdout_t_96>
  | ch_16721 s_16722 => ((send ((send ch_16721) true_c2)) s_16722)

def (close_out_111 := close_out_16723) : ch<stdout_t_96> -> unit_d1
  | ch_16725 => close ((send ch_16725) false_c3)

def (printerr_114 := printerr_16726) :
  ch<stderr_t_97> -> string_d12 -o ch<stderr_t_97>
  | ch_16730 s_16731 => ((send ((send ch_16730) true_c2)) s_16731)

def (close_err_119 := close_err_16732) : ch<stderr_t_97> -> unit_d1
  | ch_16734 => close ((send ch_16734) false_c3)

def loc_122 := nat_d3

axiom at_123 : U -> loc_122 -> L

axiom new_126 :
  ∀ (A_16738 : U) ->
    A_16738 -> (sig_d8 loc_122 (fun
                                 | l_16745 => ((at_123) A_16738 l_16745)))

axiom free_131 :
  ∀ (A_16746 : U) ->
    ∀ (l_16749 : loc_122) ->
      A_16746 -> ((at_123) A_16746 l_16749) -> unit_d1

axiom get_136 :
  ∀ (A_16755 : U) ->
    ∀ (l_16758 : loc_122) ->
      ((at_123) A_16755 l_16758) ->
        (sig_d8 A_16755 (fun
                          | _16765 => ((at_123) A_16755 l_16758)))

axiom set_142 :
  ∀ (A_16766 : U) ->
    ∀ (B_16770 : U) ->
      ∀ (l_16775 : loc_122) ->
        A_16766 ->
          ((at_123) A_16766 l_16775) -> B_16770 -o ((at_123) A_16766 l_16775)

data ArrVec_d15 (A_16784 : U) (l_16785 : loc_122) : loc_122 -> L
  | Nil_c22 (A_16787 : U) (l_16788 : loc_122) :
    (ArrVec_d15 A_16787 l_16788 zero_c4)
  | Cons_c23 (A_16789 : U) (l_16790 : loc_122) :
    ∀ (n_16791 : nat_d3) ->
      ((at_123) A_16789 ((addn_3) l_16790 n_16791)) ->
        (ArrVec_d15 A_16789 l_16790 n_16791) ->
          (ArrVec_d15 A_16789 l_16790 (succ_c5 n_16791))

def (Array_159 := Array_16795) : U -> loc_122 -> L
  | A_16799 n_16800 =>
    (sig_d8 loc_122 (fun
                      | l_16803 => (ArrVec_d15 A_16799 l_16803 n_16800)))

def (nth_166 := nth_16804) :
  ∀ (A_16805 : U) ->
    ∀ (l_16811 : loc_122) ->
      ∀ (m_16816 : loc_122) ->
        ∀ (n_16819 : loc_122) ->
          ((lt_73) m_16816 n_16819) ->
            (ArrVec_d15 A_16805 l_16811 n_16819) ->
              (tnsr_d9 ((at_123) A_16805 ((addn_3) l_16811 m_16816))
              ((at_123) A_16805 ((addn_3) l_16811 m_16816)) -o
                (ArrVec_d15 A_16805 l_16811 n_16819))
  | _16827 _16828 _16829 _16830 le_refl_c19 (Cons_c23 _16831 c_16832 v_16833) =>
    (tnsr_intro_c14 c_16832
    (fun
      | c_16836 => (Cons_c23 _16829 c_16836 v_16833)))
  | _16837 _16838 _16839 _16840 (le_succ_c20 _16841 pf_16842) (Cons_c23 _16843 c0_16844 v0_16845) =>
    (match ((nth_16804) _16837 _16838 _16839 _16841 pf_16842 v0_16845) return
       (tnsr_d9 ((at_123) _16837 ((addn_3) _16838 _16839))
       ((at_123) _16837 ((addn_3) _16838 _16839)) -o
         (ArrVec_d15 _16837 _16838 (succ_c5 _16841)))
     with
      | (tnsr_intro_c14 c_16847 f_16848) =>
        (tnsr_intro_c14 c_16847
        (fun
          | c_16851 => (Cons_c23 _16841 c0_16844 ((f_16848) c_16851)))))

def (index_196 := index_16852) :
  ∀ (A_16853 : U) ->
    ∀ (m_16858 : loc_122) ->
      ∀ (n_16861 : loc_122) ->
        ((lt_73) m_16858 n_16861) ->
          ((Array_159) A_16853 n_16861) ->
            (sig_d8 A_16853 (fun
                              | _16872 => ((Array_159) A_16853 n_16861)))
  | _16873 m_16874 _16875 pf_16876 a_16877 =>
    (match a_16877 return
       (sig_d8 _16873 (fun
                        | _16880 => ((Array_159) _16873 _16875)))
     with
      | (sig_intro_c13 l_16881 v_16882) =>
        (match ((nth_166) _16873 l_16881 m_16874 _16875 pf_16876 v_16882)
         return (sig_d8 _16873 (fun
                                 | _16885 => ((Array_159) _16873 _16875)))
         with
          | (tnsr_intro_c14 c_16886 f_16887) =>
            (match ((get_136) _16873 ((addn_3) l_16881 m_16874) c_16886)
             return
               (sig_d8 _16873 (fun
                                | _16890 => ((Array_159) _16873 _16875)))
             with
              | (sig_intro_c13 x_16891 c_16892) =>
                (sig_intro_c13 x_16891
                (sig_intro_c13 l_16881 ((f_16887) c_16892))))))

def _215 := main_1

trans1e success-------------------------------------

def addn_3 :=
  fix addn_20103 _20104 =>
    (case _20104 of
      | zero_c4 => lam _20105 => _20105
      | (succ_c5 _20106) =>
        lam _20107 => (succ_c5 ((addn_20103) _20106 _20107)))

def cat_60 :=
  fix cat_20108 _20109 =>
    (case _20109 of
      | EmptyString_c17 => lam _20110 => _20110
      | (String_c18 _20111 _20112) =>
        lam _20113 => (String_c18 _20111 ((cat_20108) _20112 _20113)))

def lt_73 := fix lt_20114 _20115 _20116 => (le_d13 (succ_c5 _20115) _20116)

def stdin_rec_83 :=
  fix stdin_rec_20117 _20118 =>
    (case _20118 of
      | tt_c1 =>
        !(b_20119 : bool_d2) ⋅
          ((lin _20122 =>
              (case _20122 of
                | true_c2 => ?string_d12 ⋅ ((stdin_rec_20117) tt_c1)
                | false_c3 => end))
            b_20119))

def stdout_rec_87 :=
  fix stdout_rec_20124 _20125 =>
    (case _20125 of
      | tt_c1 =>
        !(b_20126 : bool_d2) ⋅
          ((lin _20129 =>
              (case _20129 of
                | true_c2 => !string_d12 ⋅ ((stdout_rec_20124) tt_c1)
                | false_c3 => end))
            b_20126))

def stderr_rec_91 :=
  fix stderr_rec_20131 _20132 =>
    (case _20132 of
      | tt_c1 =>
        !(b_20133 : bool_d2) ⋅
          ((lin _20136 =>
              (case _20136 of
                | true_c2 => !string_d12 ⋅ ((stderr_rec_20131) tt_c1)
                | false_c3 => end))
            b_20133))

def stdin_t_95 := ((stdin_rec_83) tt_c1)

def stdout_t_96 := ((stdout_rec_87) tt_c1)

def stderr_t_97 := ((stderr_rec_91) tt_c1)

def readline_98 := fix readline_20138 _20139 => recv ((send _20139) true_c2)

def close_in_103 :=
  fix close_in_20140 _20141 => close ((send _20141) false_c3)

def printline_106 :=
  fix printline_20142 _20143 =>
    lin _20144 => ((send ((send _20143) true_c2)) _20144)

def close_out_111 :=
  fix close_out_20145 _20146 => close ((send _20146) false_c3)

def printerr_114 :=
  fix printerr_20147 _20148 =>
    lin _20149 => ((send ((send _20148) true_c2)) _20149)

def close_err_119 :=
  fix close_err_20150 _20151 => close ((send _20151) false_c3)

def loc_122 := nat_d3

def Array_159 :=
  fix Array_20152 _20153 _20154 =>
    (sig_d8 loc_122 fix _20155 _20156 => (ArrVec_d15 _20153 _20156 _20154))

def nth_166 :=
  fix nth_20157 A_20158 l_20159 m_20160 n_20161 _20162 =>
    (case _20162 of
      | le_refl_c19 =>
        lam _20163 =>
          (case _20163 of
            | Nil_c22 => absurd
            | (Cons_c23 n_20164 _20165 _20166) =>
              (tnsr_intro_c14 _20165
              lin _20167 => (Cons_c23 m_20160 _20167 _20166)))
      | (le_succ_c20 m_20168 _20169) =>
        lam _20170 =>
          (case _20170 of
            | Nil_c22 => absurd
            | (Cons_c23 n_20171 _20172 _20173) =>
              ((lin _20174 =>
                  (case _20174 of
                    | (tnsr_intro_c14 _20175 _20176) =>
                      (tnsr_intro_c14 _20175
                      lin _20177 =>
                        (Cons_c23 m_20168 _20172 ((_20176) _20177)))))
                ((nth_20157) A_20158 l_20159 m_20160 m_20168 _20169 _20173))))

def index_196 :=
  fix index_20178 A_20179 m_20180 n_20181 _20182 _20183 =>
    ((lin _20184 =>
        (case _20184 of
          | (sig_intro_c13 x_20185 _20186) =>
            ((lin _20187 =>
                (case _20187 of
                  | (tnsr_intro_c14 _20188 _20189) =>
                    ((lin _20190 =>
                        (case _20190 of
                          | (sig_intro_c13 x_20191 _20192) =>
                            (sig_intro_c13 x_20191
                            (sig_intro_c13 x_20185 ((_20189) _20192)))))
                      ((get_136) A_20179 ((addn_3) x_20185 m_20180) _20188))))
              ((nth_166) A_20179 x_20185 m_20180 n_20181 _20182 _20186))))
      _20183)

def _215 := main_1

trans12 success-------------------------------------

[(addn_3,
  (VFix (addn_20193,
     lam _20211 =>
       (case _20211 of
         | zero_c4 => lam _20212 => _20212
         | (succ_c5 _20213) =>
           lam _20214 => (succ_c5 ((addn_20193) _20213 _20214)))
     )));
  (cat_60,
   (VFix (cat_20194,
      lam _20215 =>
        (case _20215 of
          | EmptyString_c17 => lam _20216 => _20216
          | (String_c18 _20217 _20218) =>
            lam _20219 => (String_c18 _20217 ((cat_20194) _20218 _20219)))
      )));
  (lt_73,
   (VFix (lt_20195, lam _20220 _20221 => (le_d13 (succ_c5 _20220) _20221))));
  (stdin_rec_83,
   (VFix (stdin_rec_20196,
      lam _20222 =>
        (case _20222 of
          | tt_c1 =>
            !(b_20223 : bool_d2) ⋅
              ((lin _20226 =>
                  (case _20226 of
                    | true_c2 => ?string_d12 ⋅ ((stdin_rec_20196) tt_c1)
                    | false_c3 => end))
                b_20223))
      )));
  (stdout_rec_87,
   (VFix (stdout_rec_20197,
      lam _20228 =>
        (case _20228 of
          | tt_c1 =>
            !(b_20229 : bool_d2) ⋅
              ((lin _20232 =>
                  (case _20232 of
                    | true_c2 => !string_d12 ⋅ ((stdout_rec_20197) tt_c1)
                    | false_c3 => end))
                b_20229))
      )));
  (stderr_rec_91,
   (VFix (stderr_rec_20198,
      lam _20234 =>
        (case _20234 of
          | tt_c1 =>
            !(b_20235 : bool_d2) ⋅
              ((lin _20238 =>
                  (case _20238 of
                    | true_c2 => !string_d12 ⋅ ((stderr_rec_20198) tt_c1)
                    | false_c3 => end))
                b_20235))
      )));
  (stdin_t_95, VBox); (stdout_t_96, VBox); (stderr_t_97, VBox);
  (readline_98,
   (VFix (readline_20202, lam _20240 => recv ((send _20240) true_c2))));
  (close_in_103,
   (VFix (close_in_20203, lam _20241 => close ((send _20241) false_c3))));
  (printline_106,
   (VFix (printline_20204,
      lam _20242 => lin _20243 => ((send ((send _20242) true_c2)) _20243))));
  (close_out_111,
   (VFix (close_out_20205, lam _20244 => close ((send _20244) false_c3))));
  (printerr_114,
   (VFix (printerr_20206,
      lam _20245 => lin _20246 => ((send ((send _20245) true_c2)) _20246))));
  (close_err_119,
   (VFix (close_err_20207, lam _20247 => close ((send _20247) false_c3))));
  (loc_122, VBox);
  (Array_159,
   (VFix (Array_20208,
      lam _20248 _20249 =>
        (sig_d8 loc_122
        fix _20250 _20251 => (ArrVec_d15 _20248 _20251 _20249))
      )));
  (nth_166,
   (VFix (nth_20209,
      lam A_20252 l_20253 m_20254 n_20255 _20256 =>
        (case _20256 of
          | le_refl_c19 =>
            lam _20257 =>
              (case _20257 of
                | Nil_c22 => absurd
                | (Cons_c23 n_20258 _20259 _20260) =>
                  (tnsr_intro_c14 _20259
                  lin _20261 => (Cons_c23 m_20254 _20261 _20260)))
          | (le_succ_c20 m_20262 _20263) =>
            lam _20264 =>
              (case _20264 of
                | Nil_c22 => absurd
                | (Cons_c23 n_20265 _20266 _20267) =>
                  ((lin _20268 =>
                      (case _20268 of
                        | (tnsr_intro_c14 _20269 _20270) =>
                          (tnsr_intro_c14 _20269
                          lin _20271 =>
                            (Cons_c23 m_20262 _20266 ((_20270) _20271)))))
                    ((nth_20209)
                      A_20252 l_20253 m_20254 m_20262 _20263 _20267))))
      )));
  (index_196,
   (VFix (index_20210,
      lam A_20272 m_20273 n_20274 _20275 _20276 =>
        ((lin _20277 =>
            (case _20277 of
              | (sig_intro_c13 x_20278 _20279) =>
                ((lin _20280 =>
                    (case _20280 of
                      | (tnsr_intro_c14 _20281 _20282) =>
                        ((lin _20283 =>
                            (case _20283 of
                              | (sig_intro_c13 x_20284 _20285) =>
                                (sig_intro_c13 x_20284
                                (sig_intro_c13 x_20278 ((_20282) _20285)))))
                          ((get_136)
                            A_20272 ((addn_3) x_20278 m_20273) _20281))))
                  ((nth_166) A_20272 x_20278 m_20273 n_20274 _20275 _20279))))
          _20276)
      )));
  (_215, VBox)]
eval2 success---------------------------------------

