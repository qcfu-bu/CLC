[(DOpen ("@stdout", "stdout"));
  (DData ("unit", (PTl ([], (Tl ([], (Type U))))),
     [(DCons ("tt", (PTl ([], (Tl ([], (Id "unit")))))))]));
  (DData ("nat", (PTl ([], (Tl ([], (Type U))))),
     [(DCons ("zero", (PTl ([], (Tl ([], (Id "nat")))))));
       (DCons ("succ",
          (PTl ([], (Tl ([(None, (Id "nat"), false)], (Id "nat")))))))
       ]
     ));
  (DData ("vec",
     (PTl ([((Some "A"), (Type U), false)],
        (Tl ([(None, (Id "nat"), false)], (Type U))))),
     [(DCons ("nil",
         (PTl ([((Some "A"), (Type U), false)],
            (Tl ([], (App [(Id "vec"); (Id "A"); (Id "zero")])))))
         ));
       (DCons ("cons",
          (PTl ([((Some "A"), (Type U), false)],
             (Tl (
                [((Some "n"), (Id "nat"), true); (None, (Id "A"), false);
                  (None, (App [(Id "vec"); (Id "A"); (Id "n")]), false)],
                (App [(Id "vec"); (Id "A"); (App [(Id "succ"); (Id "n")])])))
             ))
          ))
       ]
     ));
  (DFun ("addn",
     (Pi (U, [(None, (Id "nat"), false)],
        (Pi (U, [(None, (Id "nat"), false)], (Id "nat"))))),
     [(Cl ([(PCons ("zero", [])); (PVar (Some "x"))], (Some (Id "x"))));
       (Cl
          ([(PCons ("succ", [(PVar (Some "x"))])); (PVar (Some "y"))],
           (Some (App [(Id "succ"); (App [(Id "addn"); (Id "x"); (Id "y")])]))))
       ]
     ));
  (DFun ("length",
     (Pi (U, [((Some "A"), (Type U), true); ((Some "n"), (Id "nat"), true)],
        (Pi (U, [(None, (App [(Id "vec"); (Id "A"); (Id "n")]), false)],
           (Id "nat")))
        )),
     [(Cl ([(PCons ("nil", []))], (Some (Id "zero"))));
       (Cl
          ([(PCons ("cons", [(PVar None); (PVar (Some "tl"))]))],
           (Some (App [(Id "succ"); (App [(Id "length"); (Id "tl")])]))))
       ]
     ));
  (DTm ((Some "one"), None, (App [(Id "succ"); (Id "zero")])));
  (DTm ((Some "foo"), None,
     (App
        [(Id "cons"); (Id "one");
          (App
             [(Id "cons"); (Id "one");
               (App [(Id "cons"); (Id "one"); (Id "nil")])])
          ])
     ));
  (DTm ((Some "main"), None, (App [(Id "length"); (Id "foo")])))]
----------------------------------------------
[(DOpen (TStdout, stdout_1));
  (DData (unit_d1, (PBase (TBase (Type U))),
     [(DCons (tt_c1, (PBase (TBase (Data (unit_d1, []))))))]));
  (DData (nat_d2, (PBase (TBase (Type U))),
     [(DCons (zero_c2, (PBase (TBase (Data (nat_d2, []))))));
       (DCons (succ_c3,
          (PBase
             (TBind ((Data (nat_d2, [])), false,
                (Abs (_, (TBase (Data (nat_d2, []))))))))
          ))
       ]
     ));
  (DData (vec_d3,
     (PBind ((Type U), false,
        (Abs (A_2,
           (PBase
              (TBind ((Data (nat_d2, [])), false, (Abs (_, (TBase (Type U))))
                 )))
           ))
        )),
     [(DCons (nil_c4,
         (PBind ((Type U), false,
            (Abs (A_3,
               (PBase
                  (TBase (Data (vec_d3, [(Var _0); (Cons (zero_c2, []))]))))
               ))
            ))
         ));
       (DCons (cons_c5,
          (PBind ((Type U), false,
             (Abs (A_4,
                (PBase
                   (TBind ((Data (nat_d2, [])), true,
                      (Abs (n_5,
                         (TBind ((Var _1), false,
                            (Abs (_,
                               (TBind ((Data (vec_d3, [(Var _2); (Var _1)])),
                                  false,
                                  (Abs (_,
                                     (TBase
                                        (Data (vec_d3,
                                           [(Var _3);
                                             (Cons (succ_c3, [(Var _2)]))]
                                           )))
                                     ))
                                  ))
                               ))
                            ))
                         ))
                      )))
                ))
             ))
          ))
       ]
     ));
  (DFun (addn_6,
     (Pi (U, (Data (nat_d2, [])), false,
        (Abs (_,
           (Pi (U, (Data (nat_d2, [])), false, (Abs (_, (Data (nat_d2, []))))
              ))
           ))
        )),
     (Abs (addn_6,
        [(Cl (PAbs ([(PCons (zero_c2, [])); (PVar x_7)], (Some (Var _0)))));
          (Cl
             (PAbs ([(PCons (succ_c3, [(PVar x_8)])); (PVar y_9)],
                (Some (Cons (succ_c3,
                         [(App ((App ((Var _2), (Var _0))), (Var _1)))])))
                )))
          ]
        ))
     ));
  (DFun (length_10,
     (Pi (U, (Type U), true,
        (Abs (A_11,
           (Pi (U, (Data (nat_d2, [])), true,
              (Abs (n_12,
                 (Pi (U, (Data (vec_d3, [(Var _1); (Var _0)])), false,
                    (Abs (_, (Data (nat_d2, []))))))
                 ))
              ))
           ))
        )),
     (Abs (length_10,
        [(Cl (PAbs ([(PCons (nil_c4, []))], (Some (Cons (zero_c2, []))))));
          (Cl
             (PAbs ([(PCons (cons_c5, [(PVar _); (PVar tl_13)]))],
                (Some (Cons (succ_c3, [(App ((Var _2), (Var _1)))]))))))
          ]
        ))
     ));
  (DTm (one_14, None, (Cons (succ_c3, [(Cons (zero_c2, []))]))));
  (DTm (foo_15, None,
     (Cons (cons_c5,
        [(Var one_14);
          (Cons (cons_c5,
             [(Var one_14);
               (Cons (cons_c5, [(Var one_14); (Cons (nil_c4, []))]))]
             ))
          ]
        ))
     ));
  (DTm (main_16, None, (App ((Var length_10), (Var foo_15)))))]
----------------------------------------------
open @stdout as stdout_1

data unit_d1 : U
  | tt_c1 : unit_d1

data nat_d2 : U
  | zero_c2 : nat_d2
  | succ_c3 : nat_d2 -> nat_d2

data vec_d3 (A_17 : U) : nat_d2 -> U
  | nil_c4 (A_18 : U) : (vec_d3 A_18 zero_c2)
  | cons_c5 (A_19 : U) :
    ∀ {n_20 : nat_d2} ->
      A_19 -> (vec_d3 A_19 n_20) -> (vec_d3 A_19 (succ_c3 n_20))

def (addn_6 := addn_21) : nat_d2 -> nat_d2 -> nat_d2
  | zero_c2 x_22 => x_22
  | (succ_c3 x_23) y_24 => (succ_c3 ((addn_21) x_23 y_24))

def (length_10 := length_25) :
  ∀ {A_26 : U} -> ∀ {n_27 : nat_d2} -> (vec_d3 A_26 n_27) -> nat_d2
  | nil_c4 => zero_c2
  | (cons_c5 _ tl_28) => (succ_c3 ((length_25) tl_28))

def one_14 := (succ_c3 zero_c2)

def foo_15 := (cons_c5 one_14 (cons_c5 one_14 (cons_c5 one_14 nil_c4)))

def main_16 := ((length_10) foo_15)


----------------------------------------------
def (addn_6 := addn_36) : nat_d2 -> nat_d2 -> nat_d2
  | zero_c2 x_37 => x_37
  | (succ_c3 x_38) y_39 => (succ_c3 ((addn_36) x_38 y_39))

def (length_10 := length_40) :
  ∀ {A_41 : U} -> ∀ {n_42 : nat_d2} -> (vec_d3 A_41 n_42) -> nat_d2
  | nil_c4 => zero_c2
  | (cons_c5 _ tl_43) => (succ_c3 ((length_40) tl_43))

def one_14 := (succ_c3 zero_c2)

def foo_15 :=
  (cons_c5 (succ_c3 zero_c2)
  (cons_c5 (succ_c3 zero_c2) (cons_c5 (succ_c3 zero_c2) nil_c4)))

def main_16 := (succ_c3 (succ_c3 (succ_c3 zero_c2)))


