def maxn : nat -> nat -> nat 
  | zero x => x
  | x zero => x
  | (succ x) (succ y) => succ (maxn x y)

def foo := maxn 1 2

def _ := 
  let ⟨ch, main⟩ := 
    fork (ch : ch‹!nat ⋅ end›) <- main with
    let ch := send ch foo in 
    close ch
  in
  let [msg, ch] := recv ch in
  let () := close ch in
  main