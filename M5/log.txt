infer
pre_ctx := {
}
t  := Type
post_ctx := {
}

infer
pre_ctx := {
}
t  := Type
post_ctx := {
}

infer
pre_ctx := {
  unit :0 Type@::w]
}
t  := Type
post_ctx := {
  unit :0 Type@::w]
}

infer
pre_ctx := {
  unit :0 Type@::w]
}
t  := Type
post_ctx := {
  unit :0 Type@::w]
}

infer
pre_ctx := {
  nat :0 Type@::w]
  unit :0 Type@::w]
}
t  := nat
post_ctx := {
  nat :1 Type@::w]
  unit :0 Type@::w]
}

infer
pre_ctx := {
  nat :0 Type@::w]
  unit :0 Type@::w]
}
t  := nat
post_ctx := {
  nat :1 Type@::w]
  unit :0 Type@::w]
}

infer
pre_ctx := {
  zero :0 nat@::w]
  nat :0 Type@::w]
  unit :0 Type@::w]
}
t  := nat
post_ctx := {
  zero :0 nat@::w]
  nat :1 Type@::w]
  unit :0 Type@::w]
}

infer
pre_ctx := {
  zero :0 nat@::w]
  nat :0 Type@::w]
  unit :0 Type@::w]
}
t  := nat
post_ctx := {
  zero :0 nat@::w]
  nat :1 Type@::w]
  unit :0 Type@::w]
}

infer
pre_ctx := {
  one :0 nat@::w]
  zero :0 nat@::w]
  nat :0 Type@::w]
  unit :0 Type@::w]
}
t  := nat
post_ctx := {
  one :0 nat@::w]
  zero :0 nat@::w]
  nat :1 Type@::w]
  unit :0 Type@::w]
}

infer
pre_ctx := {
  _ :0 nat@::w]
  one :0 nat@::w]
  zero :0 nat@::w]
  nat :0 Type@::w]
  unit :0 Type@::w]
}
t  := nat
post_ctx := {
  _ :0 nat@::w]
  one :0 nat@::w]
  zero :0 nat@::w]
  nat :1 Type@::w]
  unit :0 Type@::w]
}

infer
pre_ctx := {
  _ :0 nat@::w]
  _ :0 nat@::w]
  one :0 nat@::w]
  zero :0 nat@::w]
  nat :0 Type@::w]
  unit :0 Type@::w]
}
t  := nat
post_ctx := {
  _ :0 nat@::w]
  _ :0 nat@::w]
  one :0 nat@::w]
  zero :0 nat@::w]
  nat :1 Type@::w]
  unit :0 Type@::w]
}

infer
pre_ctx := {
  _ :0 nat@::w]
  one :0 nat@::w]
  zero :0 nat@::w]
  nat :0 Type@::w]
  unit :0 Type@::w]
}
t  := (_ : nat)-> nat
post_ctx := {
  _ :0 nat@::w]
  one :0 nat@::w]
  zero :0 nat@::w]
  nat :w Type@::w]
  unit :0 Type@::w]
}

infer
pre_ctx := {
  one :0 nat@::w]
  zero :0 nat@::w]
  nat :0 Type@::w]
  unit :0 Type@::w]
}
t  := (_ : nat)-> (_ : nat)-> nat
post_ctx := {
  one :0 nat@::w]
  zero :0 nat@::w]
  nat :w Type@::w]
  unit :0 Type@::w]
}

infer
pre_ctx := {
  one :0 nat@::w]
  zero :0 nat@::w]
  nat :0 Type@::w]
  unit :0 Type@::w]
}
t  := nat
post_ctx := {
  one :0 nat@::w]
  zero :0 nat@::w]
  nat :1 Type@::w]
  unit :0 Type@::w]
}

infer
pre_ctx := {
  _ :0 nat@::w]
  one :0 nat@::w]
  zero :0 nat@::w]
  nat :0 Type@::w]
  unit :0 Type@::w]
}
t  := nat
post_ctx := {
  _ :0 nat@::w]
  one :0 nat@::w]
  zero :0 nat@::w]
  nat :1 Type@::w]
  unit :0 Type@::w]
}

infer
pre_ctx := {
  _ :0 nat@::w]
  _ :0 nat@::w]
  one :0 nat@::w]
  zero :0 nat@::w]
  nat :0 Type@::w]
  unit :0 Type@::w]
}
t  := nat
post_ctx := {
  _ :0 nat@::w]
  _ :0 nat@::w]
  one :0 nat@::w]
  zero :0 nat@::w]
  nat :1 Type@::w]
  unit :0 Type@::w]
}

infer
pre_ctx := {
  _ :0 nat@::w]
  one :0 nat@::w]
  zero :0 nat@::w]
  nat :0 Type@::w]
  unit :0 Type@::w]
}
t  := (_ : nat)-> nat
post_ctx := {
  _ :0 nat@::w]
  one :0 nat@::w]
  zero :0 nat@::w]
  nat :w Type@::w]
  unit :0 Type@::w]
}

infer
pre_ctx := {
  one :0 nat@::w]
  zero :0 nat@::w]
  nat :0 Type@::w]
  unit :0 Type@::w]
}
t  := (_ : nat)-> (_ : nat)-> nat
post_ctx := {
  one :0 nat@::w]
  zero :0 nat@::w]
  nat :w Type@::w]
  unit :0 Type@::w]
}

infer
pre_ctx := {
  addn :0 (_ : nat)-> (_ : nat)-> nat@::w]
  one :0 nat@::w]
  zero :0 nat@::w]
  nat :0 Type@::w]
  unit :0 Type@::w]
}
t  := Linear
post_ctx := {
  addn :0 (_ : nat)-> (_ : nat)-> nat@::w]
  one :0 nat@::w]
  zero :0 nat@::w]
  nat :0 Type@::w]
  unit :0 Type@::w]
}

infer
pre_ctx := {
  addn :0 (_ : nat)-> (_ : nat)-> nat@::w]
  one :0 nat@::w]
  zero :0 nat@::w]
  nat :0 Type@::w]
  unit :0 Type@::w]
}
t  := Linear
post_ctx := {
  addn :0 (_ : nat)-> (_ : nat)-> nat@::w]
  one :0 nat@::w]
  zero :0 nat@::w]
  nat :0 Type@::w]
  unit :0 Type@::w]
}

infer
pre_ctx := {
  channel :0 Linear@::w]
  addn :0 (_ : nat)-> (_ : nat)-> nat@::w]
  one :0 nat@::w]
  zero :0 nat@::w]
  nat :0 Type@::w]
  unit :0 Type@::w]
}
t  := nat
post_ctx := {
  channel :0 Linear@::w]
  addn :0 (_ : nat)-> (_ : nat)-> nat@::w]
  one :0 nat@::w]
  zero :0 nat@::w]
  nat :1 Type@::w]
  unit :0 Type@::w]
}

infer
pre_ctx := {
  _ :0 nat@::w]
  channel :0 Linear@::w]
  addn :0 (_ : nat)-> (_ : nat)-> nat@::w]
  one :0 nat@::w]
  zero :0 nat@::w]
  nat :0 Type@::w]
  unit :0 Type@::w]
}
t  := channel
post_ctx := {
  _ :0 nat@::w]
  channel :1 Linear@::w]
  addn :0 (_ : nat)-> (_ : nat)-> nat@::w]
  one :0 nat@::w]
  zero :0 nat@::w]
  nat :0 Type@::w]
  unit :0 Type@::w]
}

infer
pre_ctx := {
  channel :0 Linear@::w]
  addn :0 (_ : nat)-> (_ : nat)-> nat@::w]
  one :0 nat@::w]
  zero :0 nat@::w]
  nat :0 Type@::w]
  unit :0 Type@::w]
}
t  := (_ : nat)-> channel
post_ctx := {
  channel :1 Linear@::w]
  addn :0 (_ : nat)-> (_ : nat)-> nat@::w]
  one :0 nat@::w]
  zero :0 nat@::w]
  nat :1 Type@::w]
  unit :0 Type@::w]
}

infer
pre_ctx := {
  channel :0 Linear@::w]
  addn :0 (_ : nat)-> (_ : nat)-> nat@::w]
  one :0 nat@::w]
  zero :0 nat@::w]
  nat :0 Type@::w]
  unit :0 Type@::w]
}
t  := nat
post_ctx := {
  channel :0 Linear@::w]
  addn :0 (_ : nat)-> (_ : nat)-> nat@::w]
  one :0 nat@::w]
  zero :0 nat@::w]
  nat :1 Type@::w]
  unit :0 Type@::w]
}

infer
pre_ctx := {
  _ :0 nat@::w]
  channel :0 Linear@::w]
  addn :0 (_ : nat)-> (_ : nat)-> nat@::w]
  one :0 nat@::w]
  zero :0 nat@::w]
  nat :0 Type@::w]
  unit :0 Type@::w]
}
t  := channel
post_ctx := {
  _ :0 nat@::w]
  channel :1 Linear@::w]
  addn :0 (_ : nat)-> (_ : nat)-> nat@::w]
  one :0 nat@::w]
  zero :0 nat@::w]
  nat :0 Type@::w]
  unit :0 Type@::w]
}

infer
pre_ctx := {
  channel :0 Linear@::w]
  addn :0 (_ : nat)-> (_ : nat)-> nat@::w]
  one :0 nat@::w]
  zero :0 nat@::w]
  nat :0 Type@::w]
  unit :0 Type@::w]
}
t  := (_ : nat)-> channel
post_ctx := {
  channel :1 Linear@::w]
  addn :0 (_ : nat)-> (_ : nat)-> nat@::w]
  one :0 nat@::w]
  zero :0 nat@::w]
  nat :1 Type@::w]
  unit :0 Type@::w]
}

infer
pre_ctx := {
  openCh :0 (_ : nat)-> channel@::w]
  channel :0 Linear@::w]
  addn :0 (_ : nat)-> (_ : nat)-> nat@::w]
  one :0 nat@::w]
  zero :0 nat@::w]
  nat :0 Type@::w]
  unit :0 Type@::w]
}
t  := channel
post_ctx := {
  openCh :0 (_ : nat)-> channel@::w]
  channel :1 Linear@::w]
  addn :0 (_ : nat)-> (_ : nat)-> nat@::w]
  one :0 nat@::w]
  zero :0 nat@::w]
  nat :0 Type@::w]
  unit :0 Type@::w]
}

infer
pre_ctx := {
  _ :0 channel@::1]
  openCh :0 (_ : nat)-> channel@::w]
  channel :0 Linear@::w]
  addn :0 (_ : nat)-> (_ : nat)-> nat@::w]
  one :0 nat@::w]
  zero :0 nat@::w]
  nat :0 Type@::w]
  unit :0 Type@::w]
}
t  := unit
post_ctx := {
  _ :0 channel@::1]
  openCh :0 (_ : nat)-> channel@::w]
  channel :0 Linear@::w]
  addn :0 (_ : nat)-> (_ : nat)-> nat@::w]
  one :0 nat@::w]
  zero :0 nat@::w]
  nat :0 Type@::w]
  unit :1 Type@::w]
}

infer
pre_ctx := {
  openCh :0 (_ : nat)-> channel@::w]
  channel :0 Linear@::w]
  addn :0 (_ : nat)-> (_ : nat)-> nat@::w]
  one :0 nat@::w]
  zero :0 nat@::w]
  nat :0 Type@::w]
  unit :0 Type@::w]
}
t  := (_ : channel)-> unit
post_ctx := {
  openCh :0 (_ : nat)-> channel@::w]
  channel :1 Linear@::w]
  addn :0 (_ : nat)-> (_ : nat)-> nat@::w]
  one :0 nat@::w]
  zero :0 nat@::w]
  nat :0 Type@::w]
  unit :1 Type@::w]
}

infer
pre_ctx := {
  openCh :0 (_ : nat)-> channel@::w]
  channel :0 Linear@::w]
  addn :0 (_ : nat)-> (_ : nat)-> nat@::w]
  one :0 nat@::w]
  zero :0 nat@::w]
  nat :0 Type@::w]
  unit :0 Type@::w]
}
t  := channel
post_ctx := {
  openCh :0 (_ : nat)-> channel@::w]
  channel :1 Linear@::w]
  addn :0 (_ : nat)-> (_ : nat)-> nat@::w]
  one :0 nat@::w]
  zero :0 nat@::w]
  nat :0 Type@::w]
  unit :0 Type@::w]
}

infer
pre_ctx := {
  _ :0 channel@::1]
  openCh :0 (_ : nat)-> channel@::w]
  channel :0 Linear@::w]
  addn :0 (_ : nat)-> (_ : nat)-> nat@::w]
  one :0 nat@::w]
  zero :0 nat@::w]
  nat :0 Type@::w]
  unit :0 Type@::w]
}
t  := unit
post_ctx := {
  _ :0 channel@::1]
  openCh :0 (_ : nat)-> channel@::w]
  channel :0 Linear@::w]
  addn :0 (_ : nat)-> (_ : nat)-> nat@::w]
  one :0 nat@::w]
  zero :0 nat@::w]
  nat :0 Type@::w]
  unit :1 Type@::w]
}

infer
pre_ctx := {
  openCh :0 (_ : nat)-> channel@::w]
  channel :0 Linear@::w]
  addn :0 (_ : nat)-> (_ : nat)-> nat@::w]
  one :0 nat@::w]
  zero :0 nat@::w]
  nat :0 Type@::w]
  unit :0 Type@::w]
}
t  := (_ : channel)-> unit
post_ctx := {
  openCh :0 (_ : nat)-> channel@::w]
  channel :1 Linear@::w]
  addn :0 (_ : nat)-> (_ : nat)-> nat@::w]
  one :0 nat@::w]
  zero :0 nat@::w]
  nat :0 Type@::w]
  unit :1 Type@::w]
}

infer
pre_ctx := {
  closeCh :0 (_ : channel)-> unit@::w]
  openCh :0 (_ : nat)-> channel@::w]
  channel :0 Linear@::w]
  addn :0 (_ : nat)-> (_ : nat)-> nat@::w]
  one :0 nat@::w]
  zero :0 nat@::w]
  nat :0 Type@::w]
  unit :0 Type@::w]
}
t  := channel
post_ctx := {
  closeCh :0 (_ : channel)-> unit@::w]
  openCh :0 (_ : nat)-> channel@::w]
  channel :1 Linear@::w]
  addn :0 (_ : nat)-> (_ : nat)-> nat@::w]
  one :0 nat@::w]
  zero :0 nat@::w]
  nat :0 Type@::w]
  unit :0 Type@::w]
}

infer
pre_ctx := {
  _ :0 channel@::1]
  closeCh :0 (_ : channel)-> unit@::w]
  openCh :0 (_ : nat)-> channel@::w]
  channel :0 Linear@::w]
  addn :0 (_ : nat)-> (_ : nat)-> nat@::w]
  one :0 nat@::w]
  zero :0 nat@::w]
  nat :0 Type@::w]
  unit :0 Type@::w]
}
t  := nat
post_ctx := {
  _ :0 channel@::1]
  closeCh :0 (_ : channel)-> unit@::w]
  openCh :0 (_ : nat)-> channel@::w]
  channel :0 Linear@::w]
  addn :0 (_ : nat)-> (_ : nat)-> nat@::w]
  one :0 nat@::w]
  zero :0 nat@::w]
  nat :1 Type@::w]
  unit :0 Type@::w]
}

infer
pre_ctx := {
  _ :0 nat@::w]
  _ :0 channel@::1]
  closeCh :0 (_ : channel)-> unit@::w]
  openCh :0 (_ : nat)-> channel@::w]
  channel :0 Linear@::w]
  addn :0 (_ : nat)-> (_ : nat)-> nat@::w]
  one :0 nat@::w]
  zero :0 nat@::w]
  nat :0 Type@::w]
  unit :0 Type@::w]
}
t  := channel
post_ctx := {
  _ :0 nat@::w]
  _ :0 channel@::1]
  closeCh :0 (_ : channel)-> unit@::w]
  openCh :0 (_ : nat)-> channel@::w]
  channel :1 Linear@::w]
  addn :0 (_ : nat)-> (_ : nat)-> nat@::w]
  one :0 nat@::w]
  zero :0 nat@::w]
  nat :0 Type@::w]
  unit :0 Type@::w]
}

infer
pre_ctx := {
  _ :0 channel@::1]
  closeCh :0 (_ : channel)-> unit@::w]
  openCh :0 (_ : nat)-> channel@::w]
  channel :0 Linear@::w]
  addn :0 (_ : nat)-> (_ : nat)-> nat@::w]
  one :0 nat@::w]
  zero :0 nat@::w]
  nat :0 Type@::w]
  unit :0 Type@::w]
}
t  := (nat * _ ->channel)
post_ctx := {
  _ :0 channel@::1]
  closeCh :0 (_ : channel)-> unit@::w]
  openCh :0 (_ : nat)-> channel@::w]
  channel :1 Linear@::w]
  addn :0 (_ : nat)-> (_ : nat)-> nat@::w]
  one :0 nat@::w]
  zero :0 nat@::w]
  nat :1 Type@::w]
  unit :0 Type@::w]
}

infer
pre_ctx := {
  closeCh :0 (_ : channel)-> unit@::w]
  openCh :0 (_ : nat)-> channel@::w]
  channel :0 Linear@::w]
  addn :0 (_ : nat)-> (_ : nat)-> nat@::w]
  one :0 nat@::w]
  zero :0 nat@::w]
  nat :0 Type@::w]
  unit :0 Type@::w]
}
t  := (_ : channel)-> (nat * _ ->channel)
post_ctx := {
  closeCh :0 (_ : channel)-> unit@::w]
  openCh :0 (_ : nat)-> channel@::w]
  channel :w Linear@::w]
  addn :0 (_ : nat)-> (_ : nat)-> nat@::w]
  one :0 nat@::w]
  zero :0 nat@::w]
  nat :1 Type@::w]
  unit :0 Type@::w]
}

infer
pre_ctx := {
  closeCh :0 (_ : channel)-> unit@::w]
  openCh :0 (_ : nat)-> channel@::w]
  channel :0 Linear@::w]
  addn :0 (_ : nat)-> (_ : nat)-> nat@::w]
  one :0 nat@::w]
  zero :0 nat@::w]
  nat :0 Type@::w]
  unit :0 Type@::w]
}
t  := channel
post_ctx := {
  closeCh :0 (_ : channel)-> unit@::w]
  openCh :0 (_ : nat)-> channel@::w]
  channel :1 Linear@::w]
  addn :0 (_ : nat)-> (_ : nat)-> nat@::w]
  one :0 nat@::w]
  zero :0 nat@::w]
  nat :0 Type@::w]
  unit :0 Type@::w]
}

infer
pre_ctx := {
  _ :0 channel@::1]
  closeCh :0 (_ : channel)-> unit@::w]
  openCh :0 (_ : nat)-> channel@::w]
  channel :0 Linear@::w]
  addn :0 (_ : nat)-> (_ : nat)-> nat@::w]
  one :0 nat@::w]
  zero :0 nat@::w]
  nat :0 Type@::w]
  unit :0 Type@::w]
}
t  := nat
post_ctx := {
  _ :0 channel@::1]
  closeCh :0 (_ : channel)-> unit@::w]
  openCh :0 (_ : nat)-> channel@::w]
  channel :0 Linear@::w]
  addn :0 (_ : nat)-> (_ : nat)-> nat@::w]
  one :0 nat@::w]
  zero :0 nat@::w]
  nat :1 Type@::w]
  unit :0 Type@::w]
}

infer
pre_ctx := {
  _ :0 nat@::w]
  _ :0 channel@::1]
  closeCh :0 (_ : channel)-> unit@::w]
  openCh :0 (_ : nat)-> channel@::w]
  channel :0 Linear@::w]
  addn :0 (_ : nat)-> (_ : nat)-> nat@::w]
  one :0 nat@::w]
  zero :0 nat@::w]
  nat :0 Type@::w]
  unit :0 Type@::w]
}
t  := channel
post_ctx := {
  _ :0 nat@::w]
  _ :0 channel@::1]
  closeCh :0 (_ : channel)-> unit@::w]
  openCh :0 (_ : nat)-> channel@::w]
  channel :1 Linear@::w]
  addn :0 (_ : nat)-> (_ : nat)-> nat@::w]
  one :0 nat@::w]
  zero :0 nat@::w]
  nat :0 Type@::w]
  unit :0 Type@::w]
}

infer
pre_ctx := {
  _ :0 channel@::1]
  closeCh :0 (_ : channel)-> unit@::w]
  openCh :0 (_ : nat)-> channel@::w]
  channel :0 Linear@::w]
  addn :0 (_ : nat)-> (_ : nat)-> nat@::w]
  one :0 nat@::w]
  zero :0 nat@::w]
  nat :0 Type@::w]
  unit :0 Type@::w]
}
t  := (nat * _ ->channel)
post_ctx := {
  _ :0 channel@::1]
  closeCh :0 (_ : channel)-> unit@::w]
  openCh :0 (_ : nat)-> channel@::w]
  channel :1 Linear@::w]
  addn :0 (_ : nat)-> (_ : nat)-> nat@::w]
  one :0 nat@::w]
  zero :0 nat@::w]
  nat :1 Type@::w]
  unit :0 Type@::w]
}

infer
pre_ctx := {
  closeCh :0 (_ : channel)-> unit@::w]
  openCh :0 (_ : nat)-> channel@::w]
  channel :0 Linear@::w]
  addn :0 (_ : nat)-> (_ : nat)-> nat@::w]
  one :0 nat@::w]
  zero :0 nat@::w]
  nat :0 Type@::w]
  unit :0 Type@::w]
}
t  := (_ : channel)-> (nat * _ ->channel)
post_ctx := {
  closeCh :0 (_ : channel)-> unit@::w]
  openCh :0 (_ : nat)-> channel@::w]
  channel :w Linear@::w]
  addn :0 (_ : nat)-> (_ : nat)-> nat@::w]
  one :0 nat@::w]
  zero :0 nat@::w]
  nat :1 Type@::w]
  unit :0 Type@::w]
}

infer
pre_ctx := {
  readn :0 (_ : channel)-> (nat * _ ->channel)@::w]
  closeCh :0 (_ : channel)-> unit@::w]
  openCh :0 (_ : nat)-> channel@::w]
  channel :0 Linear@::w]
  addn :0 (_ : nat)-> (_ : nat)-> nat@::w]
  one :0 nat@::w]
  zero :0 nat@::w]
  nat :0 Type@::w]
  unit :0 Type@::w]
}
t  := openCh
post_ctx := {
  readn :0 (_ : channel)-> (nat * _ ->channel)@::w]
  closeCh :0 (_ : channel)-> unit@::w]
  openCh :1 (_ : nat)-> channel@::w]
  channel :0 Linear@::w]
  addn :0 (_ : nat)-> (_ : nat)-> nat@::w]
  one :0 nat@::w]
  zero :0 nat@::w]
  nat :0 Type@::w]
  unit :0 Type@::w]
}

infer
pre_ctx := {
  readn :0 (_ : channel)-> (nat * _ ->channel)@::w]
  closeCh :0 (_ : channel)-> unit@::w]
  openCh :0 (_ : nat)-> channel@::w]
  channel :0 Linear@::w]
  addn :0 (_ : nat)-> (_ : nat)-> nat@::w]
  one :0 nat@::w]
  zero :0 nat@::w]
  nat :0 Type@::w]
  unit :0 Type@::w]
}
t  := nat
post_ctx := {
  readn :0 (_ : channel)-> (nat * _ ->channel)@::w]
  closeCh :0 (_ : channel)-> unit@::w]
  openCh :0 (_ : nat)-> channel@::w]
  channel :0 Linear@::w]
  addn :0 (_ : nat)-> (_ : nat)-> nat@::w]
  one :0 nat@::w]
  zero :0 nat@::w]
  nat :1 Type@::w]
  unit :0 Type@::w]
}

infer
pre_ctx := {
  readn :0 (_ : channel)-> (nat * _ ->channel)@::w]
  closeCh :0 (_ : channel)-> unit@::w]
  openCh :0 (_ : nat)-> channel@::w]
  channel :0 Linear@::w]
  addn :0 (_ : nat)-> (_ : nat)-> nat@::w]
  one :0 nat@::w]
  zero :0 nat@::w]
  nat :0 Type@::w]
  unit :0 Type@::w]
}
t  := one
post_ctx := {
  readn :0 (_ : channel)-> (nat * _ ->channel)@::w]
  closeCh :0 (_ : channel)-> unit@::w]
  openCh :0 (_ : nat)-> channel@::w]
  channel :0 Linear@::w]
  addn :0 (_ : nat)-> (_ : nat)-> nat@::w]
  one :1 nat@::w]
  zero :0 nat@::w]
  nat :0 Type@::w]
  unit :0 Type@::w]
}

check
pre_ctx := {
  readn :0 (_ : channel)-> (nat * _ ->channel)@::w]
  closeCh :0 (_ : channel)-> unit@::w]
  openCh :0 (_ : nat)-> channel@::w]
  channel :0 Linear@::w]
  addn :0 (_ : nat)-> (_ : nat)-> nat@::w]
  one :0 nat@::w]
  zero :0 nat@::w]
  nat :0 Type@::w]
  unit :0 Type@::w]
}
t  := one
ty := nat
post_ctx := {
  readn :0 (_ : channel)-> (nat * _ ->channel)@::w]
  closeCh :0 (_ : channel)-> unit@::w]
  openCh :0 (_ : nat)-> channel@::w]
  channel :0 Linear@::w]
  addn :0 (_ : nat)-> (_ : nat)-> nat@::w]
  one :1 nat@::w]
  zero :0 nat@::w]
  nat :0 Type@::w]
  unit :0 Type@::w]
}

infer
pre_ctx := {
  readn :0 (_ : channel)-> (nat * _ ->channel)@::w]
  closeCh :0 (_ : channel)-> unit@::w]
  openCh :0 (_ : nat)-> channel@::w]
  channel :0 Linear@::w]
  addn :0 (_ : nat)-> (_ : nat)-> nat@::w]
  one :0 nat@::w]
  zero :0 nat@::w]
  nat :0 Type@::w]
  unit :0 Type@::w]
}
t  := (openCh) one
post_ctx := {
  readn :0 (_ : channel)-> (nat * _ ->channel)@::w]
  closeCh :0 (_ : channel)-> unit@::w]
  openCh :1 (_ : nat)-> channel@::w]
  channel :0 Linear@::w]
  addn :0 (_ : nat)-> (_ : nat)-> nat@::w]
  one :1 nat@::w]
  zero :0 nat@::w]
  nat :0 Type@::w]
  unit :0 Type@::w]
}

infer
pre_ctx := {
  readn :0 (_ : channel)-> (nat * _ ->channel)@::w]
  closeCh :0 (_ : channel)-> unit@::w]
  openCh :0 (_ : nat)-> channel@::w]
  channel :0 Linear@::w]
  addn :0 (_ : nat)-> (_ : nat)-> nat@::w]
  one :0 nat@::w]
  zero :0 nat@::w]
  nat :0 Type@::w]
  unit :0 Type@::w]
}
t  := channel
post_ctx := {
  readn :0 (_ : channel)-> (nat * _ ->channel)@::w]
  closeCh :0 (_ : channel)-> unit@::w]
  openCh :0 (_ : nat)-> channel@::w]
  channel :1 Linear@::w]
  addn :0 (_ : nat)-> (_ : nat)-> nat@::w]
  one :0 nat@::w]
  zero :0 nat@::w]
  nat :0 Type@::w]
  unit :0 Type@::w]
}

infer
pre_ctx := {
  ch :0 channel@::1]
  readn :0 (_ : channel)-> (nat * _ ->channel)@::w]
  closeCh :0 (_ : channel)-> unit@::w]
  openCh :0 (_ : nat)-> channel@::w]
  channel :0 Linear@::w]
  addn :0 (_ : nat)-> (_ : nat)-> nat@::w]
  one :0 nat@::w]
  zero :0 nat@::w]
  nat :0 Type@::w]
  unit :0 Type@::w]
}
t  := readn
post_ctx := {
  ch :0 channel@::1]
  readn :1 (_ : channel)-> (nat * _ ->channel)@::w]
  closeCh :0 (_ : channel)-> unit@::w]
  openCh :0 (_ : nat)-> channel@::w]
  channel :0 Linear@::w]
  addn :0 (_ : nat)-> (_ : nat)-> nat@::w]
  one :0 nat@::w]
  zero :0 nat@::w]
  nat :0 Type@::w]
  unit :0 Type@::w]
}

infer
pre_ctx := {
  ch :0 channel@::1]
  readn :0 (_ : channel)-> (nat * _ ->channel)@::w]
  closeCh :0 (_ : channel)-> unit@::w]
  openCh :0 (_ : nat)-> channel@::w]
  channel :0 Linear@::w]
  addn :0 (_ : nat)-> (_ : nat)-> nat@::w]
  one :0 nat@::w]
  zero :0 nat@::w]
  nat :0 Type@::w]
  unit :0 Type@::w]
}
t  := channel
post_ctx := {
  ch :0 channel@::1]
  readn :0 (_ : channel)-> (nat * _ ->channel)@::w]
  closeCh :0 (_ : channel)-> unit@::w]
  openCh :0 (_ : nat)-> channel@::w]
  channel :1 Linear@::w]
  addn :0 (_ : nat)-> (_ : nat)-> nat@::w]
  one :0 nat@::w]
  zero :0 nat@::w]
  nat :0 Type@::w]
  unit :0 Type@::w]
}

infer
pre_ctx := {
  ch :0 channel@::1]
  readn :0 (_ : channel)-> (nat * _ ->channel)@::w]
  closeCh :0 (_ : channel)-> unit@::w]
  openCh :0 (_ : nat)-> channel@::w]
  channel :0 Linear@::w]
  addn :0 (_ : nat)-> (_ : nat)-> nat@::w]
  one :0 nat@::w]
  zero :0 nat@::w]
  nat :0 Type@::w]
  unit :0 Type@::w]
}
t  := ch
post_ctx := {
  ch :1 channel@::1]
  readn :0 (_ : channel)-> (nat * _ ->channel)@::w]
  closeCh :0 (_ : channel)-> unit@::w]
  openCh :0 (_ : nat)-> channel@::w]
  channel :0 Linear@::w]
  addn :0 (_ : nat)-> (_ : nat)-> nat@::w]
  one :0 nat@::w]
  zero :0 nat@::w]
  nat :0 Type@::w]
  unit :0 Type@::w]
}

check
pre_ctx := {
  ch :0 channel@::1]
  readn :0 (_ : channel)-> (nat * _ ->channel)@::w]
  closeCh :0 (_ : channel)-> unit@::w]
  openCh :0 (_ : nat)-> channel@::w]
  channel :0 Linear@::w]
  addn :0 (_ : nat)-> (_ : nat)-> nat@::w]
  one :0 nat@::w]
  zero :0 nat@::w]
  nat :0 Type@::w]
  unit :0 Type@::w]
}
t  := ch
ty := channel
post_ctx := {
  ch :1 channel@::1]
  readn :0 (_ : channel)-> (nat * _ ->channel)@::w]
  closeCh :0 (_ : channel)-> unit@::w]
  openCh :0 (_ : nat)-> channel@::w]
  channel :0 Linear@::w]
  addn :0 (_ : nat)-> (_ : nat)-> nat@::w]
  one :0 nat@::w]
  zero :0 nat@::w]
  nat :0 Type@::w]
  unit :0 Type@::w]
}

infer
pre_ctx := {
  ch :0 channel@::1]
  readn :0 (_ : channel)-> (nat * _ ->channel)@::w]
  closeCh :0 (_ : channel)-> unit@::w]
  openCh :0 (_ : nat)-> channel@::w]
  channel :0 Linear@::w]
  addn :0 (_ : nat)-> (_ : nat)-> nat@::w]
  one :0 nat@::w]
  zero :0 nat@::w]
  nat :0 Type@::w]
  unit :0 Type@::w]
}
t  := (readn) ch
post_ctx := {
  ch :1 channel@::1]
  readn :1 (_ : channel)-> (nat * _ ->channel)@::w]
  closeCh :0 (_ : channel)-> unit@::w]
  openCh :0 (_ : nat)-> channel@::w]
  channel :0 Linear@::w]
  addn :0 (_ : nat)-> (_ : nat)-> nat@::w]
  one :0 nat@::w]
  zero :0 nat@::w]
  nat :0 Type@::w]
  unit :0 Type@::w]
}

infer
pre_ctx := {
  ch :0 channel@::1]
  readn :0 (_ : channel)-> (nat * _ ->channel)@::w]
  closeCh :0 (_ : channel)-> unit@::w]
  openCh :0 (_ : nat)-> channel@::w]
  channel :0 Linear@::w]
  addn :0 (_ : nat)-> (_ : nat)-> nat@::w]
  one :0 nat@::w]
  zero :0 nat@::w]
  nat :0 Type@::w]
  unit :0 Type@::w]
}
t  := nat
post_ctx := {
  ch :0 channel@::1]
  readn :0 (_ : channel)-> (nat * _ ->channel)@::w]
  closeCh :0 (_ : channel)-> unit@::w]
  openCh :0 (_ : nat)-> channel@::w]
  channel :0 Linear@::w]
  addn :0 (_ : nat)-> (_ : nat)-> nat@::w]
  one :0 nat@::w]
  zero :0 nat@::w]
  nat :1 Type@::w]
  unit :0 Type@::w]
}

infer
pre_ctx := {
  _ :0 nat@::w]
  ch :0 channel@::1]
  readn :0 (_ : channel)-> (nat * _ ->channel)@::w]
  closeCh :0 (_ : channel)-> unit@::w]
  openCh :0 (_ : nat)-> channel@::w]
  channel :0 Linear@::w]
  addn :0 (_ : nat)-> (_ : nat)-> nat@::w]
  one :0 nat@::w]
  zero :0 nat@::w]
  nat :0 Type@::w]
  unit :0 Type@::w]
}
t  := channel
post_ctx := {
  _ :0 nat@::w]
  ch :0 channel@::1]
  readn :0 (_ : channel)-> (nat * _ ->channel)@::w]
  closeCh :0 (_ : channel)-> unit@::w]
  openCh :0 (_ : nat)-> channel@::w]
  channel :1 Linear@::w]
  addn :0 (_ : nat)-> (_ : nat)-> nat@::w]
  one :0 nat@::w]
  zero :0 nat@::w]
  nat :0 Type@::w]
  unit :0 Type@::w]
}

infer
pre_ctx := {
  ch :0 channel@::1]
  n :0 nat@::w]
  ch :0 channel@::1]
  readn :0 (_ : channel)-> (nat * _ ->channel)@::w]
  closeCh :0 (_ : channel)-> unit@::w]
  openCh :0 (_ : nat)-> channel@::w]
  channel :0 Linear@::w]
  addn :0 (_ : nat)-> (_ : nat)-> nat@::w]
  one :0 nat@::w]
  zero :0 nat@::w]
  nat :0 Type@::w]
  unit :0 Type@::w]
}
t  := addn
post_ctx := {
  ch :0 channel@::1]
  n :0 nat@::w]
  ch :0 channel@::1]
  readn :0 (_ : channel)-> (nat * _ ->channel)@::w]
  closeCh :0 (_ : channel)-> unit@::w]
  openCh :0 (_ : nat)-> channel@::w]
  channel :0 Linear@::w]
  addn :1 (_ : nat)-> (_ : nat)-> nat@::w]
  one :0 nat@::w]
  zero :0 nat@::w]
  nat :0 Type@::w]
  unit :0 Type@::w]
}

infer
pre_ctx := {
  ch :0 channel@::1]
  n :0 nat@::w]
  ch :0 channel@::1]
  readn :0 (_ : channel)-> (nat * _ ->channel)@::w]
  closeCh :0 (_ : channel)-> unit@::w]
  openCh :0 (_ : nat)-> channel@::w]
  channel :0 Linear@::w]
  addn :0 (_ : nat)-> (_ : nat)-> nat@::w]
  one :0 nat@::w]
  zero :0 nat@::w]
  nat :0 Type@::w]
  unit :0 Type@::w]
}
t  := nat
post_ctx := {
  ch :0 channel@::1]
  n :0 nat@::w]
  ch :0 channel@::1]
  readn :0 (_ : channel)-> (nat * _ ->channel)@::w]
  closeCh :0 (_ : channel)-> unit@::w]
  openCh :0 (_ : nat)-> channel@::w]
  channel :0 Linear@::w]
  addn :0 (_ : nat)-> (_ : nat)-> nat@::w]
  one :0 nat@::w]
  zero :0 nat@::w]
  nat :1 Type@::w]
  unit :0 Type@::w]
}

infer
pre_ctx := {
  ch :0 channel@::1]
  n :0 nat@::w]
  ch :0 channel@::1]
  readn :0 (_ : channel)-> (nat * _ ->channel)@::w]
  closeCh :0 (_ : channel)-> unit@::w]
  openCh :0 (_ : nat)-> channel@::w]
  channel :0 Linear@::w]
  addn :0 (_ : nat)-> (_ : nat)-> nat@::w]
  one :0 nat@::w]
  zero :0 nat@::w]
  nat :0 Type@::w]
  unit :0 Type@::w]
}
t  := n
post_ctx := {
  ch :0 channel@::1]
  n :1 nat@::w]
  ch :0 channel@::1]
  readn :0 (_ : channel)-> (nat * _ ->channel)@::w]
  closeCh :0 (_ : channel)-> unit@::w]
  openCh :0 (_ : nat)-> channel@::w]
  channel :0 Linear@::w]
  addn :0 (_ : nat)-> (_ : nat)-> nat@::w]
  one :0 nat@::w]
  zero :0 nat@::w]
  nat :0 Type@::w]
  unit :0 Type@::w]
}

check
pre_ctx := {
  ch :0 channel@::1]
  n :0 nat@::w]
  ch :0 channel@::1]
  readn :0 (_ : channel)-> (nat * _ ->channel)@::w]
  closeCh :0 (_ : channel)-> unit@::w]
  openCh :0 (_ : nat)-> channel@::w]
  channel :0 Linear@::w]
  addn :0 (_ : nat)-> (_ : nat)-> nat@::w]
  one :0 nat@::w]
  zero :0 nat@::w]
  nat :0 Type@::w]
  unit :0 Type@::w]
}
t  := n
ty := nat
post_ctx := {
  ch :0 channel@::1]
  n :1 nat@::w]
  ch :0 channel@::1]
  readn :0 (_ : channel)-> (nat * _ ->channel)@::w]
  closeCh :0 (_ : channel)-> unit@::w]
  openCh :0 (_ : nat)-> channel@::w]
  channel :0 Linear@::w]
  addn :0 (_ : nat)-> (_ : nat)-> nat@::w]
  one :0 nat@::w]
  zero :0 nat@::w]
  nat :0 Type@::w]
  unit :0 Type@::w]
}

infer
pre_ctx := {
  ch :0 channel@::1]
  n :0 nat@::w]
  ch :0 channel@::1]
  readn :0 (_ : channel)-> (nat * _ ->channel)@::w]
  closeCh :0 (_ : channel)-> unit@::w]
  openCh :0 (_ : nat)-> channel@::w]
  channel :0 Linear@::w]
  addn :0 (_ : nat)-> (_ : nat)-> nat@::w]
  one :0 nat@::w]
  zero :0 nat@::w]
  nat :0 Type@::w]
  unit :0 Type@::w]
}
t  := (addn) n
post_ctx := {
  ch :0 channel@::1]
  n :1 nat@::w]
  ch :0 channel@::1]
  readn :0 (_ : channel)-> (nat * _ ->channel)@::w]
  closeCh :0 (_ : channel)-> unit@::w]
  openCh :0 (_ : nat)-> channel@::w]
  channel :0 Linear@::w]
  addn :1 (_ : nat)-> (_ : nat)-> nat@::w]
  one :0 nat@::w]
  zero :0 nat@::w]
  nat :0 Type@::w]
  unit :0 Type@::w]
}

infer
pre_ctx := {
  ch :0 channel@::1]
  n :0 nat@::w]
  ch :0 channel@::1]
  readn :0 (_ : channel)-> (nat * _ ->channel)@::w]
  closeCh :0 (_ : channel)-> unit@::w]
  openCh :0 (_ : nat)-> channel@::w]
  channel :0 Linear@::w]
  addn :0 (_ : nat)-> (_ : nat)-> nat@::w]
  one :0 nat@::w]
  zero :0 nat@::w]
  nat :0 Type@::w]
  unit :0 Type@::w]
}
t  := nat
post_ctx := {
  ch :0 channel@::1]
  n :0 nat@::w]
  ch :0 channel@::1]
  readn :0 (_ : channel)-> (nat * _ ->channel)@::w]
  closeCh :0 (_ : channel)-> unit@::w]
  openCh :0 (_ : nat)-> channel@::w]
  channel :0 Linear@::w]
  addn :0 (_ : nat)-> (_ : nat)-> nat@::w]
  one :0 nat@::w]
  zero :0 nat@::w]
  nat :1 Type@::w]
  unit :0 Type@::w]
}

infer
pre_ctx := {
  ch :0 channel@::1]
  n :0 nat@::w]
  ch :0 channel@::1]
  readn :0 (_ : channel)-> (nat * _ ->channel)@::w]
  closeCh :0 (_ : channel)-> unit@::w]
  openCh :0 (_ : nat)-> channel@::w]
  channel :0 Linear@::w]
  addn :0 (_ : nat)-> (_ : nat)-> nat@::w]
  one :0 nat@::w]
  zero :0 nat@::w]
  nat :0 Type@::w]
  unit :0 Type@::w]
}
t  := n
post_ctx := {
  ch :0 channel@::1]
  n :1 nat@::w]
  ch :0 channel@::1]
  readn :0 (_ : channel)-> (nat * _ ->channel)@::w]
  closeCh :0 (_ : channel)-> unit@::w]
  openCh :0 (_ : nat)-> channel@::w]
  channel :0 Linear@::w]
  addn :0 (_ : nat)-> (_ : nat)-> nat@::w]
  one :0 nat@::w]
  zero :0 nat@::w]
  nat :0 Type@::w]
  unit :0 Type@::w]
}

check
pre_ctx := {
  ch :0 channel@::1]
  n :0 nat@::w]
  ch :0 channel@::1]
  readn :0 (_ : channel)-> (nat * _ ->channel)@::w]
  closeCh :0 (_ : channel)-> unit@::w]
  openCh :0 (_ : nat)-> channel@::w]
  channel :0 Linear@::w]
  addn :0 (_ : nat)-> (_ : nat)-> nat@::w]
  one :0 nat@::w]
  zero :0 nat@::w]
  nat :0 Type@::w]
  unit :0 Type@::w]
}
t  := n
ty := nat
post_ctx := {
  ch :0 channel@::1]
  n :1 nat@::w]
  ch :0 channel@::1]
  readn :0 (_ : channel)-> (nat * _ ->channel)@::w]
  closeCh :0 (_ : channel)-> unit@::w]
  openCh :0 (_ : nat)-> channel@::w]
  channel :0 Linear@::w]
  addn :0 (_ : nat)-> (_ : nat)-> nat@::w]
  one :0 nat@::w]
  zero :0 nat@::w]
  nat :0 Type@::w]
  unit :0 Type@::w]
}

infer
pre_ctx := {
  ch :0 channel@::1]
  n :0 nat@::w]
  ch :0 channel@::1]
  readn :0 (_ : channel)-> (nat * _ ->channel)@::w]
  closeCh :0 (_ : channel)-> unit@::w]
  openCh :0 (_ : nat)-> channel@::w]
  channel :0 Linear@::w]
  addn :0 (_ : nat)-> (_ : nat)-> nat@::w]
  one :0 nat@::w]
  zero :0 nat@::w]
  nat :0 Type@::w]
  unit :0 Type@::w]
}
t  := ((addn) n) n
post_ctx := {
  ch :0 channel@::1]
  n :w nat@::w]
  ch :0 channel@::1]
  readn :0 (_ : channel)-> (nat * _ ->channel)@::w]
  closeCh :0 (_ : channel)-> unit@::w]
  openCh :0 (_ : nat)-> channel@::w]
  channel :0 Linear@::w]
  addn :1 (_ : nat)-> (_ : nat)-> nat@::w]
  one :0 nat@::w]
  zero :0 nat@::w]
  nat :0 Type@::w]
  unit :0 Type@::w]
}

